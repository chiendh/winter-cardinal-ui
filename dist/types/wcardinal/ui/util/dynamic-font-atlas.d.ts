import { Texture } from "pixi.js";
import { DynamicFontAtlasCharacter } from "./dynamic-font-atlas-character";
import { DynamicFontAtlasCharacters } from "./dynamic-font-atlas-characters";
import { DynamicFontAtlasFont } from "./dynamic-font-atlas-font";
export declare class DynamicFontAtlas {
    protected _id: string;
    protected _canvas: HTMLCanvasElement | null;
    protected _context: CanvasRenderingContext2D | null;
    protected _font: DynamicFontAtlasFont;
    protected _characters: DynamicFontAtlasCharacters;
    protected _length: number;
    protected _unrefCount: number;
    protected _width: number;
    protected _height: number;
    protected _revision: number;
    protected _revisionUpdated: number;
    protected _texture: Texture;
    constructor(fontId: string, fontSize: number, fontColor: number, resolution: number);
    get id(): string;
    get font(): DynamicFontAtlasFont;
    get width(): number;
    get height(): number;
    get canvas(): HTMLCanvasElement | null;
    get characters(): DynamicFontAtlasCharacters;
    get texture(): Texture;
    protected add_(character: string, characters: DynamicFontAtlasCharacters, reserved?: boolean): void;
    protected remove_(character: string, characters: DynamicFontAtlasCharacters): void;
    protected cleanup_(): void;
    add(targets: string, reserved?: boolean): void;
    remove(targets: string): void;
    get(character: string): DynamicFontAtlasCharacter | undefined;
    getAdvance(target: string): number;
    getContext(): CanvasRenderingContext2D | null;
    update(): boolean;
    getRevision(): number;
    getRevisionUpdate(): number;
    get length(): number;
    destroy(): void;
    toPowerOf2(size: number): number;
}
