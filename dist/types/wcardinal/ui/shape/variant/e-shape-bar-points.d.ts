import { Matrix, Point } from "pixi.js";
import { EShape } from "../e-shape";
import { EShapePoints } from "../e-shape-points";
import { EShapePointsStyle } from "../e-shape-points-style";
import { EShapeResourceManagerDeserialization } from "../e-shape-resource-manager-deserialization";
import { EShapeResourceManagerSerialization } from "../e-shape-resource-manager-serialization";
import { EShapeBarPosition } from "./e-shape-bar-position";
import { EShapeLineBasePoints, EShapeLineBasePointsHitTester, EShapeLineBasePointsTestRange } from "./e-shape-line-base-points";
export declare class EShapeBarPoints implements EShapeLineBasePoints {
    protected _parent: EShape;
    protected _id: number;
    protected _style: EShapePointsStyle;
    protected _values: [number, number, number, number];
    protected _segments: number[];
    protected _size: number;
    protected _position: EShapeBarPosition;
    protected _updatedSize: number;
    protected _updatedParentSizeX: number;
    protected _updatedParentSizeY: number;
    protected _updatedPosition: EShapeBarPosition;
    constructor(parent: EShape, position: EShapeBarPosition, size: number, style: EShapePointsStyle);
    protected getComputedSize(size: number, position: EShapeBarPosition, sizeX: number, sizeY: number): number;
    protected update(): void;
    get length(): number;
    get id(): number;
    get values(): number[];
    set values(values: number[]);
    get segments(): number[];
    set segments(segments: number[]);
    get size(): number;
    set size(size: number);
    get position(): EShapeBarPosition;
    set position(position: EShapeBarPosition);
    get style(): EShapePointsStyle;
    set style(style: EShapePointsStyle);
    copy(source: EShapePoints): this;
    set(newValues?: number[], newSegments?: number[], newStyle?: EShapePointsStyle): this;
    protected moveTo(position?: EShapeBarPosition, size?: number, style?: EShapePointsStyle): this;
    clone(parent: EShape): EShapeBarPoints;
    toPoints(transform: Matrix): Point[];
    serialize(manager: EShapeResourceManagerSerialization): number;
    deserialize(resourceId: number, manager: EShapeResourceManagerDeserialization): void;
    calcHitPointAbs<RESULT>(x: number, y: number, ax: number, ay: number, threshold: number, range: EShapeLineBasePointsTestRange | null, tester: EShapeLineBasePointsHitTester<RESULT>, result: RESULT): boolean;
}
