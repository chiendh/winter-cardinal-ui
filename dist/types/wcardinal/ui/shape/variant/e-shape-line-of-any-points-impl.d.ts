import { Matrix, Point } from "pixi.js";
import { EShape } from "../e-shape";
import { EShapePoints } from "../e-shape-points";
import { EShapePointsStyle } from "../e-shape-points-style";
import { EShapeResourceManagerSerialization } from "../e-shape-resource-manager-serialization";
import { EShapeLineOfAnyPoints, EShapeLineOfAnyPointsHitTester, EShapeLineOfAnyPointsTestRange } from "./e-shape-line-of-any-points";
import { EShapeLineOfAnyPointsFill } from "./e-shape-line-of-any-points-fill";
import { EShapeLineOfAnyPointsPoint } from "./e-shape-line-of-any-points-point";
import { EShapeLineOfAnyPointsStroke } from "./e-shape-line-of-any-points-stroke";
export declare class EShapeLineOfAnyPointsImpl implements EShapeLineOfAnyPoints {
    protected static WORK_RANGE: [number, number];
    protected _parent: EShape;
    protected _values: number[];
    protected _valuesLength: number;
    protected _segments: number[];
    protected _size: EShapeLineOfAnyPointsPoint;
    protected _offset: EShapeLineOfAnyPointsPoint;
    protected _fill: EShapeLineOfAnyPointsFill;
    protected _stroke: EShapeLineOfAnyPointsStroke;
    protected _id: number;
    constructor(parent: EShape);
    get length(): number;
    get id(): number;
    get values(): number[];
    set values(values: number[]);
    get segments(): number[];
    set segments(segments: number[]);
    get style(): EShapePointsStyle;
    set style(style: EShapePointsStyle);
    get size(): EShapeLineOfAnyPointsPoint;
    get offset(): EShapeLineOfAnyPointsPoint;
    get fill(): EShapeLineOfAnyPointsFill;
    get stroke(): EShapeLineOfAnyPointsStroke;
    copy(source: EShapePoints): this;
    set(newValues?: number[], newSegments?: number[], newStyle?: EShapePointsStyle): this;
    updateUploaded(): void;
    clone(parent: EShape): EShapeLineOfAnyPointsImpl;
    toPoints(transform: Matrix): Point[];
    serialize(manager: EShapeResourceManagerSerialization): number;
    calcHitPointAbs<RESULT>(x: number, y: number, threshold: number, range: EShapeLineOfAnyPointsTestRange | null, tester: EShapeLineOfAnyPointsHitTester<RESULT>, result: RESULT): boolean;
}
