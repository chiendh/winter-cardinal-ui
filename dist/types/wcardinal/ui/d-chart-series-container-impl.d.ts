import { IPoint } from "pixi.js";
import { DChartCoordinate } from "./d-chart-coordinate";
import { DChartPlotArea } from "./d-chart-plot-area";
import { DChartRegion } from "./d-chart-region";
import { DChartRegionImpl } from "./d-chart-region-impl";
import { DChartSelection } from "./d-chart-selection";
import { DChartSeries, DChartSeriesHitResult } from "./d-chart-series";
import { DChartSeriesContainer, DChartSeriesContainerOptions } from "./d-chart-series-container";
import { DChartSeriesFillComputed, DChartSeriesFillComputedOptions } from "./d-chart-series-fill-computed";
import { DChartSeriesFillImpl } from "./d-chart-series-fill-impl";
import { DChartSeriesPaddingComputed, DChartSeriesPaddingComputedOptions } from "./d-chart-series-padding-computed";
import { DChartSeriesPaddingImpl } from "./d-chart-series-padding-impl";
import { DChartSeriesPointComputed, DChartSeriesPointComputedOptions } from "./d-chart-series-point-computed";
import { DChartSeriesPointImpl } from "./d-chart-series-point-impl";
import { DChartSeriesStrokeComputed, DChartSeriesStrokeComputedOptions } from "./d-chart-series-stroke-computed";
import { DChartSeriesStrokeImpl } from "./d-chart-series-stroke-impl";
export declare class DChartSeriesContainerImpl implements DChartSeriesContainer {
    protected static WORK_CALCHITPOINT: DChartSeriesHitResult;
    protected _plotArea: DChartPlotArea;
    protected _list: DChartSeries[];
    protected _domain: DChartRegionImpl;
    protected _range: DChartRegionImpl;
    protected _selection: DChartSelection | null;
    protected _fill: DChartSeriesFillImpl;
    protected _stroke: DChartSeriesStrokeImpl;
    protected _size: DChartSeriesPointImpl;
    protected _offset: DChartSeriesPointImpl;
    protected _padding: DChartSeriesPaddingImpl;
    constructor(plotArea: DChartPlotArea, options?: DChartSeriesContainerOptions);
    newFill(index: number, options: DChartSeriesFillComputedOptions | undefined): DChartSeriesFillComputed;
    newStroke(index: number, options: DChartSeriesStrokeComputedOptions | undefined): DChartSeriesStrokeComputed;
    newSize(index: number, options: DChartSeriesPointComputedOptions | undefined, x: number, y: number): DChartSeriesPointComputed;
    newOffset(index: number, options: DChartSeriesPointComputedOptions | undefined, x: number, y: number): DChartSeriesPointComputed;
    newPadding(index: number, options: DChartSeriesPaddingComputedOptions | undefined): DChartSeriesPaddingComputed;
    get plotArea(): DChartPlotArea;
    get selection(): DChartSelection | null;
    update(): void;
    add(series: DChartSeries): void;
    get(index: number): DChartSeries | null;
    indexOf(series: DChartSeries): number;
    clear(): this;
    size(): number;
    destroy(): void;
    getDomain(coordinate: DChartCoordinate, result: DChartRegion): DChartRegion;
    getRange(coordinate: DChartCoordinate, result: DChartRegion): DChartRegion;
    get domain(): DChartRegion;
    get range(): DChartRegion;
    hitTest(global: IPoint): DChartSeries | null;
    calcHitPoint(global: IPoint, result: DChartSeriesHitResult): DChartSeries | null;
}
