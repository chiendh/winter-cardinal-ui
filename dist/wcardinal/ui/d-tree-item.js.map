{"version":3,"file":"d-tree-item.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-tree-item.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\nimport { DisplayObject, interaction, Texture } from \"pixi.js\";\r\nimport { DLayoutHorizontal, DLayoutHorizontalOptions, DThemeLayoutHorizontal } from \"./d-layout-horizontal\";\r\nimport { DTreeItemRawData } from \"./d-tree\";\r\nimport { DTreeItemState } from \"./d-tree-item-state\";\r\nimport { DTreeItemTextAndImage } from \"./d-tree-item-text-and-image\";\r\nimport { DTreeItemToggleIcon} from \"./d-tree-item-toggle-icon\";\r\nimport { UtilPointerEvent } from \"./util\";\r\n\r\nexport interface DTreeItemOptions<\r\n\tTHEME extends DThemeTreeItem = DThemeTreeItem\r\n> extends DLayoutHorizontalOptions <THEME> {\r\n\ttext: string;\r\n\tisParent: boolean;\r\n\texpanded: boolean;\r\n\trawData: DTreeItemRawData;\r\n\ty: number;\r\n\tlevel: number;\r\n\tshowable?: boolean;\r\n\timage?: DisplayObject | Texture | null;\r\n}\r\n\r\nexport interface DThemeTreeItem extends DThemeLayoutHorizontal {\r\n\tgetPaddingByLevel( level: number ): number;\r\n}\r\n\r\nconst toText = ( options?: DTreeItemOptions ): string => {\r\n\tif ( options ) {\r\n\t\treturn options.text;\r\n\t}\r\n\treturn \"\";\r\n};\r\n\r\nconst isParent = ( options?: DTreeItemOptions ): boolean => {\r\n\treturn !! ( options && options.isParent );\r\n};\r\n\r\nconst isExpanded = ( options?: DTreeItemOptions ): boolean => {\r\n\treturn !! ( options && options.expanded );\r\n};\r\n\r\nconst toImage = ( options?: DTreeItemOptions ): DisplayObject | Texture | null => {\r\n\treturn options && options.image ? options.image : null;\r\n};\r\n\r\nconst toYCoordinate = ( options?: DTreeItemOptions ): number => {\r\n\treturn options ? options.y : 0;\r\n};\r\n\r\nconst toRawData = ( options?: DTreeItemOptions ): DTreeItemRawData => {\r\n\treturn options ? options.rawData : {\r\n\t\ttext: \"\",\r\n\t\tchildren: []\r\n\t};\r\n};\r\n\r\nconst toPaddingLeft = <THEME extends DThemeTreeItem>(\r\n\ttheme: DThemeTreeItem,\r\n\toptions?: DTreeItemOptions<THEME>\r\n): number => {\r\n\tconst level = options ? options.level : 0;\r\n\treturn theme.getPaddingByLevel( level );\r\n};\r\n\r\nconst toTreeItemTextAndImage = ( options?: DTreeItemOptions ): DTreeItemTextAndImage => {\r\n\treturn new DTreeItemTextAndImage({\r\n\t\ttext: {\r\n\t\t\tvalue: toText( options )\r\n\t\t},\r\n\t\timage: {\r\n\t\t\tsource: toImage( options )\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport class DTreeItem<\r\n\tTHEME extends DThemeTreeItem = DThemeTreeItem,\r\n\tOPTIONS extends DTreeItemOptions <THEME> = DTreeItemOptions <THEME>\r\n> extends DLayoutHorizontal < THEME, OPTIONS > {\r\n\tprotected _isParent!: boolean;\r\n\tprotected _isExpanded!: boolean;\r\n\tprotected _rawData!: DTreeItemRawData;\r\n\tprotected _textAndImage!: DTreeItemTextAndImage;\r\n\tprotected _icon!: DTreeItemToggleIcon;\r\n\r\n\tprotected init( options ?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\t\t// get isParent option\r\n\t\tthis._isParent = isParent( options );\r\n\t\t// get isExpand option\r\n\t\tthis._isExpanded = isExpanded( options );\r\n\t\t// get raw data\r\n\t\tthis._rawData = toRawData( options );\r\n\r\n\t\tthis._icon = new DTreeItemToggleIcon();\r\n\t\tthis._textAndImage = toTreeItemTextAndImage( options );\r\n\r\n\t\tthis.addChild( this._icon );\r\n\t\tthis.addChild( this._textAndImage );\r\n\r\n\t\tthis._icon.on( UtilPointerEvent.down, (): void => {\r\n\t\t\tthis.onToggle();\r\n\t\t});\r\n\t\tthis._textAndImage.on( UtilPointerEvent.down, ( e: interaction.InteractionEvent ): void => {\r\n\t\t\tthis.onSelect( e );\r\n\t\t});\r\n\r\n\t\t// update states\r\n\t\tthis.updateStates( false );\r\n\t}\r\n\r\n\tprotected onSelect( e: interaction.InteractionEvent ): void {\r\n\t\tthis.emit( \"select\", e );\r\n\t}\r\n\r\n\tpublic onToggle(): void {\r\n\t\tthis.emit( \"toggle\" );\r\n\t}\r\n\r\n\tpublic isExpanded(): boolean {\r\n\t\treturn this._isExpanded;\r\n\t}\r\n\r\n\tpublic isParent(): boolean {\r\n\t\treturn this._isParent;\r\n\t}\r\n\r\n\tpublic getRawData(): DTreeItemRawData {\r\n\t\treturn this._rawData;\r\n\t}\r\n\r\n\tpublic update( options: OPTIONS, isActive: boolean ) {\r\n\t\tthis._textAndImage.text = toText( options );\r\n\t\tthis._textAndImage.image = toImage( options );\r\n\t\tthis._rawData = toRawData( options );\r\n\t\tthis._padding.left = toPaddingLeft( this.theme, options );\r\n\t\tthis.position.y = toYCoordinate( options );\r\n\t\tthis._isParent = isParent( options );\r\n\t\tthis._isExpanded = isExpanded( options );\r\n\t\tthis.updateStates( isActive );\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic updateActiveState( isActive: boolean ) {\r\n\t\tthis.setActive( isActive );\r\n\t\tthis._icon.setState( DTreeItemState.SELECTED, isActive );\r\n\t\tthis._textAndImage.setState( DTreeItemState.SELECTED, isActive );\r\n\t}\r\n\r\n\tprotected updateStates( isActive: boolean ): void {\r\n\t\tthis.updateActiveState( isActive );\r\n\t\tthis._icon.setState( DTreeItemState.COLLAPSED, !this._isExpanded && this._isParent );\r\n\t\tthis._icon.setState( DTreeItemState.EXPANDED, !!this._isExpanded && this._isParent );\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTreeItem\";\r\n\t}\r\n}\r\n"]}