{"version":3,"file":"d-diagram-editor.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-diagram-editor.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DControllerDocument } from \"./d-controller-document\";\r\nimport { DControllers } from \"./d-controllers\";\r\nimport { DDiagramBase, DDiagramBaseOnOptions, DDiagramBaseOptions, DThemeDiagramBase } from \"./d-diagram-base\";\r\nimport { DDiagramCanvasEditor, DDiagramCanvasEditorOptions } from \"./d-diagram-canvas-editor\";\r\nimport { DDiagramSerialized, DDiagramSerializedSimple, DDiagramSerializedVersion } from \"./d-diagram-serialized\";\r\nimport { DDiagrams } from \"./d-diagrams\";\r\nimport { ESnapper } from \"./snapper/e-snapper\";\r\n\r\nexport interface DDiagramEditorController {\r\n\tget( id: number ): Promise<DDiagramSerializedSimple | DDiagramSerialized>;\r\n\tsave( simple: DDiagramSerializedSimple ): Promise<number>;\r\n\tdelete( id: number ): Promise<void>;\r\n}\r\n\r\nexport interface DDiagramEditorOnOptions extends DDiagramBaseOnOptions<DDiagramCanvasEditor> {\r\n\t/**\r\n\t * Triggered when a serialized data is changed without using the set / unset methods.\r\n\t * This happens, for instance, when the name or the ID of the serialized data is changed.\r\n\t *\r\n\t * @param self a diagram editor\r\n\t */\r\n\tchange?: ( self: any ) => void;\r\n\r\n\t/**\r\n\t * Triggered when an operation is successfully finished.\r\n\t *\r\n\t * @param operation an operation ID\r\n\t * @param self a diagram editor\r\n\t */\r\n\tsuccess?: ( operation: \"save\" | \"save-as\", self: any ) => void;\r\n\r\n\t/**\r\n\t * Triggered when an operation is failed.\r\n\t *\r\n\t * @param operation an operation ID\r\n\t * @param self a diagram editor\r\n\t */\r\n\tfail?: ( operation: \"save\" | \"save-as\", self: any ) => void;\r\n}\r\n\r\nexport interface DDiagramEditorOptions<\r\n\tTHEME extends DThemeDiagramEditor = DThemeDiagramEditor\r\n> extends DDiagramBaseOptions<DDiagramCanvasEditor, THEME> {\r\n\tcontroller: DDiagramEditorController;\r\n\ton?: DDiagramEditorOnOptions;\r\n}\r\n\r\nexport interface DThemeDiagramEditor extends DThemeDiagramBase {\r\n\r\n}\r\n\r\nexport class DDiagramEditor<\r\n\tTHEME extends DThemeDiagramEditor = DThemeDiagramEditor,\r\n\tOPTIONS extends DDiagramEditorOptions<THEME> = DDiagramEditorOptions<THEME>\r\n> extends DDiagramBase<DDiagramCanvasEditor, THEME, OPTIONS> implements DControllerDocument<DDiagramSerialized> {\r\n\tprotected _isChanged: boolean = false;\r\n\tprotected _controller: DDiagramEditorController;\r\n\tsnapper: ESnapper;\r\n\r\n\tconstructor( options: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t\tthis._controller = options.controller;\r\n\t\tthis._isChanged = false;\r\n\r\n\t\tconst commands = DControllers.getCommandController();\r\n\t\tcommands.on( \"dirty\", (): void => {\r\n\t\t\tif( this._isChanged !== true ) {\r\n\t\t\t\tthis._isChanged = true;\r\n\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.snapper = new ESnapper( this );\r\n\t}\r\n\r\n\tprotected newCanvas( serialized: DDiagramSerialized ): DDiagramCanvasEditor {\r\n\t\treturn new DDiagramCanvasEditor( this.toCanvasOptions( serialized ) );\r\n\t}\r\n\r\n\tprotected toCanvasOptions( serialized: DDiagramSerialized ): DDiagramCanvasEditorOptions {\r\n\t\treturn {\r\n\t\t\tname: serialized.name,\r\n\t\t\twidth: serialized.width,\r\n\t\t\theight: serialized.height,\r\n\t\t\tsnapper: this.snapper,\r\n\t\t\ttile: {\r\n\t\t\t\tfactory: this._tileFactory,\r\n\t\t\t\tmapping: serialized.tile && serialized.tile.mapping\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tserialize(): DDiagramSerialized | null {\r\n\t\tconst canvas = this.canvas;\r\n\t\tconst serialized = this._serialized;\r\n\t\tif( canvas != null && serialized != null ) {\r\n\t\t\treturn canvas.serialize( serialized.id );\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tsave(): Promise<unknown> | boolean {\r\n\t\tconst serialized = this.serialize();\r\n\t\tif( serialized != null ) {\r\n\t\t\treturn this.controller.save({\r\n\t\t\t\tversion: serialized.version,\r\n\t\t\t\tid: serialized.id,\r\n\t\t\t\tname: serialized.name,\r\n\t\t\t\tdata: JSON.stringify( serialized )\r\n\t\t\t})\r\n\t\t\t.then(( newId: number ): void => {\r\n\t\t\t\tthis._isChanged = false;\r\n\t\t\t\tserialized.id = newId;\r\n\t\t\t\tthis._serialized = serialized;\r\n\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t\tthis.emit( \"success\", \"save\", this );\r\n\t\t\t}, ( reason: any ): void => {\r\n\t\t\t\tthis.emit( \"fail\", \"save\", this );\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tsaveAs( name: string ): Promise<unknown> | boolean {\r\n\t\tconst serialized = this.serialize();\r\n\t\tif( serialized != null ) {\r\n\t\t\tserialized.id = undefined;\r\n\t\t\tserialized.name = name;\r\n\t\t\treturn this.controller.save({\r\n\t\t\t\tversion: serialized.version,\r\n\t\t\t\tid: serialized.id,\r\n\t\t\t\tname: serialized.name,\r\n\t\t\t\tdata: JSON.stringify( serialized )\r\n\t\t\t})\r\n\t\t\t.then(( newId: number ): void => {\r\n\t\t\t\tthis._isChanged = false;\r\n\t\t\t\tserialized.id = newId;\r\n\t\t\t\tthis._serialized = serialized;\r\n\t\t\t\tconst canvas = this.canvas;\r\n\t\t\t\tif( canvas != null ) {\r\n\t\t\t\t\tcanvas.name = name;\r\n\t\t\t\t}\r\n\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t\tthis.emit( \"success\", \"save-as\", this );\r\n\t\t\t}, ( reason: any ): void => {\r\n\t\t\t\tthis.emit( \"fail\", \"save-as\", this );\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tdelete(): Promise<unknown> | boolean {\r\n\t\tconst serialized = this._serialized;\r\n\t\tif( serialized != null ) {\r\n\t\t\tif( serialized.id != null ) {\r\n\t\t\t\treturn this.controller.delete( serialized.id )\r\n\t\t\t\t.then((): void => {\r\n\t\t\t\t\tthis.set( null );\r\n\t\t\t\t\tthis.emit( \"success\", \"delete\", this );\r\n\t\t\t\t}, ( reason: any ): void => {\r\n\t\t\t\t\tthis.emit( \"fail\", \"delete\", this );\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.set( null );\r\n\t\t\t\tthis.emit( \"success\", \"delete\", this );\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcreate( name: string, width: number, height: number ): Promise<unknown> | boolean {\r\n\t\tthis.set({\r\n\t\t\tversion: DDiagramSerializedVersion,\r\n\t\t\tid: undefined,\r\n\t\t\tname,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tresources: [],\r\n\t\t\tlayers: [[ \"Default layer\" ]],\r\n\t\t\titems: [],\r\n\t\t\tsnap: undefined\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected onSet( serialized: DDiagramSerialized ): void {\r\n\t\tsuper.onSet( serialized );\r\n\t\tconst snap = serialized.snap;\r\n\t\tconst snapper = this.snapper;\r\n\t\tif( snap != null ) {\r\n\t\t\tsnapper.deserialize( snap );\r\n\t\t} else {\r\n\t\t\tsnapper.reset();\r\n\t\t}\r\n\t\tthis._isChanged = false;\r\n\t\tthis.emit( \"change\", this );\r\n\t}\r\n\r\n\tprotected onUnset(): void {\r\n\t\tsuper.onUnset();\r\n\t\tthis._isChanged = false;\r\n\t\tthis.emit( \"change\", this );\r\n\t}\r\n\r\n\topen( id: number ): Promise<unknown> | boolean {\r\n\t\treturn this._controller.get( id ).then(( serialized: DDiagramSerializedSimple | DDiagramSerialized ): void => {\r\n\t\t\tthis.set( DDiagrams.toSerialized( serialized ) );\r\n\t\t\tthis.emit( \"success\", \"open\", this );\r\n\t\t}, ( reason: any ): void => {\r\n\t\t\tthis.emit( \"fail\", \"open\", this );\r\n\t\t});\r\n\t}\r\n\r\n\tclose(): void {\r\n\t\tthis.set( null );\r\n\t}\r\n\r\n\tisChanged(): boolean {\r\n\t\treturn this._isChanged || this.isNew();\r\n\t}\r\n\r\n\tisNew(): boolean {\r\n\t\tconst serialized = this._serialized;\r\n\t\tif( serialized != null ) {\r\n\t\t\treturn serialized.id == null;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetName(): string | null {\r\n\t\tconst serialized = this._serialized;\r\n\t\tif( serialized != null ) {\r\n\t\t\treturn serialized.name;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tget controller(): DDiagramEditorController {\r\n\t\treturn this._controller;\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DDiagramEditor\";\r\n\t}\r\n}\r\n"]}