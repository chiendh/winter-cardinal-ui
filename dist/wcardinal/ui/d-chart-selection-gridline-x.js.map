{"version":3,"file":"d-chart-selection-gridline-x.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-selection-gridline-x.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,wBAAwB,EAAE,MAAM,gCAAgC,CAAC;AAG1E;IAA8C,4CAAwB;IAAtE;;IAmBA,CAAC;IAlBA,yCAAM,GAAN,UAAQ,SAAgC,EAAE,cAAsB;QAC/D,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,KAAK,EAAG;YACX,IAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC;YACjC,IAAM,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;YACzC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAE,OAAO,EAAE,MAAM,GAAG,GAAG,CAAE,CAAC;YACtD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,MAAM,CAAE,CAAC;YAC5B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAE,SAAS,EAAE,OAAO,CAAE,CAAC;SACrD;IACF,CAAC;IAES,4CAAS,GAAnB,UAAqB,SAAgC,EAAE,OAAe;QACrE,OAAO,CAAE,CAAC,IAAI,OAAO,IAAI,OAAO,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;IAChE,CAAC;IAES,0CAAO,GAAjB;QACC,OAAO,0BAA0B,CAAC;IACnC,CAAC;IACF,+BAAC;AAAD,CAAC,AAnBD,CAA8C,wBAAwB,GAmBrE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { IPoint } from \"pixi.js\";\r\nimport { DChartSelectionShapeBase } from \"./d-chart-selection-shape-base\";\r\nimport { DChartSeriesContainer } from \"./d-chart-series-container\";\r\n\r\nexport class DChartSelectionGridlineX extends DChartSelectionShapeBase {\r\n\tupdate( container: DChartSeriesContainer, mappedPosition: IPoint ): void {\r\n\t\tconst shape = this._shape;\r\n\t\tif( shape ) {\r\n\t\t\tconst mappedX = mappedPosition.x;\r\n\t\t\tconst height = container.plotArea.height;\r\n\t\t\tshape.transform.position.set( mappedX, height * 0.5 );\r\n\t\t\tshape.size.set( 0, height );\r\n\t\t\tshape.visible = this.isVisible( container, mappedX );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected isVisible( container: DChartSeriesContainer, mappedX: number ): boolean {\r\n\t\treturn ( 0 <= mappedX && mappedX <= container.plotArea.width );\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DChartSelectionGridlineX\";\r\n\t}\r\n}\r\n"]}