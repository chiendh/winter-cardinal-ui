{"version":3,"file":"d-table-data-filter.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-data-filter.ts"],"names":[],"mappings":"AAAA;;;GAGG","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { utils } from \"pixi.js\";\r\n\r\n/**\r\n * A filter function.\r\n */\r\nexport type DTableDataFilterFunction<ROW> = ( row: ROW, index: number ) => boolean;\r\n\r\n/**\r\n * A filter object.\r\n */\r\nexport interface DTableDataFilterObject<ROW> {\r\n\ttest( row: ROW, index: number ): boolean;\r\n}\r\n\r\n/**\r\n * Table data filter.\r\n */\r\nexport interface DTableDataFilter<ROW> extends utils.EventEmitter {\r\n\treadonly id: number;\r\n\r\n\t/**\r\n\t * An indices of filtered rows.\r\n\t * Must not change this indices directly.\r\n\t */\r\n\treadonly indices: number[] | null;\r\n\r\n\t/**\r\n\t * Applys a filter.\r\n\t */\r\n\tapply(): void;\r\n\r\n\t/**\r\n\t * Unapplys a filter.\r\n\t */\r\n\tunapply(): void;\r\n\r\n\t/**\r\n\t * Returns true if a filter is applied.\r\n\t */\r\n\tisApplied(): boolean;\r\n\r\n\t/**\r\n\t * Returns a current filter.\r\n\t */\r\n\tget(): DTableDataFilterFunction<ROW> | DTableDataFilterObject<ROW> | null;\r\n\r\n\t/**\r\n\t * Sets to the given filter.\r\n\t *\r\n\t * @param filter A filter\r\n\t */\r\n\tset( filter: DTableDataFilterFunction<ROW> | DTableDataFilterObject<ROW> | null ): void;\r\n\r\n\t/**\r\n\t * Returns a mapped index of the specified sorted index.\r\n\t *\r\n\t * @param sortedIndex an sorted index\r\n\t */\r\n\tmap( sortedIndex: number ): number | null;\r\n\r\n\t/**\r\n\t * Returns an sorted index of the specified mapped index.\r\n\t * A mapped index is an index on rows filters and sorters are applied.\r\n\t *\r\n\t * @param index a mapped index\r\n\t */\r\n\tunmap( index: number ): number;\r\n}\r\n"]}