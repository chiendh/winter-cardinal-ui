{"version":3,"file":"d-diagram-serialized.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-diagram-serialized.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAYH,MAAM,CAAC,IAAM,yBAAyB,GAAW,CAAC,CAAC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DDiagramCanvasTileMapping } from \"./d-diagram-canvas-mapping\";\r\nimport { EShapeCorner } from \"./shape/e-shape-corner\";\r\nimport { EShapeStrokeSide } from \"./shape/e-shape-stroke-side\";\r\nimport { EShapeTagValueOrder } from \"./shape/e-shape-tag-value\";\r\nimport { EShapeTextStyle, EShapeTextWeight } from \"./shape/e-shape-text\";\r\nimport { EShapeTextAlignHorizontal } from \"./shape/e-shape-text-align-horizontal\";\r\nimport { EShapeTextAlignVertical } from \"./shape/e-shape-text-align-vertical\";\r\nimport { EShapeTextDirection } from \"./shape/e-shape-text-direction\";\r\nimport { EShapeType } from \"./shape/e-shape-type\";\r\n\r\nexport const DDiagramSerializedVersion: number = 1;\r\n\r\n/**\r\n * A serialized tag range.\r\n */\r\nexport interface DDiagramSerializedTagRange {\r\n\t/** A type. */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A lower bound. */\r\n\t[ 1 ]: number;\r\n\r\n\t/** An upper bound. */\r\n\t[ 2 ]: number;\r\n}\r\n\r\n/**\r\n * A serialized tag value.\r\n */\r\nexport interface DDiagramSerializedTagValue {\r\n\t/**\r\n\t * A resource index number of an ID.\r\n\t * Stored at DDiagramSerialized#resources.\r\n\t */\r\n\t[ 0 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of an initial value expression.\r\n\t * Stored at DDiagramSerialized#resources.\r\n\t */\r\n\t[ 1 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of a format expression.\r\n\t * Stored at DDiagramSerialized#resources.\r\n\t */\r\n\t[ 2 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of a serialized range, JSON.stringify(DDiagramSerializedTagRange).\r\n\t * Stored at DDiagramSerialized#resources.\r\n\t */\r\n\t[ 3 ]: number;\r\n\r\n\t/**\r\n\t * A capacity.\r\n\t */\r\n\t[ 4 ]: number;\r\n\r\n\t/**\r\n\t * A order.\r\n\t */\r\n\t[ 5 ]: EShapeTagValueOrder;\r\n}\r\n\r\n/**\r\n * A serialized fill.\r\n */\r\nexport interface DDiagramSerializedFill {\r\n\t/** 0: Enabled, 1: Disabled */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A color. */\r\n\t[ 1 ]: number;\r\n\r\n\t/** An alpha. */\r\n\t[ 2 ]: number;\r\n}\r\n\r\n/**\r\n * A serialized stroke.\r\n */\r\nexport interface DDiagramSerializedStroke {\r\n\t/** 0: Enabled, 1: Disabled */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A color. */\r\n\t[ 1 ]: number;\r\n\r\n\t/** An alpha. */\r\n\t[ 2 ]: number;\r\n\r\n\t/** A width. */\r\n\t[ 3 ]: number;\r\n\r\n\t/** An align. */\r\n\t[ 4 ]: number;\r\n\r\n\t/** A side. */\r\n\t[ 5 ]: EShapeStrokeSide;\r\n}\r\n\r\n/**\r\n * A serialized text outline.\r\n */\r\nexport interface DDiagramSerializedTextOutline {\r\n\t/** 0: Enabled, 1: Diabled */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A color. */\r\n\t[ 1 ]: number;\r\n\r\n\t/** An alpha. */\r\n\t[ 2 ]: number;\r\n\r\n\t/** A width. */\r\n\t[ 3 ]: number;\r\n}\r\n\r\n/**\r\n * A serialized text align.\r\n */\r\nexport interface DDiagramSerializedTextAlign {\r\n\t/** A horizontal align. */\r\n\t[ 0 ]: EShapeTextAlignHorizontal;\r\n\r\n\t/** A vertical align. */\r\n\t[ 1 ]: EShapeTextAlignVertical;\r\n}\r\n\r\n/**\r\n * A serialized text offset.\r\n */\r\nexport interface DDiagramSerializedTextOffset {\r\n\t/** A horizontal offset. */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A vertical offset. */\r\n\t[ 1 ]: number;\r\n}\r\n\r\n/**\r\n * A serialized text spacing.\r\n */\r\nexport interface DDiagramSerializedTextSpacing {\r\n\t/** A horizontal spacing. */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A vertical spacing. */\r\n\t[ 1 ]: number;\r\n}\r\n\r\n/**\r\n * A serialized text padding.\r\n */\r\nexport interface DDiagramSerializedTextPadding {\r\n\t/** A horizontal padding. */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A vertical padding. */\r\n\t[ 1 ]: number;\r\n}\r\n\r\n/**\r\n * A serialized text.\r\n */\r\nexport interface DDiagramSerializedText {\r\n\t/** A resource index number of a value. */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A color. */\r\n\t[ 1 ]: number;\r\n\r\n\t/** An alpha. */\r\n\t[ 2 ]: number;\r\n\r\n\t/** A resource index number of a font family. */\r\n\t[ 3 ]: number;\r\n\r\n\t/** A size. */\r\n\t[ 4 ]: number;\r\n\r\n\t/** A weight. */\r\n\t[ 5 ]: EShapeTextWeight;\r\n\r\n\t/**\r\n\t * A resource index number of a stringified serialized align,\r\n\t * JSON.stringify(DDiagramSerializedTextAlign).\r\n\t */\r\n\t[ 6 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of a stringified serialized offset,\r\n\t * JSON.stringify(DDiagramSerializedTextOffset).\r\n\t */\r\n\t[ 7 ]: number;\r\n\r\n\t/** A style. */\r\n\t[ 8 ]: EShapeTextStyle;\r\n\r\n\t/**\r\n\t * A resource index number of a stringified serialized outline,\r\n\t * JSON.stringify(DDiagramSerializedTextOutline).\r\n\t */\r\n\t[ 9 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of a stringified serialized spacing,\r\n\t * JSON.stringify(DDiagramSerializedTextSpacing).\r\n\t */\r\n\t[ 10 ]: number;\r\n\r\n\t/** A direction. */\r\n\t[ 11 ]: EShapeTextDirection;\r\n\r\n\t/**\r\n\t * A resource index number of a stringified serialized padding,\r\n\t * JSON.stringify(DDiagramSerializedTextPadding).\r\n\t */\r\n\t[ 12 ]: number;\r\n\r\n\t/** A clipping. (0: Off, 1: On) */\r\n\t[ 13 ]: number;\r\n}\r\n\r\n/**\r\n * A serialized item.\r\n */\r\nexport interface DDiagramSerializedItem {\r\n\t/** A type. */\r\n\t[ 0 ]: EShapeType;\r\n\r\n\t/** A resource index number of a ID. */\r\n\t[ 1 ]: number;\r\n\r\n\t/** A X-coordinate position. */\r\n\t[ 2 ]: number;\r\n\r\n\t/** A Y-coordinate position. */\r\n\t[ 3 ]: number;\r\n\r\n\t/** A width. */\r\n\t[ 4 ]: number;\r\n\r\n\t/** A height. */\r\n\t[ 5 ]: number;\r\n\r\n\t/** A rotation. */\r\n\t[ 6 ]: number;\r\n\r\n\t/** A skew. */\r\n\t[ 7 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of a stringified serialized fill,\r\n\t * JSON.stringify(DDiagramSerializedFill).\r\n\t */\r\n\t[ 8 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of a stringified serialized stroke,\r\n\t * JSON.stringify(DDiagramSerializedStroke).\r\n\t */\r\n\t[ 9 ]: number;\r\n\r\n\t/** A resource index number of a cursor. */\r\n\t[ 10 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of a stringified serialized text,\r\n\t * JSON.stringify(DDiagramSerializedText).\r\n\t */\r\n\t[ 11 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of stringified serialized tags,\r\n\t * JSON.stringify(DDiagramSerializedTagValue[]).\r\n\t */\r\n\t[ 12 ]: number;\r\n\r\n\t/** A radius. */\r\n\t[ 13 ]: number;\r\n\r\n\t/** A corner. */\r\n\t[ 14 ]: EShapeCorner;\r\n\r\n\t/** A resource index number of a shape-specific resource. */\r\n\t[ 15 ]: number;\r\n\r\n\t/** A layer index number. */\r\n\t[ 16 ]: number;\r\n\r\n\t/** Actions */\r\n\t[ 17 ]: number[];\r\n\r\n\t/** A resource index number of an image. */\r\n\t[ 18 ]: number;\r\n\r\n\t/**\r\n\t * A resource index number of a stringified serialized gradient.\r\n\t * A stringified serialized gradient is a stringified number array,\r\n\t * JSON.stringify(number[]).\r\n\t *\r\n\t * * The first number in the array is a direction in degree.\r\n\t * * The number at an index number 1 + 3 * n + 0 is a color of a n-th point.\r\n\t * * The number at an index number 1 + 3 * n + 1 is a alpha of a n-th point.\r\n\t * * The number at an index number 1 + 3 * n + 2 is a position of a n-th point whose range is [0, 1].\r\n\t */\r\n\t[ 19 ]: number;\r\n\r\n\t/** A children. */\r\n\t[ 20 ]: DDiagramSerializedItem[];\r\n\r\n\t/** A X pivot. */\r\n\t[ 21 ]: number;\r\n\r\n\t/** A Y pivot. */\r\n\t[ 22 ]: number;\r\n\r\n\t/** (interactive ? 1 : 0) | (unfocusable ? 2 : 0) */\r\n\t[ 23 ]: number;\r\n\r\n\t/** A resource index number of a shortcut. */\r\n\t[ 24 ]: number;\r\n\r\n\t/** A resource index number of a title. */\r\n\t[ 25 ]: number;\r\n}\r\n\r\n/**\r\n * A serialized layer.\r\n */\r\nexport interface DDiagramSerializedLayer {\r\n\t/** A name. */\r\n\t[ 0 ]: string;\r\n}\r\n\r\n/**\r\n * A serialized snap target.\r\n */\r\nexport interface DDiagramSerializedSnapTargetValue {\r\n\t/** A type (0: Horizontal, 1: Vertical). */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A position. */\r\n\t[ 1 ]: number;\r\n}\r\n\r\n/**\r\n * Serialized snap on guide settings.\r\n */\r\nexport interface DDiagramSerializedSnapTarget {\r\n\t/** Snap on guide (0: Off, 1: On) */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A visibility (0: Invisible, 1: Visible). */\r\n\t[ 1 ]: number;\r\n\r\n\t/** Snap targets. */\r\n\t[ 2 ]: DDiagramSerializedSnapTargetValue[];\r\n}\r\n\r\n/**\r\n * Serialized grid snap settings.\r\n */\r\nexport interface DDiagramSerializedSnapGrid {\r\n\t/** Snap on grid (0: Off, 1: On) */\r\n\t[ 0 ]: number;\r\n\r\n\t/** A grid size. */\r\n\t[ 1 ]: number;\r\n}\r\n\r\n/**\r\n * Serialized snap settings.\r\n */\r\nexport interface DDiagramSerializedSnap {\r\n\t/** Snap (0: Off, 1: On). */\r\n\t[ 0 ]: number;\r\n\r\n\t/** Snap on targets */\r\n\t[ 1 ]: DDiagramSerializedSnapTarget;\r\n\r\n\t/** Snap on grid */\r\n\t[ 2 ]: DDiagramSerializedSnapGrid;\r\n}\r\n\r\n/**\r\n * Serialized background settings.\r\n */\r\nexport interface DDiagramSerializedBackground {\r\n\tcolor?: number | null;\r\n\talpha?: number;\r\n}\r\n\r\n/**\r\n * Serialized tile settings.\r\n */\r\nexport interface DDiagramSerializedTile {\r\n\tmapping?: DDiagramCanvasTileMapping;\r\n}\r\n\r\n/**\r\n * A serialized diagram.\r\n */\r\nexport interface DDiagramSerialized {\r\n\tversion: number;\r\n\tid?: number;\r\n\tname: string;\r\n\twidth: number;\r\n\theight: number;\r\n\tbackground?: DDiagramSerializedBackground;\r\n\ttile?: DDiagramSerializedTile;\r\n\tresources: string[];\r\n\tlayers: DDiagramSerializedLayer[];\r\n\titems: DDiagramSerializedItem[];\r\n\tsnap?: DDiagramSerializedSnap;\r\n}\r\n\r\n/**\r\n * A simplified version of a serialized diagram.\r\n */\r\nexport interface DDiagramSerializedSimple {\r\n\tversion: number;\r\n\tid: number | undefined;\r\n\tname: string;\r\n\r\n\t/**\r\n\t * A stringified DDiagramSerialized,\r\n\t * JSON.stringiify(DDiagramSerialized).\r\n\t */\r\n\tdata: string;\r\n}\r\n\r\nexport interface DDiagramSerializedName {\r\n\tid: number;\r\n\tname: string;\r\n}\r\n"]}