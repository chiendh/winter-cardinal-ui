{"version":3,"file":"d-table-body-cell-input-tree.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-body-cell-input-tree.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DLayoutHorizontal, DThemeLayoutHorizontal } from \"./d-layout-horizontal\";\r\nimport { DTableBodyCellInputTextOptions } from \"./d-table-body-cell-input-text\";\r\nimport { DTableBodyCellInputTreeInput } from \"./d-table-body-cell-input-tree-input\";\r\nimport { DTableBodyCellInputTreeMarker } from \"./d-table-body-cell-input-tree-marker\";\r\nimport { DTableBodyCells } from \"./d-table-body-cells\";\r\nimport { DTableCellState } from \"./d-table-cell-state\";\r\nimport { DTableColumn } from \"./d-table-column\";\r\nimport { isNumber } from \"./util/is-number\";\r\n\r\nexport interface DThemeTableBodyCellInputTree extends DThemeLayoutHorizontal {\r\n\tgetLevelPadding( level: number ): number;\r\n}\r\n\r\nexport class DTableBodyCellInputTree<\r\n\tROW = unknown,\r\n\tTHEME extends DThemeTableBodyCellInputTree = DThemeTableBodyCellInputTree\r\n> extends DLayoutHorizontal<THEME> {\r\n\tprotected _row?: ROW;\r\n\tprotected _rowIndex!: number;\r\n\tprotected _columnIndex!: number;\r\n\tprotected _columnData!: DTableColumn<ROW>;\r\n\r\n\tprotected _marker!: DTableBodyCellInputTreeMarker;\r\n\tprotected _input!: DTableBodyCellInputTreeInput;\r\n\r\n\tconstructor( options: DTableBodyCellInputTextOptions<ROW> ) {\r\n\t\tsuper({\r\n\t\t\tweight: options.weight,\r\n\t\t\twidth: options.width\r\n\t\t});\r\n\r\n\t\tthis._rowIndex = 0;\r\n\t\tthis._columnIndex = options.column.index;\r\n\t\tthis._columnData = options.column.data;\r\n\r\n\t\t// Marker\r\n\t\tconst marker = new DTableBodyCellInputTreeMarker({\r\n\t\t\tvisible: false,\r\n\t\t\ton: {\r\n\t\t\t\tactive: () => {\r\n\t\t\t\t\tthis.onMarkerActive();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._marker = marker;\r\n\t\tthis.addChild( marker );\r\n\r\n\t\t// Input\r\n\t\tconst input = new DTableBodyCellInputTreeInput({\r\n\t\t\tweight: 1,\r\n\t\t\ttext: options.text,\r\n\t\t\tediting: options.editing\r\n\t\t});\r\n\t\tthis._input = input;\r\n\t\tinput.on( \"change\", ( newValue: unknown, oldValue: unknown ): void => {\r\n\t\t\tconst row = this._row;\r\n\t\t\tif( row !== undefined ) {\r\n\t\t\t\tconst rowIndex = this._rowIndex;\r\n\t\t\t\tconst columnIndex = this._columnIndex;\r\n\t\t\t\tthis._columnData.setter( row, columnIndex, newValue );\r\n\t\t\t\tthis.emit( \"cellchange\", newValue, oldValue, row, rowIndex, columnIndex, this );\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.addChild( input );\r\n\t}\r\n\r\n\tprotected onMarkerActive(): void {\r\n\t\tif( this._marker.state & DTableCellState.HAS_CHILDREN ) {\r\n\t\t\tconst row = this.parent;\r\n\t\t\tif( row ) {\r\n\t\t\t\tconst body = row.parent as any;\r\n\t\t\t\tif( body ) {\r\n\t\t\t\t\tconst data = body.data;\r\n\t\t\t\t\tif( data && data.toggle ) {\r\n\t\t\t\t\t\tdata.toggle( this._row );\r\n\t\t\t\t\t\tthis.emit( \"cellchange\", null, null, this._row, this._rowIndex, this._columnIndex, this );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected mergeState( stateLocal: DBaseState, stateParent: DBaseState ): DBaseState {\r\n\t\treturn super.mergeState( stateLocal, stateParent ) |\r\n\t\t\t( stateParent & DBaseState.HOVERED ? DBaseState.HOVERED : DBaseState.NONE );\r\n\t}\r\n\r\n\tset(\r\n\t\tvalue: unknown, row: ROW, supplimental: unknown,\r\n\t\trowIndex: number, columnIndex: number,\r\n\t\tforcibly?: boolean\r\n\t): void {\r\n\t\tthis._row = row;\r\n\t\tthis._rowIndex = rowIndex;\r\n\t\tthis._input.visible = true;\r\n\t\tthis._input.text = String( value );\r\n\r\n\t\tconst marker = this._marker;\r\n\t\tif( isNumber( supplimental ) ) {\r\n\t\t\tconst isOpened = !! (supplimental & 0x1);\r\n\t\t\tconst hasChildren = !! (supplimental & 0x2);\r\n\t\t\tconst level = (supplimental >> 2);\r\n\t\t\tif( hasChildren ) {\r\n\t\t\t\tif( isOpened ) {\r\n\t\t\t\t\tmarker.setStates( DTableCellState.HAS_CHILDREN | DTableCellState.OPENED, DBaseState.DISABLED );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmarker.setStates( DTableCellState.HAS_CHILDREN, DBaseState.DISABLED | DTableCellState.OPENED );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif( isOpened ) {\r\n\t\t\t\t\tmarker.setStates( DBaseState.DISABLED | DTableCellState.OPENED, DTableCellState.HAS_CHILDREN );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmarker.setStates( DBaseState.DISABLED, DTableCellState.HAS_CHILDREN | DTableCellState.OPENED );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmarker.show();\r\n\t\t\tmarker.width = this.theme.getLevelPadding( level );\r\n\t\t} else {\r\n\t\t\tmarker.setStates( DBaseState.DISABLED, DTableCellState.OPENED | DTableCellState.HAS_CHILDREN );\r\n\t\t\tmarker.hide();\r\n\t\t}\r\n\r\n\t\tconst columnData = this._columnData;\r\n\t\tDTableBodyCells.setReadOnly( this._input, row, columnIndex, columnData );\r\n\t\tDTableBodyCells.setRenderable( this, row, columnIndex, columnData );\r\n\t}\r\n\r\n\tunset(): void {\r\n\t\tthis._row = undefined;\r\n\t\tthis._input.visible = false;\r\n\t\tthis._marker.hide();\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTableBodyCellInputTree\";\r\n\t}\r\n}\r\n"]}