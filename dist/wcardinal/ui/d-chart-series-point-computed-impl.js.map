{"version":3,"file":"d-chart-series-point-computed-impl.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-series-point-computed-impl.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAKH;IAIC,uCAAa,CAAS,EAAE,CAAS;QAChC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACZ,CAAC;IAEM,kCAAI,GAAX,UACC,IAAuB,EAAE,KAAa,EACtC,KAAmD,EACnD,CAAS,EAAE,CAAS;QAEpB,IAAI,KAAK,EAAG;YACX,OAAO,IAAI,6BAA6B,CACvC,CAAE,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC,CAAE,CAAE,EACxE,CAAE,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC,CAAE,CAAE,CACxE,CAAC;SACF;aAAM;YACN,OAAO,IAAI,6BAA6B,CACvC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC,EACpC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC,CACpC,CAAC;SACF;IACF,CAAC;IACF,oCAAC;AAAD,CAAC,AA1BD,IA0BC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DChartSeriesPoint } from \"./d-chart-series-point\";\r\nimport { DChartSeriesPointComputed, DChartSeriesPointComputedOptions } from \"./d-chart-series-point-computed\";\r\n\r\nexport class DChartSeriesPointComputedImpl implements DChartSeriesPointComputed {\r\n\tx: number;\r\n\ty: number;\r\n\r\n\tconstructor( x: number, y: number ) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tstatic from(\r\n\t\tbase: DChartSeriesPoint, index: number,\r\n\t\tpoint: DChartSeriesPointComputedOptions | undefined,\r\n\t\tx: number, y: number\r\n\t): DChartSeriesPointComputed {\r\n\t\tif( point ) {\r\n\t\t\treturn new DChartSeriesPointComputedImpl(\r\n\t\t\t\t( point.x != null ? point.x : ( base.x != null ? base.x( index ) : x ) ),\r\n\t\t\t\t( point.y != null ? point.y : ( base.y != null ? base.y( index ) : y ) )\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn new DChartSeriesPointComputedImpl(\r\n\t\t\t\tbase.x != null ? base.x( index ) : x,\r\n\t\t\t\tbase.y != null ? base.y( index ) : y\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n"]}