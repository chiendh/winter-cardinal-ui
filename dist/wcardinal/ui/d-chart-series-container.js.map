{"version":3,"file":"d-chart-series-container.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-series-container.ts"],"names":[],"mappings":"AAAA;;;GAGG","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { IPoint } from \"pixi.js\";\r\nimport { DChartSeriesFillComputed } from \".\";\r\nimport { DChartCoordinate } from \"./d-chart-coordinate\";\r\nimport { DChartPlotArea } from \"./d-chart-plot-area\";\r\nimport { DChartRegion } from \"./d-chart-region\";\r\nimport { DChartSelection } from \"./d-chart-selection\";\r\nimport { DChartSeries, DChartSeriesHitResult } from \"./d-chart-series\";\r\nimport { DChartSeriesFillOptions } from \"./d-chart-series-fill\";\r\nimport { DChartSeriesFillComputedOptions } from \"./d-chart-series-fill-computed\";\r\nimport { DChartSeriesPaddingOptions } from \"./d-chart-series-padding\";\r\nimport {\r\n\tDChartSeriesPaddingComputed, DChartSeriesPaddingComputedOptions\r\n} from \"./d-chart-series-padding-computed\";\r\nimport { DChartSeriesPointOptions } from \"./d-chart-series-point\";\r\nimport { DChartSeriesPointComputed, DChartSeriesPointComputedOptions } from \"./d-chart-series-point-computed\";\r\nimport { DChartSeriesStrokeOptions } from \"./d-chart-series-stroke\";\r\nimport { DChartSeriesStrokeComputed, DChartSeriesStrokeComputedOptions } from \"./d-chart-series-stroke-computed\";\r\n\r\nexport interface DChartSeriesContainerOptions {\r\n\tlist: DChartSeries[];\r\n\tselection?: DChartSelection;\r\n\r\n\tfill?: DChartSeriesFillOptions;\r\n\tstroke?: DChartSeriesStrokeOptions;\r\n\tsize?: DChartSeriesPointOptions;\r\n\toffset?: DChartSeriesPointOptions;\r\n\tpadding?: DChartSeriesPaddingOptions;\r\n}\r\n\r\nexport interface DChartSeriesContainer {\r\n\tdomain: DChartRegion;\r\n\trange: DChartRegion;\r\n\r\n\treadonly plotArea: DChartPlotArea;\r\n\treadonly selection: DChartSelection | null;\r\n\r\n\tnewFill(\r\n\t\tindex: number,\r\n\t\toptions: DChartSeriesFillComputedOptions | undefined\r\n\t): DChartSeriesFillComputed;\r\n\tnewStroke(\r\n\t\tindex: number,\r\n\t\toptions: DChartSeriesStrokeComputedOptions | undefined\r\n\t): DChartSeriesStrokeComputed;\r\n\tnewSize(\r\n\t\tindex: number,\r\n\t\toptions: DChartSeriesPointComputedOptions | undefined,\r\n\t\tx: number, y: number\r\n\t): DChartSeriesPointComputed;\r\n\tnewOffset(\r\n\t\tindex: number,\r\n\t\toptions: DChartSeriesPointComputedOptions | undefined,\r\n\t\tx: number, y: number\r\n\t): DChartSeriesPointComputed;\r\n\tnewPadding(\r\n\t\tindex: number,\r\n\t\toptions: DChartSeriesPaddingComputedOptions | undefined\r\n\t): DChartSeriesPaddingComputed;\r\n\r\n\tupdate(): void;\r\n\tadd( series: DChartSeries ): void;\r\n\tget( index: number ): DChartSeries | null;\r\n\tclear(): this;\r\n\tsize(): number;\r\n\tdestroy(): void;\r\n\tindexOf( series: DChartSeries ): number;\r\n\r\n\tgetDomain( coordinate: DChartCoordinate, result: DChartRegion ): DChartRegion;\r\n\tgetRange( coordinate: DChartCoordinate, result: DChartRegion ): DChartRegion;\r\n\r\n\thitTest( global: IPoint ): DChartSeries | null;\r\n\tcalcHitPoint( global: IPoint, result: DChartSeriesHitResult ): DChartSeries | null;\r\n}\r\n"]}