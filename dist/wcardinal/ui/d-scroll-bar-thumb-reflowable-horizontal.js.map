{"version":3,"file":"d-scroll-bar-thumb-reflowable-horizontal.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-scroll-bar-thumb-reflowable-horizontal.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAInC;IAAyD,uDAAQ;IAChE,6CAAa,IAAqB;QAAlC,YACC,iBAAO,SAGP;QAFA,IAAI,CAAC,gBAAgB,CAAE,KAAI,EAAE,IAAI,CAAE,CAAC;QACpC,IAAI,CAAC,aAAa,CAAE,KAAI,CAAE,CAAC;;IAC5B,CAAC;IAED,sDAAQ,GAAR,UAAU,IAAW,EAAE,KAAa,EAAE,MAAc;QACnD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzB,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,IAAM,eAAe,GAAG,UAAU,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;QACrD,IAAM,eAAe,GAAG,UAAU,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;QACrD,IAAI,eAAe,IAAI,IAAI,EAAG;YAC7B,IAAM,IAAI,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,SAAS,CAAE,eAAe,EAAE,eAAe,CAAE,CAAC;YACnD,IAAI,CAAC,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,GAAG,GAAG,GAAG,IAAI,EAAE,KAAK,EAAE,IAAI,GAAG,CAAC,CAAE,CAAC;YACzD,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB;aAAM;YACN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACrB;IACF,CAAC;IACF,0CAAC;AAAD,CAAC,AA1BD,CAAyD,QAAQ,GA0BhE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Graphics } from \"pixi.js\";\r\nimport { DBase, DReflowable } from \"./d-base\";\r\nimport { DScrollBarThumb } from \"./d-scroll-bar-thumb\";\r\n\r\nexport class DScrollBarThumbReflowableHorizontal extends Graphics implements DReflowable {\r\n\tconstructor( base: DScrollBarThumb ) {\r\n\t\tsuper();\r\n\t\tbase.appendRenderable( this, true );\r\n\t\tbase.addReflowable( this );\r\n\t}\r\n\r\n\tonReflow( base: DBase, width: number, height: number ): void {\r\n\t\tconst state = base.state;\r\n\r\n\t\tthis.clear();\r\n\r\n\t\tconst background = base.background;\r\n\t\tconst backgroundColor = background.getColor( state );\r\n\t\tconst backgroundAlpha = background.getAlpha( state );\r\n\t\tif( backgroundColor != null ) {\r\n\t\t\tconst size = 1;\r\n\t\t\tthis.beginFill( backgroundColor, backgroundAlpha );\r\n\t\t\tthis.lineStyle( 0, 0, 0, 0 );\r\n\t\t\tthis.drawRect( 0, height * 0.5 - size, width, size * 2 );\r\n\t\t\tthis.endFill();\r\n\t\t\tthis.visible = true;\r\n\t\t} else {\r\n\t\t\tthis.visible = false;\r\n\t\t}\r\n\t}\r\n}\r\n"]}