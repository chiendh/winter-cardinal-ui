{"version":3,"file":"d-menu-item-text.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-menu-item-text.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { interaction, Text } from \"pixi.js\";\r\nimport { DBase } from \"./d-base\";\r\nimport { DDynamicText } from \"./d-dynamic-text\";\r\nimport { DMenuItem, DMenuItemOptions, DThemeMenuItem } from \"./d-menu-item\";\r\nimport { UtilKeyboardEvent } from \"./util/util-keyboard-event\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\n\r\nexport interface DMenuItemTextOptions<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeMenuItemText = DThemeMenuItemText\r\n> extends DMenuItemOptions<VALUE, THEME> {\r\n\r\n}\r\n\r\nexport interface DThemeMenuItemText extends DThemeMenuItem {\r\n\tgetShortcutTextMargin(): number;\r\n}\r\n\r\nexport class DMenuItemText<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeMenuItemText = DThemeMenuItemText,\r\n\tOPTIONS extends DMenuItemTextOptions<VALUE, THEME> = DMenuItemTextOptions<VALUE, THEME>\r\n> extends DMenuItem<VALUE, THEME, OPTIONS> {\r\n\tprotected _shortcutText!: Text | DDynamicText | null;\r\n\tprotected _shortcutMargin!: number;\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\t\tthis.initOnClick( options );\r\n\t\tthis.initOnOver( options );\r\n\t\tthis.initShortcuts( options );\r\n\t}\r\n\r\n\tprotected initOnClick( options?: OPTIONS ): void {\r\n\t\tUtilPointerEvent.onClick( this, ( e: interaction.InteractionEvent ): void => {\r\n\t\t\tif( this.isActionable() ) {\r\n\t\t\t\tthis.onSelect( e );\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected initOnOver( options?: OPTIONS ): void {\r\n\t\tthis.on( UtilPointerEvent.over, (): void => {\r\n\t\t\tconst context = this.getContext();\r\n\t\t\tif( context != null ) {\r\n\t\t\t\tconst parent = this.parent;\r\n\t\t\t\tif( parent instanceof DBase ) {\r\n\t\t\t\t\tcontext.trim( this.getCloseable() );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected initShortcuts( options?: OPTIONS ): void {\r\n\t\tconst shortcuts = this._shortcuts;\r\n\t\tthis._shortcutMargin = this.theme.getShortcutTextMargin();\r\n\t\tif( shortcuts != null && 0 < shortcuts.length ) {\r\n\t\t\tconst shortcut = shortcuts[ 0 ];\r\n\t\t\tconst shortcutTextValue = UtilKeyboardEvent.toString( shortcut );\r\n\t\t\tthis._shortcutText = ( this._textDynamic ?\r\n\t\t\t\tnew DDynamicText( shortcutTextValue, this._textStyle ) :\r\n\t\t\t\tnew Text( shortcutTextValue, this._textStyle )\r\n\t\t\t);\r\n\t\t\tthis.appendRenderable( this._shortcutText, true );\r\n\t\t} else {\r\n\t\t\tthis._shortcutText = null;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateShortcutText(): void {\r\n\t\tconst text = this._shortcutText;\r\n\t\tif( text != null ) {\r\n\t\t\tconst toRounded = this.toRounded;\r\n\t\t\ttext.position.set(\r\n\t\t\t\ttoRounded( this.width - this._shortcutMargin - text.width ),\r\n\t\t\t\ttoRounded( ( this.height - text.height ) * 0.5 )\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateTextColor( text: DDynamicText | Text ): void {\r\n\t\tsuper.updateTextColor( text );\r\n\r\n\t\tconst shortcutText = this._shortcutText;\r\n\t\tif( shortcutText != null ) {\r\n\t\t\tconst theme = this.theme;\r\n\t\t\tconst state = this.state;\r\n\t\t\tshortcutText.style.fill = theme.getColor( state );\r\n\t\t\tshortcutText.alpha = theme.getAlpha( state );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateText(): void {\r\n\t\tsuper.updateText();\r\n\t\tthis.updateShortcutText();\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DMenuItemText\";\r\n\t}\r\n\r\n\tprotected onSelect( e: KeyboardEvent | interaction.InteractionEvent ): void {\r\n\t\tsuper.onSelect( e );\r\n\t\tconst closeable = this.getCloseable();\r\n\t\tif( closeable != null ) {\r\n\t\t\tcloseable.emit( \"select\", this.value, this, closeable );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onShortcut( e: KeyboardEvent ) {\r\n\t\tsuper.onShortcut( e );\r\n\t\tthis.onSelect( e );\r\n\t}\r\n}\r\n"]}