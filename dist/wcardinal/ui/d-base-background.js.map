{"version":3,"file":"d-base-background.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-base-background.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAMH,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAIhD;IAMC,yBAAa,KAAiB,EAAE,OAA2B,EAAE,QAAmB;QAC/E,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,UAAU,IAAI,IAAI,EAAG;YACnD,IAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC;SAC/B;IACF,CAAC;IAED,kCAAQ,GAAR;QACC,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAED,kCAAQ,GAAR,UAAU,KAAiB;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,kCAAQ,GAAR,UAAU,KAAiB;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,KAAK,KAAK,SAAS,EAAG;YACzB,IAAI,UAAU,CAAE,KAAK,CAAE,EAAG;gBACzB,IAAM,MAAM,GAAG,KAAK,CAAE,KAAK,CAAE,CAAC;gBAC9B,IAAI,MAAM,KAAK,SAAS,EAAG;oBAC1B,OAAO,MAAM,CAAC;iBACd;aACD;iBAAM;gBACN,OAAO,KAAK,CAAC;aACb;SACD;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAChD,CAAC;IAED,sBAAI,kCAAK;aAAT;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;aAED,UAAW,KAA+C;YACzD,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAG;gBAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;aAChB;QACF,CAAC;;;OAPA;IASD,kCAAQ,GAAR,UAAU,KAAiB;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,KAAK,KAAK,SAAS,EAAG;YACzB,IAAI,UAAU,CAAE,KAAK,CAAE,EAAG;gBACzB,IAAM,MAAM,GAAG,KAAK,CAAE,KAAK,CAAE,CAAC;gBAC9B,IAAI,MAAM,KAAK,SAAS,EAAG;oBAC1B,OAAO,MAAM,CAAC;iBACd;aACD;iBAAM;gBACN,OAAO,KAAK,CAAC;aACb;SACD;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAChD,CAAC;IAED,sBAAI,kCAAK;aAAT;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;aAED,UAAW,KAAwC;YAClD,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAG;gBAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;aAChB;QACF,CAAC;;;OAPA;IASS,kCAAQ,GAAlB;QACC,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,IAAI,IAAI,EAAG;YACtB,QAAQ,EAAE,CAAC;SACX;IACF,CAAC;IACF,sBAAC;AAAD,CAAC,AAlFD,IAkFC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBackgroundStateAware } from \"./d-background\";\r\nimport { DBaseOptions, DThemeBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DStateAwareOrValueMightBe } from \"./d-state-aware\";\r\nimport { isFunction } from \"./util/is-function\";\r\n\r\ntype Callback = () => void;\r\n\r\nexport class DBaseBackground implements DBackgroundStateAware {\r\n\tprotected _theme: DThemeBase;\r\n\tprotected _color?: DStateAwareOrValueMightBe<number | null>;\r\n\tprotected _alpha?: DStateAwareOrValueMightBe<number>;\r\n\tprotected _callback: Callback | undefined;\r\n\r\n\tconstructor( theme: DThemeBase, options?: DBaseOptions<any>, callback?: Callback ) {\r\n\t\tthis._theme = theme;\r\n\t\tthis._callback = callback;\r\n\t\tif( options != null && options.background != null ) {\r\n\t\t\tconst background = options.background;\r\n\t\t\tthis._color = background.color;\r\n\t\t\tthis._alpha = background.alpha;\r\n\t\t}\r\n\t}\r\n\r\n\tgetTheme(): DThemeBase {\r\n\t\treturn this._theme;\r\n\t}\r\n\r\n\tsetTheme( theme: DThemeBase ): void {\r\n\t\tthis._theme = theme;\r\n\t}\r\n\r\n\tgetColor( state: DBaseState ): number | null {\r\n\t\tconst color = this._color;\r\n\t\tif( color !== undefined ) {\r\n\t\t\tif( isFunction( color ) ) {\r\n\t\t\t\tconst result = color( state );\r\n\t\t\t\tif( result !== undefined ) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn color;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._theme.getBackgroundColor( state );\r\n\t}\r\n\r\n\tget color(): DStateAwareOrValueMightBe<number | null> {\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tset color( color: DStateAwareOrValueMightBe<number | null> ) {\r\n\t\tif( this._color !== color ) {\r\n\t\t\tthis._color = color;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\tgetAlpha( state: DBaseState ): number {\r\n\t\tconst alpha = this._alpha;\r\n\t\tif( alpha !== undefined ) {\r\n\t\t\tif( isFunction( alpha ) ) {\r\n\t\t\t\tconst result = alpha( state );\r\n\t\t\t\tif( result !== undefined ) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn alpha;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._theme.getBackgroundAlpha( state );\r\n\t}\r\n\r\n\tget alpha(): DStateAwareOrValueMightBe<number> {\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tset alpha( alpha: DStateAwareOrValueMightBe<number> ) {\r\n\t\tif( this._alpha !== alpha ) {\r\n\t\t\tthis._alpha = alpha;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onChange(): void {\r\n\t\tconst callback = this._callback;\r\n\t\tif( callback != null ) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n}\r\n"]}