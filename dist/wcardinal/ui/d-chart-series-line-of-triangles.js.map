{"version":3,"file":"d-chart-series-line-of-triangles.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-series-line-of-triangles.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,qBAAqB,EAAgC,MAAM,8BAA8B,CAAC;AAEnG,OAAO,EAAE,qBAAqB,EAAE,MAAM,2CAA2C,CAAC;AAElF;;;GAGG;AACH;IAAiD,+CAAqB;IAGrE,qCAAa,OAAsC;QAAnD,YACC,kBAAO,OAAO,CAAE,SAEhB;QADA,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC;;IAClB,CAAC;IAES,kDAAY,GAAtB;QACC,OAAO,IAAI,qBAAqB,EAAE,CAAC;IACpC,CAAC;IAES,+CAAS,GAAnB,UACC,IAAqB,EACrB,WAA6B,EAC7B,WAA6B,EAC7B,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,MAAgB;QAEhB,SAAS;QACT,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,EAAG;YAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;SAC/C;QAED,EAAE;QACF,iBAAM,SAAS,YAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAE,CAAC;IAC3E,CAAC;IACF,kCAAC;AAAD,CAAC,AA/BD,CAAiD,qBAAqB,GA+BrE","sourcesContent":["/*\r\n * Copyright (C) 2020 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DChartCoordinate } from \"./d-chart-coordinate\";\r\nimport { DChartSeriesLineOfAny, DChartSeriesLineOfAnyOptions } from \"./d-chart-series-line-of-any\";\r\nimport { EShapeLineOfAny } from \"./shape/variant/e-shape-line-of-any\";\r\nimport { EShapeLineOfTriangles } from \"./shape/variant/e-shape-line-of-triangles\";\r\n\r\n/**\r\n * A series represents a line of triangles.\r\n * Data points must be sorted in ascending order on the X axis.\r\n */\r\nexport class DChartSeriesLineOfTriangles extends DChartSeriesLineOfAny {\r\n\tprotected _sizeId: number;\r\n\r\n\tconstructor( options?: DChartSeriesLineOfAnyOptions ) {\r\n\t\tsuper( options );\r\n\t\tthis._sizeId = 0;\r\n\t}\r\n\r\n\tprotected newLineOfAny(): EShapeLineOfAny {\r\n\t\treturn new EShapeLineOfTriangles();\r\n\t}\r\n\r\n\tprotected applyLine(\r\n\t\tline: EShapeLineOfAny,\r\n\t\txcoordinate: DChartCoordinate,\r\n\t\tycoordinate: DChartCoordinate,\r\n\t\tsx: number, sy: number,\r\n\t\tcx: number, cy: number,\r\n\t\tvalues: number[]\r\n\t): void {\r\n\t\t// Offset\r\n\t\tconst size = this._size;\r\n\t\tconst offset = this._offset;\r\n\t\tif( size && offset && this._sizeId !== size.y ) {\r\n\t\t\tthis._sizeId = size.y;\r\n\t\t\tline.points.offset.y = offset.y - size.y * 0.2;\r\n\t\t}\r\n\r\n\t\t//\r\n\t\tsuper.applyLine( line, xcoordinate, ycoordinate, sx, sy, cx, cy, values );\r\n\t}\r\n}\r\n"]}