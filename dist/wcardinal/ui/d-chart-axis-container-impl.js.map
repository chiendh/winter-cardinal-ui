{"version":3,"file":"d-chart-axis-container-impl.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-axis-container-impl.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DChartAxis } from \"./d-chart-axis\";\r\nimport { DChartAxisContainer, DChartAxisContainerOptions } from \"./d-chart-axis-container\";\r\nimport { DChartAxisPosition } from \"./d-chart-axis-position\";\r\nimport { DChartPlotArea } from \"./d-chart-plot-area\";\r\nimport { EShapeContainer } from \"./shape/e-shape-container\";\r\n\r\nexport class DChartAxisContainerImpl implements DChartAxisContainer {\r\n\tprotected _plotArea: DChartPlotArea;\r\n\tprotected _container: EShapeContainer;\r\n\tprotected _list: Map<DChartAxisPosition, DChartAxis[]>;\r\n\r\n\tconstructor( plotArea: DChartPlotArea, options?: DChartAxisContainerOptions ) {\r\n\t\tthis._plotArea = plotArea;\r\n\t\tthis._container = new EShapeContainer();\r\n\r\n\t\tthis._list = new Map<DChartAxisPosition, DChartAxis[]>();\r\n\t\tconst list = options && options.list;\r\n\t\tif( list ) {\r\n\t\t\tfor( let i = 0, imax = list.length; i < imax; ++i ) {\r\n\t\t\t\tthis.add( list[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget container(): EShapeContainer {\r\n\t\treturn this._container;\r\n\t}\r\n\r\n\tget plotArea(): DChartPlotArea {\r\n\t\treturn this._plotArea;\r\n\t}\r\n\r\n\tadd( axis: DChartAxis ): void {\r\n\t\tconst list = this._list;\r\n\t\tlet axes = list.get( axis.position );\r\n\t\tif( axes == null ) {\r\n\t\t\taxes = [];\r\n\t\t\tlist.set( axis.position, axes );\r\n\t\t}\r\n\t\taxes.push( axis );\r\n\t\taxis.bind( this, axes.length - 1 );\r\n\t}\r\n\r\n\tget( position: DChartAxisPosition, index: number ): DChartAxis | null {\r\n\t\tconst list = this._list;\r\n\t\tconst axes = list.get( position );\r\n\t\tif( axes ) {\r\n\t\t\tif( 0 <= index && index < axes.length ) {\r\n\t\t\t\treturn axes[ index ];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tindexOf( axis: DChartAxis ): number {\r\n\t\tconst list = this._list;\r\n\t\tconst axes = list.get( axis.position );\r\n\t\tif( axes ) {\r\n\t\t\treturn axes.indexOf( axis );\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tclear( position: DChartAxisPosition ): this {\r\n\t\tconst list = this._list;\r\n\t\tconst axes = list.get( position );\r\n\t\tif( axes ) {\r\n\t\t\tfor( let i = 0, imax = axes.length; i < imax; ++i ) {\r\n\t\t\t\taxes[ i ].destroy();\r\n\t\t\t}\r\n\t\t\taxes.length = 0;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsize( position: DChartAxisPosition ): number {\r\n\t\tconst list = this._list;\r\n\t\tconst axes = list.get( position );\r\n\t\tif( axes ) {\r\n\t\t\treturn axes.length;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tthis._list.forEach(( axes: DChartAxis[] ): void => {\r\n\t\t\tfor( let i = 0, imax = axes.length; i < imax; ++i ) {\r\n\t\t\t\taxes[ i ].update();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tthis._list.forEach(( axes: DChartAxis[] ): void => {\r\n\t\t\tfor( let i = 0, imax = axes.length; i < imax; ++i ) {\r\n\t\t\t\taxes[ i ].destroy();\r\n\t\t\t}\r\n\t\t\taxes.length = 0;\r\n\t\t});\r\n\t}\r\n}\r\n"]}