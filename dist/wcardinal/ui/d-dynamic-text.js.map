{"version":3,"file":"d-dynamic-text.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-dynamic-text.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,IAAI,EAAE,YAAY,EAAY,OAAO,EAAE,MAAM,SAAS,CAAC;AAChE,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AACjC,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AACjE,OAAO,EAAE,iBAAiB,EAA4B,MAAM,wBAAwB,CAAC;AAGrF;IAAkC,gCAAI;IAerC,sBAAa,IAAY,EAAE,OAAkC;QAA7D,YACC,kBAAO,IAAI,oBAAoB,EAAE,EAAE,IAAI,YAAY,CAAE,OAAO,CAAC,KAAK,CAAE,CAAE,SAkBtE;QAhBA,KAAI,CAAC,MAAM,GAAG,IAAI,iBAAiB,CAAE,OAAO,EAAE;YAC7C,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,KAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/B,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,KAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,KAAI,CAAC,OAAO,EAAE,CAAC;;IAChB,CAAC;IAES,8BAAO,GAAjB;QACC,IAAM,KAAK,GAAG,aAAa,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAC7C,IAAI,KAAK,EAAG;YACX,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,IAAI,CAAC,QAAQ,EAAG;gBACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAEtB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,IAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;gBACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;gBAC5B,IAAM,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;gBAC5C,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;gBAChC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;gBACxB,IAAM,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;gBACxC,KAAK,CAAC,OAAO,EAAE,CAAC;gBAEhB,IAAM,OAAO,GAAG,KAAK,CAAC,qBAAqB,EAAE,CAAC;gBAC9C,IAAI,IAAI,KAAK,YAAY,IAAI,MAAM,KAAK,cAAc,IAAI,IAAI,KAAK,YAAY,EAAG;oBACjF,OAAO,CAAC,GAAG,CAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAE,CAAC;oBAC5C,OAAO,CAAC,MAAM,CAAE,cAAc,EAAE,YAAY,EAAE,YAAY,CAAE,CAAC;iBAC7D;aACD;SACD;IACF,CAAC;IAED,sBAAI,8BAAI;aAAR;YACC,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;aAED,UAAU,IAAY;YACrB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAG;gBACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;aACf;QACF,CAAC;;;OATA;IAWD,sBAAI,+BAAK;aAAT;YACC,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,OAAO,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACvD,CAAC;aAED,UAAW,KAAa;YACvB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC1C,IAAI,CAAC,IAAI,GAAG,aAAa,EAAG;gBAC3B,IAAM,QAAQ,GAAG,KAAK,GAAG,aAAa,CAAC;gBACvC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAE,CAAC;aAC7D;QACF,CAAC;;;OATA;IAWD,sBAAI,gCAAM;aAAV;YACC,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,OAAO,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QACxD,CAAC;aAED,UAAY,MAAc;YACzB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC5C,IAAI,CAAC,IAAI,GAAG,cAAc,EAAG;gBAC5B,IAAM,QAAQ,GAAG,MAAM,GAAG,cAAc,CAAC;gBACzC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAE,CAAC;aAC7D;QACF,CAAC;;;OATA;IAWD,sBAAI,iCAAO;aAAX;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAI,+BAAK;aAAT;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;;;OAAA;IAED,6BAAM,GAAN;QACC,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,KAAK,IAAI,IAAI,EAAG;YACnB,IAAM,KAAK,GAAG,aAAa,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;YAC7C,IAAI,KAAK,EAAG;gBACX,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,KAAK,GAAG,KAAK,CAAC,qBAAqB,EAAE,CAAC,GAAG,CAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAE,CAAC;gBACtE,IAAI,KAAK,IAAI,IAAI,EAAG;oBACnB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,iBAAiB,EAAE,CAAC;oBACvD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;oBAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;iBAC7B;aACD;SACD;aAAM;YACN,IAAM,cAAc,GAAG,KAAK,CAAC,iBAAiB,EAAE,CAAC;YACjD,IAAI,cAAc,KAAK,IAAI,CAAC,qBAAqB,EAAG;gBACnD,IAAI,CAAC,qBAAqB,GAAG,cAAc,CAAC;gBAC5C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;aAC7B;SACD;QAED,IAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACjD,IAAI,aAAa,KAAK,gBAAgB,EAAG;YACxC,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;YACvC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC7B;QAED,IAAI,IAAI,CAAC,gBAAgB,EAAG;YAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAE,CAAC;SAC5D;IACF,CAAC;IAES,uCAAgB,GAA1B;QACC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAG;YAC1B,IAAM,QAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,QAAM,YAAY,KAAK,EAAG;gBAC7B,OAAO,QAAM,CAAC,KAAK,GAAG,QAAM,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,QAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC;aACtG;SACD;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,4CAAqB,GAArB,UAAuB,KAAa;QACnC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,uCAAgB,GAAhB;QACC,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,iBAAM,gBAAgB,WAAE,CAAC;IAC1B,CAAC;IAED,8BAAO,GAAP,UAAS,QAAmB;QAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,iBAAM,OAAO,YAAU,QAAQ,CAAE,CAAC;IACpC,CAAC;IACF,mBAAC;AAAD,CAAC,AA3KD,CAAkC,IAAI,GA2KrC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Mesh, MeshMaterial, Renderer, Texture } from \"pixi.js\";\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBase } from \"./d-base\";\r\nimport { DDynamicTextGeometry } from \"./d-dynamic-text-geometry\";\r\nimport { DDynamicTextStyle, DDynamicTextStyleOptions } from \"./d-dynamic-text-style\";\r\nimport { DynamicFontAtlas } from \"./util/dynamic-font-atlas\";\r\n\r\nexport class DDynamicText extends Mesh {\r\n\tprotected _style: DDynamicTextStyle;\r\n\tprotected _text: string;\r\n\tprotected _textApproved: string;\r\n\tprotected _isDirty: boolean;\r\n\tprotected _isGeometryDirty: boolean;\r\n\tprotected _atlas: DynamicFontAtlas | null;\r\n\tprotected _atlasRevisionUpdated: number;\r\n\tprotected _width: number;\r\n\tprotected _height: number;\r\n\tprotected _clippingWidth: number | undefined;\r\n\tprotected _clippingWidthDelta: number;\r\n\r\n\treadonly geometry!: DDynamicTextGeometry;\r\n\r\n\tconstructor( text: string, options?: DDynamicTextStyleOptions ) {\r\n\t\tsuper( new DDynamicTextGeometry(), new MeshMaterial( Texture.EMPTY ) );\r\n\r\n\t\tthis._style = new DDynamicTextStyle( options, (): void => {\r\n\t\t\tthis._isDirty = true;\r\n\t\t\tthis._isGeometryDirty = true;\r\n\t\t\tthis._atlas = null;\r\n\t\t\tthis.update_();\r\n\t\t});\r\n\t\tthis._text = text;\r\n\t\tthis._textApproved = \"\";\r\n\t\tthis._isDirty = true;\r\n\t\tthis._isGeometryDirty = true;\r\n\t\tthis._atlas = null;\r\n\t\tthis._atlasRevisionUpdated = 0;\r\n\t\tthis._width = 0;\r\n\t\tthis._height = 0;\r\n\t\tthis._clippingWidthDelta = 0;\r\n\t\tthis.update_();\r\n\t}\r\n\r\n\tprotected update_(): void {\r\n\t\tconst layer = DApplications.getLayer( this );\r\n\t\tif( layer ) {\r\n\t\t\tconst style = this._style;\r\n\t\t\tif( this._isDirty ) {\r\n\t\t\t\tthis._isDirty = false;\r\n\r\n\t\t\t\tconst text = this._text;\r\n\t\t\t\tconst textApproved = this._textApproved;\r\n\t\t\t\tthis._textApproved = text;\r\n\t\t\t\tconst fontId = style.fontId;\r\n\t\t\t\tconst fontIdApproved = style.fontIdApproved;\r\n\t\t\t\tconst fontSize = style.fontSize;\r\n\t\t\t\tconst fill = style.fill;\r\n\t\t\t\tconst fillApproved = style.fillApproved;\r\n\t\t\t\tstyle.approve();\r\n\r\n\t\t\t\tconst atlases = layer.getDynamicFontAtlases();\r\n\t\t\t\tif( text !== textApproved || fontId !== fontIdApproved || fill !== fillApproved ) {\r\n\t\t\t\t\tatlases.add( fontId, fontSize, fill, text );\r\n\t\t\t\t\tatlases.remove( fontIdApproved, fillApproved, textApproved );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget text(): string {\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tset text( text: string ) {\r\n\t\tif( this._text !== text ) {\r\n\t\t\tthis._text = text;\r\n\t\t\tthis._isDirty = true;\r\n\t\t\tthis._isGeometryDirty = true;\r\n\t\t\tthis.update_();\r\n\t\t}\r\n\t}\r\n\r\n\tget width(): number {\r\n\t\tthis.update();\r\n\t\treturn Math.abs( this.scale.x ) * this.geometry.width;\r\n\t}\r\n\r\n\tset width( width: number ) {\r\n\t\tthis.update();\r\n\t\tconst geometryWidth = this.geometry.width;\r\n\t\tif( +1e-4 < geometryWidth ) {\r\n\t\t\tconst newScale = width / geometryWidth;\r\n\t\t\tthis.scale.x = ( 0 <= this.scale.x ? +newScale : -newScale );\r\n\t\t}\r\n\t}\r\n\r\n\tget height(): number {\r\n\t\tthis.update();\r\n\t\treturn Math.abs( this.scale.y ) * this.geometry.height;\r\n\t}\r\n\r\n\tset height( height: number ) {\r\n\t\tthis.update();\r\n\t\tconst geometryHeight = this.geometry.height;\r\n\t\tif( +1e-4 < geometryHeight ) {\r\n\t\t\tconst newScale = height / geometryHeight;\r\n\t\t\tthis.scale.y = ( 0 <= this.scale.y ? +newScale : -newScale );\r\n\t\t}\r\n\t}\r\n\r\n\tget clipped(): boolean {\r\n\t\treturn this.geometry.clipped;\r\n\t}\r\n\r\n\tget style(): DDynamicTextStyle {\r\n\t\treturn this._style;\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tthis.update_();\r\n\r\n\t\tlet atlas = this._atlas;\r\n\t\tif( atlas == null ) {\r\n\t\t\tconst layer = DApplications.getLayer( this );\r\n\t\t\tif( layer ) {\r\n\t\t\t\tconst style = this._style;\r\n\t\t\t\tatlas = layer.getDynamicFontAtlases().get( style.fontId, style.fill );\r\n\t\t\t\tif( atlas != null ) {\r\n\t\t\t\t\tthis._atlasRevisionUpdated = atlas.getRevisionUpdate();\r\n\t\t\t\t\tthis._atlas = atlas;\r\n\t\t\t\t\tthis.texture = atlas.texture;\r\n\t\t\t\t\tthis._isGeometryDirty = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst revisionUpdate = atlas.getRevisionUpdate();\r\n\t\t\tif( revisionUpdate !== this._atlasRevisionUpdated ) {\r\n\t\t\t\tthis._atlasRevisionUpdated = revisionUpdate;\r\n\t\t\t\tthis._isGeometryDirty = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst clippingWidth = this._clippingWidth;\r\n\t\tconst newClippingWidth = this.getClippingWidth();\r\n\t\tif( clippingWidth !== newClippingWidth ) {\r\n\t\t\tthis._clippingWidth = newClippingWidth;\r\n\t\t\tthis._isGeometryDirty = true;\r\n\t\t}\r\n\r\n\t\tif( this._isGeometryDirty ) {\r\n\t\t\tthis._isGeometryDirty = false;\r\n\t\t\tthis.geometry.update( this._text, atlas, newClippingWidth );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getClippingWidth(): number | undefined {\r\n\t\tif( this._style.clipping ) {\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif( parent instanceof DBase ) {\r\n\t\t\t\treturn parent.width - parent.padding.getLeft() - parent.padding.getRight() - this._clippingWidthDelta;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tsetClippingWidthDelta( width: number ): void {\r\n\t\tthis._clippingWidthDelta = width;\r\n\t}\r\n\r\n\t_calculateBounds(): void {\r\n\t\tthis.update();\r\n\t\tsuper._calculateBounds();\r\n\t}\r\n\r\n\t_render( renderer?: Renderer ): void {\r\n\t\tthis.update();\r\n\t\t(super._render as any)( renderer );\r\n\t}\r\n}\r\n"]}