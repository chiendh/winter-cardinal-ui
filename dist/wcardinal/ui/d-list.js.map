{"version":3,"file":"d-list.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-list.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DisplayObject, interaction } from \"pixi.js\";\r\nimport InteractionEvent = interaction.InteractionEvent;\r\nimport { DBase, DBaseOptions } from \"./d-base\";\r\nimport { DContentOptions } from \"./d-content\";\r\nimport { DListSelection, DListSelectionOptions } from \"./d-list-selection\";\r\nimport { DPane, DPaneOptions, DThemePane } from \"./d-pane\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\n\r\nexport interface DListOptions<\r\n\tTHEME extends DThemeList = DThemeList,\r\n\tCONTENT_OPTIONS extends DBaseOptions = DContentOptions\r\n> extends DPaneOptions<THEME, CONTENT_OPTIONS> {\r\n\tselection?: DListSelectionOptions | DListSelection;\r\n}\r\n\r\nexport interface DThemeList extends DThemePane {\r\n\r\n}\r\n\r\nexport class DList<\r\n\tTHEME extends DThemeList = DThemeList,\r\n\tCONTENT_OPTIONS extends DBaseOptions = DContentOptions,\r\n\tOPTIONS extends DListOptions<THEME, CONTENT_OPTIONS> = DListOptions<THEME, CONTENT_OPTIONS>\r\n> extends DPane<THEME, CONTENT_OPTIONS, OPTIONS> {\r\n\tprotected _selection!: DListSelection;\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tconst selection = options && options.selection;\r\n\t\tthis._selection = ( selection instanceof DListSelection ?\r\n\t\t\tselection : this.newSelection( selection )\r\n\t\t);\r\n\r\n\t\tUtilPointerEvent.onClick( this, ( e: InteractionEvent ): void => {\r\n\t\t\tconst child: DisplayObject | null = this.findItem( e.target );\r\n\t\t\tif( child instanceof DBase && child.isActionable() ) {\r\n\t\t\t\tthis.selection.add( child );\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected newSelection( options?: DListSelectionOptions ): DListSelection {\r\n\t\treturn new DListSelection( this._content, options );\r\n\t}\r\n\r\n\tprotected onChildrenDirty(): void {\r\n\t\tconst selection = this._selection;\r\n\t\tif( selection != null ) {\r\n\t\t\tselection.toDirty();\r\n\t\t}\r\n\t\tsuper.onChildrenDirty();\r\n\t}\r\n\r\n\tget selection(): DListSelection {\r\n\t\treturn this._selection;\r\n\t}\r\n\r\n\tprotected findItem( target: DisplayObject | null ): DisplayObject | null {\r\n\t\tconst content = this.content;\r\n\t\tlet current = target;\r\n\t\twhile( current != null ) {\r\n\t\t\tif( current.parent === content ) {\r\n\t\t\t\treturn current;\r\n\t\t\t}\r\n\t\t\tcurrent = current.parent;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tonRefit(): void {\r\n\t\tsuper.onRefit();\r\n\t\tthis.updateChildPosition();\r\n\t\tthis.updateChildVisibility();\r\n\t}\r\n\r\n\tprotected updateChildPosition(): void {\r\n\t\tconst content = this.content;\r\n\t\tconst items = content.children;\r\n\t\tlet y = 0;\r\n\t\tfor( let i = 0, imax = items.length; i < imax; ++i ) {\r\n\t\t\tconst item = items[ i ];\r\n\t\t\tif( item instanceof DBase ) {\r\n\t\t\t\titem.y = y;\r\n\t\t\t\ty += item.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst scrollLimit = Math.min( 0, -y + this.height );\r\n\t\tif( content.y < scrollLimit ) {\r\n\t\t\tcontent.y = scrollLimit;\r\n\t\t}\r\n\t\tcontent.height = y;\r\n\t}\r\n\r\n\tprotected updateChildVisibility(): void {\r\n\t\tconst content = this.content;\r\n\t\tconst items = content.children;\r\n\t\tconst from = -content.y;\r\n\t\tconst to = from + this.height;\r\n\t\tfor( let i = 0, imax = items.length; i < imax; ++i ) {\r\n\t\t\tconst item = items[ i ];\r\n\t\t\tif( item instanceof DBase ) {\r\n\t\t\t\tconst itemY = item.y;\r\n\t\t\t\titem.visible = ( from <= itemY + item.height && itemY <= to );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onContentChanged(): void {\r\n\t\tsuper.onContentChanged();\r\n\t\tthis.updateChildVisibility();\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DList\";\r\n\t}\r\n}\r\n"]}