{"version":3,"file":"d-base-background-mesh-geometry.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-base-background-mesh-geometry.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Buffer, MeshGeometry, Texture, TextureUvs } from \"pixi.js\";\r\nimport { DCornerMask } from \"./d-corner-mask\";\r\n\r\nexport class DBaseBackgroundMeshGeometry extends MeshGeometry {\r\n\tprotected _texture: Texture;\r\n\tprotected _width: number;\r\n\tprotected _height: number;\r\n\tprotected _borderSize: number;\r\n\tprotected _cornerMask: DCornerMask;\r\n\tprotected _isDirty: boolean;\r\n\tprotected _textureId: number;\r\n\tprotected _vertices: Float32Array;\r\n\tprotected _uvs: Float32Array;\r\n\tprotected _indices: Uint16Array;\r\n\tprotected _vertexBuffer: Buffer;\r\n\tprotected _uvBuffer: Buffer;\r\n\tprotected _indexBuffer: Buffer;\r\n\r\n\tconstructor( texture: Texture, width: number, height: number, borderSize: number, cornerMask: DCornerMask ) {\r\n\t\tsuper( new Float32Array( 56 ), new Float32Array( 56 ), new Uint16Array( 42 ) );\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._texture = texture;\r\n\t\tthis._borderSize = borderSize;\r\n\t\tthis._cornerMask = cornerMask;\r\n\t\tthis._isDirty = true;\r\n\t\tthis._textureId = NaN;\r\n\r\n\t\tthis._vertexBuffer = this.getBuffer( \"aVertexPosition\" );\r\n\t\tthis._vertices = this._vertexBuffer.data as Float32Array;\r\n\t\tthis._uvBuffer = this.getBuffer( \"aTextureCoord\" );\r\n\t\tthis._uvs = this._uvBuffer.data as Float32Array;\r\n\t\tthis._indexBuffer = this.getIndex();\r\n\t\tthis._indices = this._indexBuffer.data as Uint16Array;\r\n\t}\r\n\r\n\tget borderSize(): number {\r\n\t\treturn this._borderSize;\r\n\t}\r\n\r\n\tset borderSize( borderSize: number ) {\r\n\t\tif( this._borderSize !== borderSize ) {\r\n\t\t\tthis._borderSize = borderSize;\r\n\t\t\tthis._isDirty = true;\r\n\t\t}\r\n\t}\r\n\r\n\tget cornerMask(): DCornerMask {\r\n\t\treturn this._cornerMask;\r\n\t}\r\n\r\n\tset cornerMask( cornerMask: DCornerMask ) {\r\n\t\tif( this._cornerMask !== cornerMask ) {\r\n\t\t\tthis._cornerMask = cornerMask;\r\n\t\t\tthis._isDirty = true;\r\n\t\t}\r\n\t}\r\n\r\n\tget width(): number {\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tset width( width: number ) {\r\n\t\tif( this._width !== width ) {\r\n\t\t\tthis._width = width;\r\n\t\t\tthis._isDirty = true;\r\n\t\t}\r\n\t}\r\n\r\n\tget height(): number {\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tset height( height: number ) {\r\n\t\tif( this._height !== height ) {\r\n\t\t\tthis._height = height;\r\n\t\t\tthis._isDirty = true;\r\n\t\t}\r\n\t}\r\n\r\n\tget texture(): Texture {\r\n\t\treturn this._texture;\r\n\t}\r\n\r\n\tset texture( texture: Texture ) {\r\n\t\tif( this._texture !== texture ) {\r\n\t\t\tthis._texture = texture;\r\n\t\t\tthis._isDirty = true;\r\n\t\t\tthis._textureId = NaN;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getTextureId(): number {\r\n\t\treturn (this._texture as any)._updateID;\r\n\t}\r\n\r\n\tprotected fillVertices( iv: number, array: Float32Array, x0: number, x1: number, y0: number, y1: number ): void {\r\n\t\tarray[ iv + 0 ] = x0;\r\n\t\tarray[ iv + 1 ] = y0;\r\n\t\tarray[ iv + 2 ] = x1;\r\n\t\tarray[ iv + 3 ] = y0;\r\n\t\tarray[ iv + 4 ] = x0;\r\n\t\tarray[ iv + 5 ] = y1;\r\n\t\tarray[ iv + 6 ] = x1;\r\n\t\tarray[ iv + 7 ] = y1;\r\n\t}\r\n\r\n\tprotected fillIndices( ii: number, indices: Uint16Array, iv: number ): void {\r\n\t\tindices[ ii + 0 ] = iv + 0;\r\n\t\tindices[ ii + 1 ] = iv + 1;\r\n\t\tindices[ ii + 2 ] = iv + 2;\r\n\t\tindices[ ii + 3 ] = iv + 1;\r\n\t\tindices[ ii + 4 ] = iv + 3;\r\n\t\tindices[ ii + 5 ] = iv + 2;\r\n\t}\r\n\r\n\tprotected fillUvsCorner(\r\n\t\tiv: number, uvs: Float32Array, c: boolean,\r\n\t\tu0: number, u1: number, u2: number, u3: number,\r\n\t\tv0: number, v1: number, v2: number, v3: number\r\n\t): void {\r\n\t\tif( c ) {\r\n\t\t\tthis.fillVertices( iv, uvs, u0, u1, v0, v1 );\r\n\t\t} else {\r\n\t\t\tthis.fillVertices( iv, uvs, u3, u2, v0, v1 );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected fillUvs( iv: number, uvs: Float32Array, u0: number, u1: number, v0: number, v1: number ): void {\r\n\t\tthis.fillVertices( iv, uvs, u0, u1, v0, v1 );\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tconst texture = this.texture;\r\n\t\tif( ! texture.valid ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textureId = this.getTextureId();\r\n\t\tif( this._isDirty || this._textureId !== textureId ) {\r\n\t\t\tthis._isDirty = false;\r\n\t\t\tthis._textureId = textureId;\r\n\t\t\tconst vertices = this._vertices;\r\n\t\t\tconst uvs = this._uvs;\r\n\t\t\tconst indices = this._indices;\r\n\r\n\t\t\tconst width = this._width;\r\n\t\t\tconst height = this._height;\r\n\t\t\tconst borderSize = this._borderSize;\r\n\r\n\t\t\tconst x0 = 0;\r\n\t\t\tconst x1 = Math.min( width * 0.5, borderSize );\r\n\t\t\tconst x2 = Math.max( width * 0.5, width - borderSize );\r\n\t\t\tconst x3 = width;\r\n\r\n\t\t\tconst y0 = 0;\r\n\t\t\tconst y1 = Math.min( height * 0.5, borderSize );\r\n\t\t\tconst y2 = Math.max( height * 0.5, height - borderSize );\r\n\t\t\tconst y3 = height;\r\n\r\n\t\t\tconst textureUvs: TextureUvs = (texture as any)._uvs;\r\n\r\n\t\t\tconst l = textureUvs.x0;\r\n\t\t\tconst r = textureUvs.x1;\r\n\t\t\tconst t = textureUvs.y0;\r\n\t\t\tconst b = textureUvs.y3;\r\n\t\t\tconst w = (r - l) * (borderSize / texture.width);\r\n\t\t\tconst h = (b - t) * (borderSize / texture.height);\r\n\r\n\t\t\tconst u0 = l;\r\n\t\t\tconst u1 = l + w;\r\n\t\t\tconst u2 = r - w;\r\n\t\t\tconst u3 = r;\r\n\r\n\t\t\tconst v0 = t;\r\n\t\t\tconst v1 = t + h;\r\n\t\t\tconst v2 = b - h;\r\n\t\t\tconst v3 = b;\r\n\r\n\t\t\tconst cornerMask = this._cornerMask;\r\n\t\t\tconst ctl = ! (cornerMask & DCornerMask.TOP_LEFT);\r\n\t\t\tconst ctr = ! (cornerMask & DCornerMask.TOP_RIGHT);\r\n\t\t\tconst cbl = ! (cornerMask & DCornerMask.BOTTOM_LEFT);\r\n\t\t\tconst cbr = ! (cornerMask & DCornerMask.BOTTOM_RIGHT);\r\n\r\n\t\t\t// Vertices & UVs\r\n\t\t\tlet iv = 0;\r\n\t\t\tlet ia = 0;\r\n\t\t\tlet ii = 0;\r\n\r\n\t\t\t// Top left\r\n\t\t\tthis.fillVertices( iv, vertices, x0, x1, y0, y1 );\r\n\t\t\tthis.fillUvsCorner( iv, uvs, ctl, u0, u1, u2, u3, v0, v1, v2, v3 );\r\n\t\t\tthis.fillIndices( ii, indices, ia );\r\n\t\t\tiv += 8;\r\n\t\t\tia += 4;\r\n\t\t\tii += 6;\r\n\r\n\t\t\t// Top middle\r\n\t\t\tthis.fillVertices( iv, vertices, x1, x2, y0, y1 );\r\n\t\t\tthis.fillUvs( iv, uvs, u1, u2, v0, v1 );\r\n\t\t\tthis.fillIndices( ii, indices, ia );\r\n\t\t\tiv += 8;\r\n\t\t\tia += 4;\r\n\t\t\tii += 6;\r\n\r\n\t\t\t// Top right\r\n\t\t\tthis.fillVertices( iv, vertices, x3, x2, y0, y1 );\r\n\t\t\tthis.fillUvsCorner( iv, uvs, ctr, u0, u1, u2, u3, v0, v1, v2, v3 );\r\n\t\t\tthis.fillIndices( ii, indices, ia );\r\n\t\t\tiv += 8;\r\n\t\t\tia += 4;\r\n\t\t\tii += 6;\r\n\r\n\t\t\t// Middle\r\n\t\t\tthis.fillVertices( iv, vertices, x0, x3, y1, y2 );\r\n\t\t\tthis.fillUvs( iv, uvs, u0, u3, v1, v2 );\r\n\t\t\tthis.fillIndices( ii, indices, ia );\r\n\t\t\tiv += 8;\r\n\t\t\tia += 4;\r\n\t\t\tii += 6;\r\n\r\n\t\t\t// Bottom left\r\n\t\t\tthis.fillVertices( iv, vertices, x0, x1, y3, y2 );\r\n\t\t\tthis.fillUvsCorner( iv, uvs, cbl, u0, u1, u2, u3, v0, v1, v2, v3 );\r\n\t\t\tthis.fillIndices( ii, indices, ia );\r\n\t\t\tiv += 8;\r\n\t\t\tia += 4;\r\n\t\t\tii += 6;\r\n\r\n\t\t\t// Bottom middle\r\n\t\t\tthis.fillVertices( iv, vertices, x1, x2, y2, y3 );\r\n\t\t\tthis.fillUvs( iv, uvs, u1, u2, v2, v3 );\r\n\t\t\tthis.fillIndices( ii, indices, ia );\r\n\t\t\tiv += 8;\r\n\t\t\tia += 4;\r\n\t\t\tii += 6;\r\n\r\n\t\t\t// Bottom right\r\n\t\t\tthis.fillVertices( iv, vertices, x3, x2, y3, y2 );\r\n\t\t\tthis.fillUvsCorner( iv, uvs, cbr, u3, u2, u1, u0, v3, v2, v1, v0 );\r\n\t\t\tthis.fillIndices( ii, indices, ia );\r\n\r\n\t\t\tthis._vertexBuffer.update();\r\n\t\t\tthis._uvBuffer.update();\r\n\t\t\tthis._indexBuffer.update();\r\n\t\t}\r\n\t}\r\n}\r\n"]}