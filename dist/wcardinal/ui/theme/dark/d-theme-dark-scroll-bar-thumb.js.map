{"version":3,"file":"d-theme-dark-scroll-bar-thumb.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/dark/d-theme-dark-scroll-bar-thumb.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAGlD,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D;IAA8C,4CAAc;IAA5D;QAAA,qEAwCC;QAvCA,WAAK,GAAG,QAAQ,CAAC;;IAuClB,CAAC;IArCA,qDAAkB,GAAlB,UAAoB,KAAiB;QACpC,IAAI,WAAW,CAAC,SAAS,CAAE,KAAK,CAAE,IAAI,WAAW,CAAC,UAAU,CAAE,KAAK,CAAE,EAAG;YACvE,OAAO,mBAAmB,CAAC,eAAe,CAAC;SAC3C;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,qDAAkB,GAAlB,UAAoB,KAAiB;QACpC,IAAI,WAAW,CAAC,SAAS,CAAE,KAAK,CAAE,IAAI,WAAW,CAAC,UAAU,CAAE,KAAK,CAAE,EAAG;YACvE,OAAO,GAAG,CAAC;SACX;QACD,OAAO,GAAG,CAAC;IACZ,CAAC;IAED,iDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,iDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,CAAC,CAAC;IACV,CAAC;IAED,iDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,CAAC,CAAC;IACV,CAAC;IAED,2CAAQ,GAAR;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,4CAAS,GAAT;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,iDAAc,GAAd;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IACF,+BAAC;AAAD,CAAC,AAxCD,CAA8C,cAAc,GAwC3D","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DBaseStates } from \"../../d-base-states\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DThemeScrollBarThumb } from \"../../d-scroll-bar-thumb\";\r\nimport { DThemeDarkBase } from \"./d-theme-dark-base\";\r\nimport { DThemeDarkConstants } from \"./d-theme-dark-constants\";\r\n\r\nexport class DThemeDarkScrollBarThumb extends DThemeDarkBase implements DThemeScrollBarThumb {\r\n\tCOLOR = 0x646464;\r\n\r\n\tgetBackgroundColor( state: DBaseState ): number {\r\n\t\tif( DBaseStates.isHovered( state ) || DBaseStates.isDragging( state ) ) {\r\n\t\t\treturn DThemeDarkConstants.HIGHLIGHT_COLOR;\r\n\t\t}\r\n\t\treturn this.COLOR;\r\n\t}\r\n\r\n\tgetBackgroundAlpha( state: DBaseState ): number {\r\n\t\tif( DBaseStates.isHovered( state ) || DBaseStates.isDragging( state ) ) {\r\n\t\t\treturn 1.0;\r\n\t\t}\r\n\t\treturn 0.2;\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetBorderAlpha( state: DBaseState ): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tgetBorderWidth( state: DBaseState ): number {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\tgetWidth(): DCoordinateSize {\r\n\t\treturn 13;\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn 13;\r\n\t}\r\n\r\n\tgetMinimumSize(): number {\r\n\t\treturn 16;\r\n\t}\r\n}\r\n"]}