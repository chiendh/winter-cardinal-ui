{"version":3,"file":"d-theme-dark-tree-item-toggle-icon.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/dark/d-theme-dark-tree-item-toggle-icon.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAElD,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAEzD,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACvD,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAEvD,eAAe,CAAC,GAAG,CAAE,oCAAoC,EAAE,EAAE,EAAE,EAAE,EAChE,iCAA+B;IAC9B,kGAA0F;IAC3F,MAAM,CACN,CAAC;AAEF,eAAe,CAAC,GAAG,CAAE,oCAAoC,EAAE,EAAE,EAAE,EAAE,EAChE,iCAA+B;IAC9B,kGAA0F;IAC3F,MAAM,CACN,CAAC;AAEF;IAAkD,gDAAe;IAAjE;;IAiDA,CAAC;IAhDA,yDAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,qDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,gDAAS,GAAT;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,+CAAQ,GAAR;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,6DAAsB,GAAtB;QACC,OAAO,gBAAgB,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,qDAAc,GAAd;QACC,OAAO,CAAC,CAAC;IACV,CAAC;IAED,sDAAe,GAAf;QACC,OAAO,CAAC,CAAC;IACV,CAAC;IAED,oDAAa,GAAb;QACC,OAAO,WAAW,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,wDAAiB,GAAjB,UAAmB,KAAiB;QACnC,IAAI,CAAE,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAE,KAAK,CAAE,EAAG;YAC7E,OAAO,QAAQ,CAAC;SAChB;QACD,OAAO,cAAc,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACzC,CAAC;IAED,qDAAc,GAAd,UAAgB,KAAiB;QAChC,IAAI,KAAK,GAAG,cAAc,CAAC,QAAQ,EAAE;YACpC,OAAO,eAAe,CAAC,QAAQ,CAAC,kCAAkC,CAAC;SACnE;aAAM,IAAI,KAAK,GAAG,cAAc,CAAC,SAAS,EAAE;YAC5C,OAAO,eAAe,CAAC,QAAQ,CAAC,kCAAkC,CAAC;SACnE;aAAM;YACN,OAAO,IAAI,CAAC;SACZ;IACF,CAAC;IACF,mCAAC;AAAD,CAAC,AAjDD,CAAkD,eAAe,GAiDhE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DisplayObject, Texture } from \"pixi.js\";\r\nimport { DAlignHorizontal } from \"../../d-align-horizontal\";\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DBaseStates } from \"../../d-base-states\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DCornerMask } from \"../../d-corner-mask\";\r\nimport { DTreeItemState } from \"../../d-tree-item-state\";\r\nimport { DThemeTreeItemToggleIcon } from \"../../d-tree-item-toggle-icon\";\r\nimport { DThemeDarkAtlas } from \"./d-theme-dark-atlas\";\r\nimport { DThemeDarkFont } from \"./d-theme-dark-font\";\r\nimport { DThemeDarkImage } from \"./d-theme-dark-image\";\r\n\r\nDThemeDarkAtlas.add( \"menu_item_expandable_header_closed\", 14, 14,\r\n\t`<g transform=\"scale(1, 0.7)\">` +\r\n\t\t`<polyline fill=\"none\" stroke=\"#fff\" stroke-width=\"1\" points=\"6 16 10 10 6 4\"></polyline>` +\r\n\t`</g>`\r\n);\r\n\r\nDThemeDarkAtlas.add( \"menu_item_expandable_header_opened\", 14, 14,\r\n\t`<g transform=\"scale(0.7, 1)\">` +\r\n\t\t`<polyline fill=\"none\" stroke=\"#fff\" stroke-width=\"1\" points=\"16 6 10 10 4 6\"></polyline>` +\r\n\t`</g>`\r\n);\r\n\r\nexport class DThemeDarkTreeItemToggleIcon extends DThemeDarkImage implements DThemeTreeItemToggleIcon {\r\n\tgetBackgroundColor( state: DBaseState ): number | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn 30;\r\n\t}\r\n\r\n\tgetWidth(): DCoordinateSize {\r\n\t\treturn 14;\r\n\t}\r\n\r\n\tgetTextAlignHorizontal(): DAlignHorizontal {\r\n\t\treturn DAlignHorizontal.LEFT;\r\n\t}\r\n\r\n\tgetPaddingLeft(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tgetPaddingRight(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tgetCornerMask(): number {\r\n\t\treturn DCornerMask.ALL;\r\n\t}\r\n\r\n\tgetImageTintColor( state: DBaseState ): number | null {\r\n\t\tif( ( state & DTreeItemState.SELECTED ) && !DBaseStates.isDisabled( state ) ) {\r\n\t\t\treturn 0x000000;\r\n\t\t}\r\n\t\treturn DThemeDarkFont.getColor( state );\r\n\t}\r\n\r\n\tgetImageSource( state: DBaseState ): Texture | DisplayObject | null {\r\n\t\tif (state & DTreeItemState.EXPANDED) {\r\n\t\t\treturn DThemeDarkAtlas.mappings.menu_item_expandable_header_opened;\r\n\t\t} else if (state & DTreeItemState.COLLAPSED) {\r\n\t\t\treturn DThemeDarkAtlas.mappings.menu_item_expandable_header_closed;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n"]}