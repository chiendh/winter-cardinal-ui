{"version":3,"file":"d-theme-dark-table-body-cell-time.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/dark/d-theme-dark-table-body-cell-time.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAMH,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAEpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,wBAAwB,EAAE,MAAM,iCAAiC,CAAC;AAE3E,IAAM,SAAS,GAAG,UAAE,KAAW,EAAE,MAA0B;IAC1D,OAAO,YAAY,CAAC,MAAM,CAAE,KAAK,EAAE,MAAM,CAAC,eAAe,EAAE,CAAE,CAAC;AAC/D,CAAC,CAAC;AAEF;IAAiD,+CAAgB;IAAjE;;IAkDA,CAAC;IA/CA,wDAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,wBAAwB,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAC7D,CAAC;IAED,wDAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,wBAAwB,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAC7D,CAAC;IAED,oDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,wBAAwB,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;IACzD,CAAC;IAED,oDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,wBAAwB,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;IACzD,CAAC;IAED,mDAAa,GAAb,UAAe,KAAiB;QAC/B,OAAO,wBAAwB,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;IACxD,CAAC;IAED,8CAAQ,GAAR,UAAU,KAAiB;QAC1B,OAAO,wBAAwB,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACnD,CAAC;IAED,8CAAQ,GAAR,UAAU,KAAiB;QAC1B,OAAO,wBAAwB,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACnD,CAAC;IAED,+CAAS,GAAT;QACC,OAAO,wBAAwB,CAAC,SAAS,EAAE,CAAC;IAC7C,CAAC;IAED,mDAAa,GAAb;QACC,OAAO,wBAAwB,CAAC,aAAa,EAAE,CAAC;IACjD,CAAC;IAED,sDAAgB,GAAhB;QACC,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,kDAAY,GAAZ,UAAc,KAAiB;QAC9B,OAAO,IAAI,IAAI,EAAE,CAAC;IACnB,CAAC;IAED,kDAAY,GAAZ;QACC,OAAO,IAAI,IAAI,EAAE,CAAC;IACnB,CAAC;IACF,kCAAC;AAAD,CAAC,AAlDD,CAAiD,gBAAgB,GAkDhE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DBorderMask } from \"../../d-border-mask\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DCornerMask } from \"../../d-corner-mask\";\r\nimport { DPickerTimes } from \"../../d-picker-times\";\r\nimport { DTableBodyCellTime, DThemeTableBodyCellTime } from \"../../d-table-body-cell-time\";\r\nimport { DThemeDarkButton } from \"./d-theme-dark-button\";\r\nimport { DThemeDarkTableBodyCells } from \"./d-theme-dark-table-body-cells\";\r\n\r\nconst formatter = ( value: Date, caller: DTableBodyCellTime ): string => {\r\n\treturn DPickerTimes.format( value, caller.getDatetimeMask() );\r\n};\r\n\r\nexport class DThemeDarkTableBodyCellTime extends DThemeDarkButton\r\n\timplements DThemeTableBodyCellTime {\r\n\r\n\tgetBackgroundColor( state: DBaseState ): number | null {\r\n\t\treturn DThemeDarkTableBodyCells.getBackgroundColor( state );\r\n\t}\r\n\r\n\tgetBackgroundAlpha( state: DBaseState ): number {\r\n\t\treturn DThemeDarkTableBodyCells.getBackgroundAlpha( state );\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn DThemeDarkTableBodyCells.getBorderColor( state );\r\n\t}\r\n\r\n\tgetBorderAlign( state: DBaseState ): number {\r\n\t\treturn DThemeDarkTableBodyCells.getBorderAlign( state );\r\n\t}\r\n\r\n\tgetBorderMask( state: DBaseState ): DBorderMask {\r\n\t\treturn DThemeDarkTableBodyCells.getBorderMask( state );\r\n\t}\r\n\r\n\tgetColor( state: DBaseState ): number {\r\n\t\treturn DThemeDarkTableBodyCells.getColor( state );\r\n\t}\r\n\r\n\tgetAlpha( state: DBaseState ): number {\r\n\t\treturn DThemeDarkTableBodyCells.getAlpha( state );\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn DThemeDarkTableBodyCells.getHeight();\r\n\t}\r\n\r\n\tgetCornerMask(): DCornerMask {\r\n\t\treturn DThemeDarkTableBodyCells.getCornerMask();\r\n\t}\r\n\r\n\tgetTextFormatter(): ( value: Date, caller: DTableBodyCellTime ) => string {\r\n\t\treturn formatter;\r\n\t}\r\n\r\n\tgetTextValue( state: DBaseState ): Date {\r\n\t\treturn new Date();\r\n\t}\r\n\r\n\tnewTextValue(): Date {\r\n\t\treturn new Date();\r\n\t}\r\n}\r\n"]}