{"version":3,"file":"d-theme-dark-tree-item-text-and-image.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/dark/d-theme-dark-tree-item-text-and-image.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAElD,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAEzD,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAEvD;IAAoD,kDAAe;IAAnE;;IA2CA,CAAC;IA1CA,2DAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,uDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,kDAAS,GAAT;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,iDAAQ,GAAR;QACC,OAAO,MAAM,CAAC;IACf,CAAC;IAED,+DAAsB,GAAtB;QACC,OAAO,gBAAgB,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,uDAAc,GAAd;QACC,OAAO,CAAC,CAAC;IACV,CAAC;IAED,wDAAe,GAAf;QACC,OAAO,CAAC,CAAC;IACV,CAAC;IAED,sDAAa,GAAb;QACC,OAAO,WAAW,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,uDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,iDAAQ,GAAR,UAAU,KAAiB;QAC1B,IAAI,CAAE,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAE,KAAK,CAAE,EAAG;YAC7E,OAAO,QAAQ,CAAC;SAChB;QACD,OAAO,cAAc,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACzC,CAAC;IACF,qCAAC;AAAD,CAAC,AA3CD,CAAoD,eAAe,GA2ClE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DisplayObject, Texture } from \"pixi.js\";\r\nimport { DAlignHorizontal } from \"../../d-align-horizontal\";\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DBaseStates } from \"../../d-base-states\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DCornerMask } from \"../../d-corner-mask\";\r\nimport { DTreeItemState } from \"../../d-tree-item-state\";\r\nimport { DThemeTreeItemTextAndImage } from \"../../d-tree-item-text-and-image\";\r\nimport { DThemeDarkFont } from \"./d-theme-dark-font\";\r\nimport { DThemeDarkImage } from \"./d-theme-dark-image\";\r\n\r\nexport class DThemeDarkTreeItemTextAndImage extends DThemeDarkImage implements DThemeTreeItemTextAndImage {\r\n\tgetBackgroundColor( state: DBaseState ): number | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn 30;\r\n\t}\r\n\r\n\tgetWidth(): DCoordinateSize {\r\n\t\treturn \"100%\";\r\n\t}\r\n\r\n\tgetTextAlignHorizontal(): DAlignHorizontal {\r\n\t\treturn DAlignHorizontal.LEFT;\r\n\t}\r\n\r\n\tgetPaddingLeft(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tgetPaddingRight(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tgetCornerMask(): number {\r\n\t\treturn DCornerMask.ALL;\r\n\t}\r\n\r\n\tgetImageSource( state: DBaseState ): Texture | DisplayObject | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetColor( state: DBaseState ): number {\r\n\t\tif( ( state & DTreeItemState.SELECTED ) && !DBaseStates.isDisabled( state ) ) {\r\n\t\t\treturn 0x000000;\r\n\t\t}\r\n\t\treturn DThemeDarkFont.getColor( state );\r\n\t}\r\n}\r\n"]}