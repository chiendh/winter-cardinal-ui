{"version":3,"file":"d-theme-dark-table-body-cell-index.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/dark/d-theme-dark-table-body-cell-index.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAOH,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAChE,OAAO,EAAE,wBAAwB,EAAE,MAAM,iCAAiC,CAAC;AAE3E,IAAM,SAAS,GAAG,UAAE,KAAc;IACjC,OAAO,MAAM,CAAE,MAAM,CAAE,KAAK,CAAE,GAAG,CAAC,CAAE,CAAC;AACtC,CAAC,CAAC;AAEF;IAAkD,gDAAmB;IAArE;;IAwDA,CAAC;IAvDA,yDAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,wBAAwB,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAC7D,CAAC;IAED,yDAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,wBAAwB,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAC7D,CAAC;IAED,qDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,wBAAwB,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;IACzD,CAAC;IAED,qDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,wBAAwB,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;IACzD,CAAC;IAED,oDAAa,GAAb,UAAe,KAAiB;QAC/B,OAAO,wBAAwB,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;IACxD,CAAC;IAED,+CAAQ,GAAR,UAAU,KAAiB;QAC1B,OAAO,wBAAwB,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACnD,CAAC;IAED,+CAAQ,GAAR,UAAU,KAAiB;QAC1B,OAAO,wBAAwB,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACnD,CAAC;IAED,gDAAS,GAAT;QACC,OAAO,wBAAwB,CAAC,SAAS,EAAE,CAAC;IAC7C,CAAC;IAED,oDAAa,GAAb;QACC,OAAO,wBAAwB,CAAC,aAAa,EAAE,CAAC;IACjD,CAAC;IAED,qDAAc,GAAd;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,sDAAe,GAAf;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,uDAAgB,GAAhB;QACC,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,mDAAY,GAAZ,UAAc,KAAiB;QAC9B,OAAO,CAAC,CAAC;IACV,CAAC;IAED,mDAAY,GAAZ;QACC,OAAO,CAAC,CAAC;IACV,CAAC;IACF,mCAAC;AAAD,CAAC,AAxDD,CAAkD,mBAAmB,GAwDpE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DBorderMask } from \"../../d-border-mask\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DCornerMask } from \"../../d-corner-mask\";\r\nimport { DTableBodyCellIndex, DThemeTableBodyCellIndex } from \"../../d-table-body-cell-index\";\r\nimport { DThemeDarkImageBase } from \"./d-theme-dark-image-base\";\r\nimport { DThemeDarkTableBodyCells } from \"./d-theme-dark-table-body-cells\";\r\n\r\nconst formatter = ( index: unknown ): string => {\r\n\treturn String( Number( index ) + 1 );\r\n};\r\n\r\nexport class DThemeDarkTableBodyCellIndex extends DThemeDarkImageBase implements DThemeTableBodyCellIndex {\r\n\tgetBackgroundColor( state: DBaseState ): number | null {\r\n\t\treturn DThemeDarkTableBodyCells.getBackgroundColor( state );\r\n\t}\r\n\r\n\tgetBackgroundAlpha( state: DBaseState ): number {\r\n\t\treturn DThemeDarkTableBodyCells.getBackgroundAlpha( state );\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn DThemeDarkTableBodyCells.getBorderColor( state );\r\n\t}\r\n\r\n\tgetBorderAlign( state: DBaseState ): number {\r\n\t\treturn DThemeDarkTableBodyCells.getBorderAlign( state );\r\n\t}\r\n\r\n\tgetBorderMask( state: DBaseState ): DBorderMask {\r\n\t\treturn DThemeDarkTableBodyCells.getBorderMask( state );\r\n\t}\r\n\r\n\tgetColor( state: DBaseState ): number {\r\n\t\treturn DThemeDarkTableBodyCells.getColor( state );\r\n\t}\r\n\r\n\tgetAlpha( state: DBaseState ): number {\r\n\t\treturn DThemeDarkTableBodyCells.getAlpha( state );\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn DThemeDarkTableBodyCells.getHeight();\r\n\t}\r\n\r\n\tgetCornerMask(): DCornerMask {\r\n\t\treturn DThemeDarkTableBodyCells.getCornerMask();\r\n\t}\r\n\r\n\tgetPaddingLeft(): number {\r\n\t\treturn 10;\r\n\t}\r\n\r\n\tgetPaddingRight(): number {\r\n\t\treturn 10;\r\n\t}\r\n\r\n\tgetTextFormatter(): ( value: number, caller: DTableBodyCellIndex ) => string {\r\n\t\treturn formatter;\r\n\t}\r\n\r\n\tgetTextValue( state: DBaseState ): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tnewTextValue(): number {\r\n\t\treturn 0;\r\n\t}\r\n}\r\n"]}