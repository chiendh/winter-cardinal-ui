{"version":3,"file":"d-theme-dark-expandable-header.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/dark/d-theme-dark-expandable-header.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAElD,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAElD,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAC9C,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACvD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAEvD,eAAe,CAAC,GAAG,CAAE,oCAAoC,EAAE,EAAE,EAAE,EAAE,EAChE,iCAA+B;IAC9B,kGAA0F;IAC3F,MAAM,CACN,CAAC;AAEF,eAAe,CAAC,GAAG,CAAE,oCAAoC,EAAE,EAAE,EAAE,EAAE,EAChE,iCAA+B;IAC9B,kGAA0F;IAC3F,MAAM,CACN,CAAC;AAEF;IAAgD,8CAAe;IAA/D;QAAA,qEAwCC;QAvCA,WAAK,GAAG,QAAQ,CAAC;QACjB,mBAAa,GAAG,OAAO,CAAC,QAAQ,CAAE,KAAI,CAAC,KAAK,EAAE,mBAAmB,CAAC,aAAa,CAAE,CAAC;;IAsCnF,CAAC;IApCA,uDAAkB,GAAlB,UAAoB,KAAiB;QACpC,IAAI,WAAW,CAAC,UAAU,CAAE,KAAK,CAAE,EAAG;YACrC,OAAO,IAAI,CAAC;SACZ;QACD,IAAI,WAAW,CAAC,SAAS,CAAE,KAAK,CAAE,IAAI,WAAW,CAAC,SAAS,CAAE,KAAK,CAAE,EAAG;YACtE,OAAO,IAAI,CAAC,aAAa,CAAC;SAC1B;QACD,IAAI,WAAW,CAAC,UAAU,CAAE,KAAK,CAAE,EAAG;YACrC,OAAO,mBAAmB,CAAC,eAAe,CAAC;SAC3C;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,mDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,QAAQ,CAAC;IACjB,CAAC;IAED,8CAAS,GAAT;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,6CAAQ,GAAR;QACC,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,mDAAc,GAAd;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,oDAAe,GAAf;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,kDAAa,GAAb;QACC,OAAO,WAAW,CAAC,GAAG,CAAC;IACxB,CAAC;IACF,iCAAC;AAAD,CAAC,AAxCD,CAAgD,eAAe,GAwC9D","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DBaseStates } from \"../../d-base-states\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DCornerMask } from \"../../d-corner-mask\";\r\nimport { DThemeExpandableHeader } from \"../../d-expandable-header\";\r\nimport { UtilRgb } from \"../../util/util-rgb\";\r\nimport { DThemeDarkAtlas } from \"./d-theme-dark-atlas\";\r\nimport { DThemeDarkConstants } from \"./d-theme-dark-constants\";\r\nimport { DThemeDarkImage } from \"./d-theme-dark-image\";\r\n\r\nDThemeDarkAtlas.add( \"menu_item_expandable_header_closed\", 14, 14,\r\n\t`<g transform=\"scale(1, 0.7)\">` +\r\n\t\t`<polyline fill=\"none\" stroke=\"#fff\" stroke-width=\"1\" points=\"6 16 10 10 6 4\"></polyline>` +\r\n\t`</g>`\r\n);\r\n\r\nDThemeDarkAtlas.add( \"menu_item_expandable_header_opened\", 14, 14,\r\n\t`<g transform=\"scale(0.7, 1)\">` +\r\n\t\t`<polyline fill=\"none\" stroke=\"#fff\" stroke-width=\"1\" points=\"16 6 10 10 4 6\"></polyline>` +\r\n\t`</g>`\r\n);\r\n\r\nexport class DThemeDarkExpandableHeader extends DThemeDarkImage implements DThemeExpandableHeader {\r\n\tCOLOR = 0x383838;\r\n\tCOLOR_HOVERED = UtilRgb.brighten( this.COLOR, DThemeDarkConstants.FOCUSED_ALPHA );\r\n\r\n\tgetBackgroundColor( state: DBaseState ): number | null {\r\n\t\tif( DBaseStates.isDisabled( state ) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif( DBaseStates.isFocused( state ) || DBaseStates.isHovered( state ) ) {\r\n\t\t\treturn this.COLOR_HOVERED;\r\n\t\t}\r\n\t\tif( DBaseStates.isActiveIn( state ) ) {\r\n\t\t\treturn DThemeDarkConstants.HIGHLIGHT_COLOR;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn 0x646464;\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn 30;\r\n\t}\r\n\r\n\tgetWidth(): DCoordinateSize {\r\n\t\treturn \"padding\";\r\n\t}\r\n\r\n\tgetPaddingLeft(): number {\r\n\t\treturn 16;\r\n\t}\r\n\r\n\tgetPaddingRight(): number {\r\n\t\treturn 16;\r\n\t}\r\n\r\n\tgetCornerMask(): number {\r\n\t\treturn DCornerMask.ALL;\r\n\t}\r\n}\r\n"]}