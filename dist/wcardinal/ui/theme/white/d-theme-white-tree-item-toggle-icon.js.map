{"version":3,"file":"d-theme-white-tree-item-toggle-icon.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/white/d-theme-white-tree-item-toggle-icon.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAG5D,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AAEzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,gBAAgB,CAAC,GAAG,CAAE,oCAAoC,EAAE,EAAE,EAAE,EAAE,EACjE,iCAA+B;IAC9B,kGAA0F;IAC3F,MAAM,CACN,CAAC;AAEF,gBAAgB,CAAC,GAAG,CAAE,oCAAoC,EAAE,EAAE,EAAE,EAAE,EACjE,iCAA+B;IAC9B,kGAA0F;IAC3F,MAAM,CACN,CAAC;AAEF;IAAmD,iDAAgB;IAAnE;;IA0CA,CAAC;IAzCA,0DAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,sDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,iDAAS,GAAT;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,gDAAQ,GAAR;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,8DAAsB,GAAtB;QACC,OAAO,gBAAgB,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,sDAAc,GAAd;QACC,OAAO,CAAC,CAAC;IACV,CAAC;IAED,uDAAe,GAAf;QACC,OAAO,CAAC,CAAC;IACV,CAAC;IAED,qDAAa,GAAb;QACC,OAAO,WAAW,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,sDAAc,GAAd,UAAgB,KAAiB;QAChC,IAAI,KAAK,GAAG,cAAc,CAAC,QAAQ,EAAE;YACpC,OAAO,gBAAgB,CAAC,QAAQ,CAAC,kCAAkC,CAAC;SACpE;aAAM,IAAI,KAAK,GAAG,cAAc,CAAC,SAAS,EAAE;YAC5C,OAAO,gBAAgB,CAAC,QAAQ,CAAC,kCAAkC,CAAC;SACpE;aAAM;YACN,OAAO,IAAI,CAAC;SACZ;IACF,CAAC;IACF,oCAAC;AAAD,CAAC,AA1CD,CAAmD,gBAAgB,GA0ClE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DisplayObject, Texture } from \"pixi.js\";\r\nimport { DAlignHorizontal } from \"../../d-align-horizontal\";\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DCornerMask } from \"../../d-corner-mask\";\r\nimport { DTreeItemState } from \"../../d-tree-item-state\";\r\nimport { DThemeTreeItemToggleIcon } from \"../../d-tree-item-toggle-icon\";\r\nimport { DThemeWhiteAtlas } from \"./d-theme-white-atlas\";\r\nimport { DThemeWhiteImage } from \"./d-theme-white-image\";\r\n\r\nDThemeWhiteAtlas.add( \"menu_item_expandable_header_closed\", 14, 14,\r\n\t`<g transform=\"scale(1, 0.7)\">` +\r\n\t\t`<polyline fill=\"none\" stroke=\"#fff\" stroke-width=\"1\" points=\"6 16 10 10 6 4\"></polyline>` +\r\n\t`</g>`\r\n);\r\n\r\nDThemeWhiteAtlas.add( \"menu_item_expandable_header_opened\", 14, 14,\r\n\t`<g transform=\"scale(0.7, 1)\">` +\r\n\t\t`<polyline fill=\"none\" stroke=\"#fff\" stroke-width=\"1\" points=\"16 6 10 10 4 6\"></polyline>` +\r\n\t`</g>`\r\n);\r\n\r\nexport class DThemeWhiteTreeItemToggleIcon extends DThemeWhiteImage implements DThemeTreeItemToggleIcon {\r\n\tgetBackgroundColor( state: DBaseState ): number | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn 30;\r\n\t}\r\n\r\n\tgetWidth(): DCoordinateSize {\r\n\t\treturn 14;\r\n\t}\r\n\r\n\tgetTextAlignHorizontal(): DAlignHorizontal {\r\n\t\treturn DAlignHorizontal.LEFT;\r\n\t}\r\n\r\n\tgetPaddingLeft(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tgetPaddingRight(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tgetCornerMask(): number {\r\n\t\treturn DCornerMask.ALL;\r\n\t}\r\n\r\n\tgetImageSource( state: DBaseState ): Texture | DisplayObject | null {\r\n\t\tif (state & DTreeItemState.EXPANDED) {\r\n\t\t\treturn DThemeWhiteAtlas.mappings.menu_item_expandable_header_opened;\r\n\t\t} else if (state & DTreeItemState.COLLAPSED) {\r\n\t\t\treturn DThemeWhiteAtlas.mappings.menu_item_expandable_header_closed;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n}\r\n"]}