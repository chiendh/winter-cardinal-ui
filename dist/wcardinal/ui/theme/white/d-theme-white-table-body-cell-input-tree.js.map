{"version":3,"file":"d-theme-white-table-body-cell-input-tree.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/white/d-theme-white-table-body-cell-input-tree.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAKlD,OAAO,EAAE,2BAA2B,EAAE,MAAM,mCAAmC,CAAC;AAChF,OAAO,EAAE,6BAA6B,EAAE,MAAM,uCAAuC,CAAC;AACtF,OAAO,EAAE,yBAAyB,EAAE,MAAM,kCAAkC,CAAC;AAE7E,6BAA6B,CAAC,IAAI,EAAE,CAAC;AAErC;IAAuD,qDAA2B;IAAlF;;IA6DA,CAAC;IA1DA,2DAAe,GAAf,UAAiB,KAAa;QAC7B,OAAO,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,qDAAS,GAAT;QACC,OAAO,CAAC,CAAC;IACV,CAAC;IAED,0DAAc,GAAd;QACC,OAAO,gBAAgB,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,8DAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,yBAAyB,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAC9D,CAAC;IAED,8DAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,yBAAyB,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAC9D,CAAC;IAED,0DAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,yBAAyB,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;IAC1D,CAAC;IAED,0DAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,yBAAyB,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;IAC1D,CAAC;IAED,yDAAa,GAAb,UAAe,KAAiB;QAC/B,OAAO,yBAAyB,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;IACzD,CAAC;IAED,oDAAQ,GAAR,UAAU,KAAiB;QAC1B,OAAO,yBAAyB,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACpD,CAAC;IAED,oDAAQ,GAAR,UAAU,KAAiB;QAC1B,OAAO,yBAAyB,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACpD,CAAC;IAED,qDAAS,GAAT;QACC,OAAO,yBAAyB,CAAC,SAAS,EAAE,CAAC;IAC9C,CAAC;IAED,yDAAa,GAAb;QACC,OAAO,yBAAyB,CAAC,aAAa,EAAE,CAAC;IAClD,CAAC;IAED,2DAAe,GAAf,UAAiB,KAAiB;QACjC,IAAI,WAAW,CAAC,UAAU,CAAE,KAAK,CAAE,EAAG;YACrC,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,iBAAM,eAAe,YAAE,KAAK,CAAE,CAAC;IACvC,CAAC;IAED,2DAAe,GAAf,UAAiB,KAAiB;QACjC,OAAO,yBAAyB,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC;IAC3D,CAAC;IACF,wCAAC;AAAD,CAAC,AA7DD,CAAuD,2BAA2B,GA6DjF","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseInteractive } from \"../../d-base-interactive\";\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DBaseStates } from \"../../d-base-states\";\r\nimport { DBorderMask } from \"../../d-border-mask\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DCornerMask } from \"../../d-corner-mask\";\r\nimport { DThemeTableBodyCellInputTree } from \"../../d-table-body-cell-input-tree\";\r\nimport { DThemeWhiteLayoutHorizontal } from \"./d-theme-white-layout-horizontal\";\r\nimport { DThemeWhiteTableBodyCellTrees } from \"./d-theme-white-table-body-cell-trees\";\r\nimport { DThemeWhiteTableBodyCells } from \"./d-theme-white-table-body-cells\";\r\n\r\nDThemeWhiteTableBodyCellTrees.init();\r\n\r\nexport class DThemeWhiteTableBodyCellInputTree extends DThemeWhiteLayoutHorizontal\r\n\timplements DThemeTableBodyCellInputTree {\r\n\r\n\tgetLevelPadding( level: number ): number {\r\n\t\treturn 24 + level * 20;\r\n\t}\r\n\r\n\tgetMargin(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tgetInteractive(): DBaseInteractive {\r\n\t\treturn DBaseInteractive.BOTH;\r\n\t}\r\n\r\n\tgetBackgroundColor( state: DBaseState ): number | null {\r\n\t\treturn DThemeWhiteTableBodyCells.getBackgroundColor( state );\r\n\t}\r\n\r\n\tgetBackgroundAlpha( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteTableBodyCells.getBackgroundAlpha( state );\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn DThemeWhiteTableBodyCells.getBorderColor( state );\r\n\t}\r\n\r\n\tgetBorderAlign( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteTableBodyCells.getBorderAlign( state );\r\n\t}\r\n\r\n\tgetBorderMask( state: DBaseState ): DBorderMask {\r\n\t\treturn DThemeWhiteTableBodyCells.getBorderMask( state );\r\n\t}\r\n\r\n\tgetColor( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteTableBodyCells.getColor( state );\r\n\t}\r\n\r\n\tgetAlpha( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteTableBodyCells.getAlpha( state );\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn DThemeWhiteTableBodyCells.getHeight();\r\n\t}\r\n\r\n\tgetCornerMask(): DCornerMask {\r\n\t\treturn DThemeWhiteTableBodyCells.getCornerMask();\r\n\t}\r\n\r\n\tgetOutlineColor( state: DBaseState ): number | null {\r\n\t\tif( DBaseStates.isDisabled( state ) ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn super.getOutlineColor( state );\r\n\t}\r\n\r\n\tgetOutlineAlign( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteTableBodyCells.getOutlineAlign( state );\r\n\t}\r\n}\r\n"]}