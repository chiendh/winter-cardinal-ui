{"version":3,"file":"d-theme-white-table-body-cell-index.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/white/d-theme-white-table-body-cell-index.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAOH,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAE,yBAAyB,EAAE,MAAM,kCAAkC,CAAC;AAE7E,IAAM,SAAS,GAAG,UAAE,KAAc;IACjC,OAAO,MAAM,CAAE,MAAM,CAAE,KAAK,CAAE,GAAG,CAAC,CAAE,CAAC;AACtC,CAAC,CAAC;AAEF;IAAmD,iDAAoB;IAAvE;;IAwDA,CAAC;IAvDA,0DAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,yBAAyB,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAC9D,CAAC;IAED,0DAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,yBAAyB,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;IAC9D,CAAC;IAED,sDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,yBAAyB,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;IAC1D,CAAC;IAED,sDAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,yBAAyB,CAAC,cAAc,CAAE,KAAK,CAAE,CAAC;IAC1D,CAAC;IAED,qDAAa,GAAb,UAAe,KAAiB;QAC/B,OAAO,yBAAyB,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;IACzD,CAAC;IAED,gDAAQ,GAAR,UAAU,KAAiB;QAC1B,OAAO,yBAAyB,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACpD,CAAC;IAED,gDAAQ,GAAR,UAAU,KAAiB;QAC1B,OAAO,yBAAyB,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACpD,CAAC;IAED,iDAAS,GAAT;QACC,OAAO,yBAAyB,CAAC,SAAS,EAAE,CAAC;IAC9C,CAAC;IAED,qDAAa,GAAb;QACC,OAAO,yBAAyB,CAAC,aAAa,EAAE,CAAC;IAClD,CAAC;IAED,sDAAc,GAAd;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,uDAAe,GAAf;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,wDAAgB,GAAhB;QACC,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,oDAAY,GAAZ,UAAc,KAAiB;QAC9B,OAAO,CAAC,CAAC;IACV,CAAC;IAED,oDAAY,GAAZ;QACC,OAAO,CAAC,CAAC;IACV,CAAC;IACF,oCAAC;AAAD,CAAC,AAxDD,CAAmD,oBAAoB,GAwDtE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DBorderMask } from \"../../d-border-mask\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DCornerMask } from \"../../d-corner-mask\";\r\nimport { DTableBodyCellIndex, DThemeTableBodyCellIndex } from \"../../d-table-body-cell-index\";\r\nimport { DThemeWhiteImageBase } from \"./d-theme-white-image-base\";\r\nimport { DThemeWhiteTableBodyCells } from \"./d-theme-white-table-body-cells\";\r\n\r\nconst formatter = ( index: unknown ): string => {\r\n\treturn String( Number( index ) + 1 );\r\n};\r\n\r\nexport class DThemeWhiteTableBodyCellIndex extends DThemeWhiteImageBase implements DThemeTableBodyCellIndex {\r\n\tgetBackgroundColor( state: DBaseState ): number | null {\r\n\t\treturn DThemeWhiteTableBodyCells.getBackgroundColor( state );\r\n\t}\r\n\r\n\tgetBackgroundAlpha( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteTableBodyCells.getBackgroundAlpha( state );\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn DThemeWhiteTableBodyCells.getBorderColor( state );\r\n\t}\r\n\r\n\tgetBorderAlign( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteTableBodyCells.getBorderAlign( state );\r\n\t}\r\n\r\n\tgetBorderMask( state: DBaseState ): DBorderMask {\r\n\t\treturn DThemeWhiteTableBodyCells.getBorderMask( state );\r\n\t}\r\n\r\n\tgetColor( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteTableBodyCells.getColor( state );\r\n\t}\r\n\r\n\tgetAlpha( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteTableBodyCells.getAlpha( state );\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn DThemeWhiteTableBodyCells.getHeight();\r\n\t}\r\n\r\n\tgetCornerMask(): DCornerMask {\r\n\t\treturn DThemeWhiteTableBodyCells.getCornerMask();\r\n\t}\r\n\r\n\tgetPaddingLeft(): number {\r\n\t\treturn 10;\r\n\t}\r\n\r\n\tgetPaddingRight(): number {\r\n\t\treturn 10;\r\n\t}\r\n\r\n\tgetTextFormatter(): ( value: number, caller: DTableBodyCellIndex ) => string {\r\n\t\treturn formatter;\r\n\t}\r\n\r\n\tgetTextValue( state: DBaseState ): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tnewTextValue(): number {\r\n\t\treturn 0;\r\n\t}\r\n}\r\n"]}