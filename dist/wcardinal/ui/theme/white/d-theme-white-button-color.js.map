{"version":3,"file":"d-theme-white-button-color.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/white/d-theme-white-button-color.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAMH,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAC9C,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AAE3D,mCAAmC;AACnC,8BAA8B;AAC9B,gBAAgB,CAAC,GAAG,CAAE,qBAAqB,EAAE,EAAE,EAAE,EAAE,EAClD,sCAAoC;IACnC,0GAAsG;IACtG,yGAAuG;IACtG,kBAAgB;IAClB,MAAM,CACN,CAAC;AAEF,IAAM,SAAS,GAAG,UAAE,aAA6B;IAChD,OAAO,MAAI,OAAO,CAAC,MAAM,CAAE,aAAa,CAAC,KAAK,CAAE,UAAM,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAI,CAAC;AACzF,CAAC,CAAC;AAEF;IAA4C,0CAAiB;IAA7D;;IAmBA,CAAC;IAlBA,kDAAiB,GAAjB,UAAmB,KAAiB;QACnC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,+CAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,gBAAgB,CAAC,QAAQ,CAAC,mBAAmB,CAAC;IACtD,CAAC;IAED,iDAAgB,GAAhB;QACC,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,6CAAY,GAAZ;QACC,OAAO;YACN,KAAK,EAAE,QAAQ;YACf,KAAK,EAAE,CAAC;SACR,CAAC;IACH,CAAC;IACF,6BAAC;AAAD,CAAC,AAnBD,CAA4C,iBAAiB,GAmB5D","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Texture } from \"pixi.js\";\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DButtonColor, DThemeButtonColor } from \"../../d-button-color\";\r\nimport { DColorAndAlpha } from \"../../d-color\";\r\nimport { UtilRgb } from \"../../util/util-rgb\";\r\nimport { DThemeWhiteAtlas } from \"./d-theme-white-atlas\";\r\nimport { DThemeWhiteButton } from \"./d-theme-white-button\";\r\n\r\n// Material Design icons by Google.\r\n// Apache license version 2.0.\r\nDThemeWhiteAtlas.add( \"button_color_sample\", 21, 21,\r\n\t`<g transform=\"scale(0.875,0.875)\">` +\r\n\t\t`<path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\" fill=\"#fff\"/>` +\r\n\t\t`<path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\" ` +\r\n\t\t\t`fill=\"#eee\" />` +\r\n\t`</g>`\r\n);\r\n\r\nconst formatter = ( colorAndAlpha: DColorAndAlpha ): string => {\r\n\treturn `#${UtilRgb.toCode( colorAndAlpha.color )} A${ colorAndAlpha.alpha.toFixed(2) }`;\r\n};\r\n\r\nexport class DThemeWhiteButtonColor extends DThemeWhiteButton implements DThemeButtonColor {\r\n\tgetImageTintColor( state: DBaseState ): number | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetImageSource( state: DBaseState ): Texture {\r\n\t\treturn DThemeWhiteAtlas.mappings.button_color_sample;\r\n\t}\r\n\r\n\tgetTextFormatter(): ( value: DColorAndAlpha, caller: DButtonColor ) => string {\r\n\t\treturn formatter;\r\n\t}\r\n\r\n\tnewTextValue(): DColorAndAlpha {\r\n\t\treturn {\r\n\t\t\tcolor: 0xffffff,\r\n\t\t\talpha: 1\r\n\t\t};\r\n\t}\r\n}\r\n"]}