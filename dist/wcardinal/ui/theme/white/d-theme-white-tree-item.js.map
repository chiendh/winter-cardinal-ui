{"version":3,"file":"d-theme-white-tree-item.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/theme/white/d-theme-white-tree-item.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAC5D,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAElD,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAElD,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AACjE,OAAO,EAAE,2BAA2B,EAAE,MAAM,mCAAmC,CAAC;AAEhF;IAAyC,uCAA2B;IAApE;;IA4CA,CAAC;IA3CA,gDAAkB,GAAlB,UAAoB,KAAiB;QACpC,IAAI,WAAW,CAAC,UAAU,CAAE,KAAK,CAAE,EAAG;YACrC,OAAO,IAAI,CAAC;SACZ;aAAM,IAAI,WAAW,CAAC,QAAQ,CAAE,KAAK,CAAE,EAAI;YAC3C,OAAO,oBAAoB,CAAC,eAAe,CAAC;SAC5C;aAAM,IAAI,WAAW,CAAC,SAAS,CAAE,KAAK,CAAE,EAAG;YAC3C,OAAO,oBAAoB,CAAC,oBAAoB,CAAC;SACjD;aAAM;YACN,OAAO,IAAI,CAAC;SACZ;IACF,CAAC;IAED,gDAAkB,GAAlB,UAAoB,KAAiB;QACpC,OAAO,oBAAoB,CAAC,eAAe,CAAC;IAC7C,CAAC;IAED,4CAAc,GAAd,UAAgB,KAAiB;QAChC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,uCAAS,GAAT;QACC,OAAO,EAAE,CAAC;IACX,CAAC;IAED,sCAAQ,GAAR;QACC,OAAO,MAAM,CAAC;IACf,CAAC;IAED,oDAAsB,GAAtB;QACC,OAAO,gBAAgB,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,2CAAa,GAAb;QACC,OAAO,WAAW,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,4CAAc,GAAd;QACC,OAAO,gBAAgB,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,+CAAiB,GAAjB,UAAmB,KAAa;QAC/B,OAAO,KAAK,GAAG,EAAE,CAAC;IACnB,CAAC;IACF,0BAAC;AAAD,CAAC,AA5CD,CAAyC,2BAA2B,GA4CnE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DAlignHorizontal } from \"../../d-align-horizontal\";\r\nimport { DBaseInteractive } from \"../../d-base-interactive\";\r\nimport { DBaseState } from \"../../d-base-state\";\r\nimport { DBaseStates } from \"../../d-base-states\";\r\nimport { DCoordinateSize } from \"../../d-coordinate\";\r\nimport { DCornerMask } from \"../../d-corner-mask\";\r\nimport { DThemeTreeItem } from \"../../d-tree-item\";\r\nimport { DThemeWhiteConstants } from \"./d-theme-white-constants\";\r\nimport { DThemeWhiteLayoutHorizontal } from \"./d-theme-white-layout-horizontal\";\r\n\r\nexport class DThemeWhiteTreeItem extends DThemeWhiteLayoutHorizontal implements DThemeTreeItem {\r\n\tgetBackgroundColor( state: DBaseState ): number | null {\r\n\t\tif( DBaseStates.isDisabled( state ) ) {\r\n\t\t\treturn null;\r\n\t\t} else if( DBaseStates.isActive( state )  ) {\r\n\t\t\treturn DThemeWhiteConstants.HIGHLIGHT_COLOR;\r\n\t\t} else if( DBaseStates.isHovered( state ) ) {\r\n\t\t\treturn DThemeWhiteConstants.WEAK_HIGHLIGHT_COLOR;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tgetBackgroundAlpha( state: DBaseState ): number {\r\n\t\treturn DThemeWhiteConstants.HIGHLIGHT_ALPHA;\r\n\t}\r\n\r\n\tgetBorderColor( state: DBaseState ): number | null {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\treturn 30;\r\n\t}\r\n\r\n\tgetWidth(): DCoordinateSize {\r\n\t\treturn \"100%\";\r\n\t}\r\n\r\n\tgetTextAlignHorizontal(): DAlignHorizontal {\r\n\t\treturn DAlignHorizontal.LEFT;\r\n\t}\r\n\r\n\tgetCornerMask(): number {\r\n\t\treturn DCornerMask.ALL;\r\n\t}\r\n\r\n\tgetInteractive(): DBaseInteractive {\r\n\t\treturn DBaseInteractive.BOTH;\r\n\t}\r\n\r\n\tgetPaddingByLevel( level: number ): number {\r\n\t\treturn level * 15;\r\n\t}\r\n}\r\n"]}