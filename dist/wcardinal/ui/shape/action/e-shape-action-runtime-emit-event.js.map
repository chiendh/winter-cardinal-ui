{"version":3,"file":"e-shape-action-runtime-emit-event.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/action/e-shape-action-runtime-emit-event.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAiB,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAEvE,OAAO,EAAE,8BAA8B,EAAE,MAAM,sCAAsC,CAAC;AAGtF,IAAM,WAAW,GAAG,cAAqB,OAAA,IAAI,EAAJ,CAAI,CAAC;AAE9C;IAAkD,gDAA8B;IAG/E,sCAAa,KAAiC;QAA9C,YACC,kBAAO,KAAK,EAAE,kBAAkB,CAAC,IAAI,CAAE,SAEvC;QADA,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,YAAY,CAAE,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,MAAM,CAAE,CAAC;;IAClE,CAAC;IAED,8CAAO,GAAP,UAAS,KAAa,EAAE,OAAsB,EAAE,IAAY;QAC3D,IAAI,CAAC,CAAE,IAAI,CAAC,SAAS,CAAE,KAAK,EAAE,IAAI,CAAE,EAAG;YACtC,IAAM,MAAI,GAAG,IAAI,CAAC,IAAI,CAAE,KAAK,EAAE,IAAI,CAAE,CAAC;YACtC,IAAI,MAAI,IAAI,IAAI,EAAG;gBAClB,KAAK,CAAC,IAAI,CAAE,MAAI,EAAE,KAAK,CAAE,CAAC;gBAC1B,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAE,KAAK,CAAE,CAAC;gBAC5C,IAAI,SAAS,IAAI,CAAC,OAAO,IAAI,SAAS,CAAC,EAAG;oBACzC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAE,MAAI,EAAE,KAAK,CAAE,CAAC;iBACpC;aACD;SACD;IACF,CAAC;IACF,mCAAC;AAAD,CAAC,AApBD,CAAkD,8BAA8B,GAoB/E","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeRuntime, EShapeRuntimeReset } from \"../e-shape-runtime\";\r\nimport { EShapeActionExpression } from \"./e-shape-action-runtime\";\r\nimport { EShapeActionRuntimeConditional } from \"./e-shape-action-runtime-conditional\";\r\nimport { EShapeActionValueEmitEvent } from \"./e-shape-action-value-emit-event\";\r\n\r\nconst nameDefault = (): string | null => null;\r\n\r\nexport class EShapeActionRuntimeEmitEvent extends EShapeActionRuntimeConditional {\r\n\tprotected name: EShapeActionExpression<string | null>;\r\n\r\n\tconstructor( value: EShapeActionValueEmitEvent ) {\r\n\t\tsuper( value, EShapeRuntimeReset.NONE );\r\n\t\tthis.name = this.toExpression( value.name, nameDefault, \"null\" );\r\n\t}\r\n\r\n\texecute( shape: EShape, runtime: EShapeRuntime, time: number ): void {\r\n\t\tif( !! this.condition( shape, time ) ) {\r\n\t\t\tconst name = this.name( shape, time );\r\n\t\t\tif( name != null ) {\r\n\t\t\t\tshape.emit( name, shape );\r\n\t\t\t\tconst container = this.toContainer( shape );\r\n\t\t\t\tif( container && (\"shape\" in container) ) {\r\n\t\t\t\t\tcontainer.shape.emit( name, shape );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}