{"version":3,"file":"e-shape-action-value-open.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/action/e-shape-action-value-open.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAKH,OAAO,EAAE,2BAA2B,EAAE,MAAM,oCAAoC,CAAC;AACjF,OAAO,EAAE,2BAA2B,EAAE,MAAM,oCAAoC,CAAC;AACjF,OAAO,EAAE,kCAAkC,EAAE,MAAM,4CAA4C,CAAC;AAEhG,OAAO,EAAE,yBAAyB,EAAE,MAAM,kCAAkC,CAAC;AAC7E,OAAO,EAAE,yBAAyB,EAAE,MAAM,iCAAiC,CAAC;AAC5E,OAAO,EAAE,qBAAqB,EAAE,MAAM,6BAA6B,CAAC;AACpE,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAM7D;IAA2C,yCAAoD;IAG9F,+BAAa,OAAkC,EAAE,SAAiB,EAAE,MAAc;QAAlF,YACC,kBAAO,qBAAqB,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAE,SAEvD;QADA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACtB,CAAC;IAED,wCAAQ,GAAR,UAAU,KAAwB;QACjC,OAAO,CACN,iBAAM,QAAQ,YAAE,KAAK,CAAE;YACvB,CAAC,KAAK,YAAY,qBAAqB,CAAC;YACxC,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAC5B,CAAC;IACH,CAAC;IAED,yCAAS,GAAT;QACC,QAAQ,IAAI,CAAC,OAAO,EAAG;YACvB,KAAK,yBAAyB,CAAC,IAAI;gBAClC,OAAO,IAAI,2BAA2B,CAAE,IAAI,CAAE,CAAC;YAChD,KAAK,yBAAyB,CAAC,IAAI;gBAClC,OAAO,IAAI,2BAA2B,CAAE,IAAI,CAAE,CAAC;YAChD,KAAK,yBAAyB,CAAC,YAAY;gBAC1C,OAAO,IAAI,kCAAkC,CAAE,IAAI,CAAE,CAAC;SACtD;IACF,CAAC;IAED,yCAAS,GAAT,UAAW,OAA2C;QACrD,IAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,IAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC,GAAG,CAAE,MAAI,IAAI,CAAC,IAAI,SAAI,WAAW,SAAI,IAAI,CAAC,OAAO,SAAI,QAAQ,MAAG,CAAE,CAAC;IACnF,CAAC;IAEM,iCAAW,GAAlB,UACC,UAA2C,EAC3C,OAA6C;QAE7C,IAAM,SAAS,GAAG,kBAAkB,CAAC,UAAU,CAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAE,CAAC;QACpF,IAAM,MAAM,GAAG,kBAAkB,CAAC,UAAU,CAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAE,CAAC;QACjF,OAAO,IAAI,qBAAqB,CAAE,UAAU,CAAE,CAAC,CAAE,EAAE,SAAS,EAAE,MAAM,CAAE,CAAC;IACxE,CAAC;IACF,4BAAC;AAAD,CAAC,AAzCD,CAA2C,yBAAyB,GAyCnE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShapeResourceManagerDeserialization } from \"../e-shape-resource-manager-deserialization\";\r\nimport { EShapeResourceManagerSerialization } from \"../e-shape-resource-manager-serialization\";\r\nimport { EShapeActionRuntimeOpen } from \"./e-shape-action-runtime-open\";\r\nimport { EShapeActionRuntimeOpenFlow } from \"./e-shape-action-runtime-open-flow\";\r\nimport { EShapeActionRuntimeOpenPage } from \"./e-shape-action-runtime-open-page\";\r\nimport { EShapeActionRuntimeOpenPageInplace } from \"./e-shape-action-runtime-open-page-inplace\";\r\nimport { EShapeActionValue } from \"./e-shape-action-value\";\r\nimport { EShapeActionValueOpenType } from \"./e-shape-action-value-open-type\";\r\nimport { EShapeActionValueSubtyped } from \"./e-shape-action-value-subtyped\";\r\nimport { EShapeActionValueType } from \"./e-shape-action-value-type\";\r\nimport { EShapeActionValues } from \"./e-shape-action-values\";\r\n\r\nexport type EShapeActionValueOpenSerialized = [\r\n\tEShapeActionValueType.OPEN, number, EShapeActionValueOpenType, number\r\n];\r\n\r\nexport class EShapeActionValueOpen extends EShapeActionValueSubtyped<EShapeActionValueOpenType> {\r\n\treadonly target: string;\r\n\r\n\tconstructor( subtype: EShapeActionValueOpenType, condition: string, target: string ) {\r\n\t\tsuper( EShapeActionValueType.OPEN, condition, subtype );\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\tisEquals( value: EShapeActionValue ): boolean {\r\n\t\treturn (\r\n\t\t\tsuper.isEquals( value ) &&\r\n\t\t\t(value instanceof EShapeActionValueOpen) &&\r\n\t\t\tthis.target === value.target\r\n\t\t);\r\n\t}\r\n\r\n\ttoRuntime(): EShapeActionRuntimeOpen {\r\n\t\tswitch( this.subtype ) {\r\n\t\tcase EShapeActionValueOpenType.FLOW:\r\n\t\t\treturn new EShapeActionRuntimeOpenFlow( this );\r\n\t\tcase EShapeActionValueOpenType.PAGE:\r\n\t\t\treturn new EShapeActionRuntimeOpenPage( this );\r\n\t\tcase EShapeActionValueOpenType.PAGE_INPLACE:\r\n\t\t\treturn new EShapeActionRuntimeOpenPageInplace( this );\r\n\t\t}\r\n\t}\r\n\r\n\tserialize( manager: EShapeResourceManagerSerialization ): number {\r\n\t\tconst conditionId = manager.add(this.condition);\r\n\t\tconst targetId = manager.add(this.target);\r\n\t\treturn manager.add( `[${this.type},${conditionId},${this.subtype},${targetId}]` );\r\n\t}\r\n\r\n\tstatic deserialize(\r\n\t\tserialized: EShapeActionValueOpenSerialized,\r\n\t\tmanager: EShapeResourceManagerDeserialization\r\n\t): EShapeActionValueOpen {\r\n\t\tconst condition = EShapeActionValues.toResource( 1, serialized, manager.resources );\r\n\t\tconst target = EShapeActionValues.toResource( 3, serialized, manager.resources );\r\n\t\treturn new EShapeActionValueOpen( serialized[ 2 ], condition, target );\r\n\t}\r\n}\r\n"]}