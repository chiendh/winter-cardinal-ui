{"version":3,"file":"e-shape-action-runtime-misc-input.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/action/e-shape-action-runtime-misc-input.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAIH,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,gCAAgC,EAAE,MAAM,0CAA0C,CAAC;AAE5F;IAAkD,gDAAmB;IAGpE;eACC,iBAAO;IACR,CAAC;IAED,8CAAO,GAAP,UAAS,KAAa,EAAE,OAAsB,EAAE,IAAY;QAA5D,iBAuBC;QAtBA,IAAI,CAAE,KAAK,CAAC,QAAQ,EAAG;YACtB,IAAM,MAAI,GAAG,4BAA4B,CAAC,OAAO,EAAE,CAAC;YACpD,IAAI,KAAK,CAAC,OAAO,EAAG;gBACnB,IAAI,CAAE,MAAI,CAAC,OAAO,CAAE,KAAK,CAAE,EAAG;oBAC7B,UAAU,CAAC;wBACV,MAAI,CAAC,IAAI,CAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,UAAE,CAAS,EAAE,KAAa;4BAC7D,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;4BACzB,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;4BACjC,IAAM,SAAS,GAAG,KAAI,CAAC,WAAW,CAAE,KAAK,CAAE,CAAC;4BAC5C,IAAI,SAAS,IAAI,CAAC,OAAO,IAAI,SAAS,CAAC,EAAG;gCACzC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;6BAC3C;wBACF,CAAC,CAAC,CAAC;oBACJ,CAAC,EAAE,CAAC,CAAC,CAAC;iBACN;aACD;iBAAM;gBACN,IAAI,MAAI,CAAC,OAAO,CAAE,KAAK,CAAE,EAAG;oBAC3B,MAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,MAAI,CAAC,IAAI,EAAE,CAAC;iBACZ;aACD;SACD;IACF,CAAC;IAEM,oCAAO,GAAd;QACC,IAAI,4BAA4B,CAAC,IAAI,IAAI,IAAI,EAAG;YAC/C,4BAA4B,CAAC,IAAI,GAAG,IAAI,gCAAgC,EAAE,CAAC;SAC3E;QACD,OAAO,4BAA4B,CAAC,IAAI,CAAC;IAC1C,CAAC;IApCM,iCAAI,GAA4C,IAAI,CAAC;IAqC7D,mCAAC;CAAA,AAtCD,CAAkD,mBAAmB,GAsCpE;SAtCY,4BAA4B","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeRuntime } from \"../e-shape-runtime\";\r\nimport { EShapeActionRuntime } from \"./e-shape-action-runtime\";\r\nimport { EShapeActionRuntimeMiscInputData } from \"./e-shape-action-runtime-misc-input-data\";\r\n\r\nexport class EShapeActionRuntimeMiscInput extends EShapeActionRuntime {\r\n\tstatic data: EShapeActionRuntimeMiscInputData | null = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\texecute( shape: EShape, runtime: EShapeRuntime, time: number ): void {\r\n\t\tif( ! shape.disabled ) {\r\n\t\t\tconst data = EShapeActionRuntimeMiscInput.getData();\r\n\t\t\tif( shape.focused ) {\r\n\t\t\t\tif( ! data.isShown( shape ) ) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tdata.show( shape, shape.text.value, ( _: EShape, value: string ): void => {\r\n\t\t\t\t\t\t\tshape.text.value = value;\r\n\t\t\t\t\t\t\tshape.emit( name, shape, value );\r\n\t\t\t\t\t\t\tconst container = this.toContainer( shape );\r\n\t\t\t\t\t\t\tif( container && (\"shape\" in container) ) {\r\n\t\t\t\t\t\t\t\tcontainer.shape.emit( name, shape, value );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif( data.isShown( shape ) ) {\r\n\t\t\t\t\tdata.onInputChange();\r\n\t\t\t\t\tdata.hide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getData(): EShapeActionRuntimeMiscInputData {\r\n\t\tif( EShapeActionRuntimeMiscInput.data == null ) {\r\n\t\t\tEShapeActionRuntimeMiscInput.data = new EShapeActionRuntimeMiscInputData();\r\n\t\t}\r\n\t\treturn EShapeActionRuntimeMiscInput.data;\r\n\t}\r\n}\r\n"]}