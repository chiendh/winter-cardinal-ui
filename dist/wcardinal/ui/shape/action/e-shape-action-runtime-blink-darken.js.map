{"version":3,"file":"e-shape-action-runtime-blink-darken.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/action/e-shape-action-runtime-blink-darken.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAE9C,OAAO,EAAiB,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AACvE,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AAC3D,OAAO,EAAE,wBAAwB,EAAE,MAAM,gCAAgC,CAAC;AAG1E;IAAoD,kDAAwB;IAC3E,wCAAa,KAA6B;eACzC,kBAAO,KAAK,EAAE,kBAAkB,CAAC,KAAK,CAAE;IACzC,CAAC;IAES,6CAAI,GAAd,UAAgB,KAAa,EAAE,OAAsB;QACpD,IAAM,IAAI,GAAG,iBAAiB,CAAC,UAAU,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;QAC5D,KAAK,CAAC,IAAI,CAAC,GAAG,CACb,SAAS,EACT,OAAO,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE,GAAG,CAAE,EACjC,IAAI,CAAC,KAAK,CACV,CAAC;QAEF,IAAM,MAAM,GAAG,iBAAiB,CAAC,YAAY,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;QAChE,KAAK,CAAC,MAAM,CAAC,GAAG,CACf,SAAS,EACT,OAAO,CAAC,MAAM,CAAE,MAAM,CAAC,KAAK,EAAE,GAAG,CAAE,EACnC,MAAM,CAAC,KAAK,CACZ,CAAC;QAEF,IAAM,IAAI,GAAG,iBAAiB,CAAC,UAAU,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;QAC5D,KAAK,CAAC,IAAI,CAAC,GAAG,CACb,SAAS,EACT,OAAO,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,EAAE,GAAG,CAAE,EACjC,IAAI,CAAC,KAAK,CACV,CAAC;QAEF,IAAM,OAAO,GAAG,iBAAiB,CAAC,iBAAiB,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;QACtE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CACrB,SAAS,EACT,OAAO,CAAC,MAAM,CAAE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAE,EACpC,OAAO,CAAC,KAAK,CACb,CAAC;QAEF,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC;IAC/B,CAAC;IACF,qCAAC;AAAD,CAAC,AApCD,CAAoD,wBAAwB,GAoC3E","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { UtilRgb } from \"../../util/util-rgb\";\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeRuntime, EShapeRuntimeReset } from \"../e-shape-runtime\";\r\nimport { EShapeActionBases } from \"./e-shape-action-bases\";\r\nimport { EShapeActionRuntimeBlink } from \"./e-shape-action-runtime-blink\";\r\nimport { EShapeActionValueBlink } from \"./e-shape-action-value-blink\";\r\n\r\nexport class EShapeActionRuntimeBlinkDarken extends EShapeActionRuntimeBlink {\r\n\tconstructor( value: EShapeActionValueBlink ) {\r\n\t\tsuper( value, EShapeRuntimeReset.COLOR );\r\n\t}\r\n\r\n\tprotected toOn( shape: EShape, runtime: EShapeRuntime ): void {\r\n\t\tconst fill = EShapeActionBases.toBaseFill( shape, runtime );\r\n\t\tshape.fill.set(\r\n\t\t\tundefined,\r\n\t\t\tUtilRgb.darken( fill.color, 0.5 ),\r\n\t\t\tfill.alpha\r\n\t\t);\r\n\r\n\t\tconst stroke = EShapeActionBases.toBaseStroke( shape, runtime );\r\n\t\tshape.stroke.set(\r\n\t\t\tundefined,\r\n\t\t\tUtilRgb.darken( stroke.color, 0.5 ),\r\n\t\t\tstroke.alpha\r\n\t\t);\r\n\r\n\t\tconst text = EShapeActionBases.toBaseText( shape, runtime );\r\n\t\tshape.text.set(\r\n\t\t\tundefined,\r\n\t\t\tUtilRgb.darken( text.color, 0.5 ),\r\n\t\t\ttext.alpha\r\n\t\t);\r\n\r\n\t\tconst outline = EShapeActionBases.toBaseTextOutline( shape, runtime );\r\n\t\tshape.text.outline.set(\r\n\t\t\tundefined,\r\n\t\t\tUtilRgb.darken( outline.color, 0.5 ),\r\n\t\t\toutline.alpha\r\n\t\t);\r\n\r\n\t\truntime.written |= this.reset;\r\n\t}\r\n}\r\n"]}