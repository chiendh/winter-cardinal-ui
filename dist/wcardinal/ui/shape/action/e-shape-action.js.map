{"version":3,"file":"e-shape-action.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/action/e-shape-action.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShapeResourceManagerSerialization } from \"../e-shape-resource-manager-serialization\";\r\nimport { EShapeActionValue } from \"./e-shape-action-value\";\r\n\r\nexport class EShapeAction {\r\n\tvalues: EShapeActionValue[];\r\n\r\n\tconstructor() {\r\n\t\tthis.values = [];\r\n\t}\r\n\r\n\tadd( value: EShapeActionValue, index?: number ): void {\r\n\t\tconst values = this.values;\r\n\t\tif( index != null ) {\r\n\t\t\tvalues.splice( index, 0, value );\r\n\t\t} else {\r\n\t\t\tvalues.push( value );\r\n\t\t}\r\n\t}\r\n\r\n\taddAll( values: EShapeActionValue[] ): void {\r\n\t\tconst sources = values;\r\n\t\tconst destinations = this.values;\r\n\t\tfor( let i = 0, imax = sources.length; i < imax; ++i) {\r\n\t\t\tdestinations.push( sources[i] );\r\n\t\t}\r\n\t}\r\n\r\n\tindexOf( target: EShapeActionValue ): number {\r\n\t\tconst values = this.values;\r\n\r\n\t\t// Instance-based matching\r\n\t\tfor( let i = 0, imax = values.length; i < imax; ++i ) {\r\n\t\t\tconst value = values[ i ];\r\n\t\t\tif( value === target ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Data-based matching\r\n\t\tfor( let i = 0, imax = values.length; i < imax; ++i ) {\r\n\t\t\tconst value = values[ i ];\r\n\t\t\tif( value.isEquals( target ) ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tget( index: number ): EShapeActionValue | null {\r\n\t\tconst result = this.values[ index ];\r\n\t\tif( result != null ) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tset( index: number, value: EShapeActionValue ): void {\r\n\t\tthis.values[ index ] = value;\r\n\t}\r\n\r\n\tremove( index: number ): void {\r\n\t\tthis.values.splice( index, 1 );\r\n\t}\r\n\r\n\tclear(): void {\r\n\t\tthis.values.length = 0;\r\n\t}\r\n\r\n\tsize(): number {\r\n\t\treturn this.values.length;\r\n\t}\r\n\r\n\tswap( indexA: number, indexB: number ): void {\r\n\t\tconst values = this.values;\r\n\t\tconst tmp = values[ indexB ];\r\n\t\tvalues[ indexB ] = values[ indexA ];\r\n\t\tvalues[ indexA ] = tmp;\r\n\t}\r\n\r\n\tserialize( manager: EShapeResourceManagerSerialization ): number[] {\r\n\t\tconst result: number[] = [];\r\n\t\tconst values = this.values;\r\n\t\tfor( let i = 0, imax = values.length; i < imax; ++i ) {\r\n\t\t\tresult.push( values[ i ].serialize( manager ) );\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n"]}