{"version":3,"file":"e-shape-action-bases.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/action/e-shape-action-bases.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAIH,OAAO,EAAiB,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAKvE;IAAA;IAgBA,CAAC;IAfO,4BAAU,GAAjB,UAAmB,KAAa,EAAE,OAAsB;QACvD,OAAO,CAAE,OAAO,CAAC,OAAO,GAAG,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,CAAC;IACnF,CAAC;IAEM,8BAAY,GAAnB,UAAqB,KAAa,EAAE,OAAsB;QACzD,OAAO,CAAE,OAAO,CAAC,OAAO,GAAG,kBAAkB,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAE,CAAC,MAAM,CAAC;IACvF,CAAC;IAEM,4BAAU,GAAjB,UAAmB,KAAa,EAAE,OAAsB;QACvD,OAAO,CAAE,OAAO,CAAC,OAAO,GAAG,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,CAAC;IACnF,CAAC;IAEM,mCAAiB,GAAxB,UAA0B,KAAa,EAAE,OAAsB;QAC9D,OAAO,CAAE,OAAO,CAAC,OAAO,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,CAAC,OAAO,CAAC;IACnG,CAAC;IACF,wBAAC;AAAD,CAAC,AAhBD,IAgBC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeFillLike } from \"../e-shape-fill\";\r\nimport { EShapeRuntime, EShapeRuntimeReset } from \"../e-shape-runtime\";\r\nimport { EShapeStrokeLike } from \"../e-shape-stroke\";\r\nimport { EShapeTextLike } from \"../e-shape-text\";\r\nimport { EShapeTextOutlineLike } from \"../e-shape-text-outline\";\r\n\r\nexport class EShapeActionBases {\r\n\tstatic toBaseFill( shape: EShape, runtime: EShapeRuntime ): EShapeFillLike {\r\n\t\treturn ( runtime.written & EShapeRuntimeReset.COLOR_FILL ? shape : runtime ).fill;\r\n\t}\r\n\r\n\tstatic toBaseStroke( shape: EShape, runtime: EShapeRuntime ): EShapeStrokeLike {\r\n\t\treturn ( runtime.written & EShapeRuntimeReset.COLOR_STROKE ? shape : runtime ).stroke;\r\n\t}\r\n\r\n\tstatic toBaseText( shape: EShape, runtime: EShapeRuntime ): EShapeTextLike {\r\n\t\treturn ( runtime.written & EShapeRuntimeReset.COLOR_TEXT ? shape : runtime ).text;\r\n\t}\r\n\r\n\tstatic toBaseTextOutline( shape: EShape, runtime: EShapeRuntime ): EShapeTextOutlineLike {\r\n\t\treturn ( runtime.written & EShapeRuntimeReset.COLOR_TEXT_OUTLINE ? shape : runtime ).text.outline;\r\n\t}\r\n}\r\n"]}