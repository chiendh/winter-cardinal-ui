{"version":3,"file":"e-shape-action-runtime-blink.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/action/e-shape-action-runtime-blink.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAIH,OAAO,EAAE,8BAA8B,EAAE,MAAM,sCAAsC,CAAC;AAGtF;IAA8C,4CAA8B;IAG3E,kCAAa,KAA6B,EAAE,KAAyB;QAArE,YACC,kBAAO,KAAK,EAAE,KAAK,CAAE,SAErB;QADA,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;;IAChC,CAAC;IAED,0CAAO,GAAP,UAAS,KAAa,EAAE,OAAsB,EAAE,IAAY;QAC3D,IAAI,CAAC,CAAE,IAAI,CAAC,SAAS,CAAE,KAAK,EAAE,IAAI,CAAE,EAAG;YACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAM,SAAS,GAAG,CAAE,QAAQ,IAAI,CAAC,CAAE,CAAC;YACpC,IAAM,OAAO,GAAG,CAAE,IAAI,GAAG,SAAS,CAAE,CAAC;YACrC,IAAI,OAAO,GAAG,QAAQ,EAAG;gBACxB,IAAI,CAAC,KAAK,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;gBAC7B,OAAO,CAAC,MAAM,GAAG,IAAI,GAAG,CAAE,QAAQ,GAAG,OAAO,CAAE,CAAC;aAC/C;iBAAM;gBACN,IAAI,CAAC,IAAI,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;gBAC5B,OAAO,CAAC,MAAM,GAAG,IAAI,GAAG,CAAE,SAAS,GAAG,OAAO,CAAE,CAAC;aAChD;SACD;IACF,CAAC;IAES,uCAAI,GAAd,UAAgB,KAAa,EAAE,OAAsB;QACpD,EAAE;IACH,CAAC;IAES,wCAAK,GAAf,UAAiB,KAAa,EAAE,OAAsB;QACrD,EAAE;IACH,CAAC;IACF,+BAAC;AAAD,CAAC,AA9BD,CAA8C,8BAA8B,GA8B3E","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeRuntime, EShapeRuntimeReset } from \"../e-shape-runtime\";\r\nimport { EShapeActionRuntimeConditional } from \"./e-shape-action-runtime-conditional\";\r\nimport { EShapeActionValueBlink } from \"./e-shape-action-value-blink\";\r\n\r\nexport class EShapeActionRuntimeBlink extends EShapeActionRuntimeConditional {\r\n\tprotected interval: number;\r\n\r\n\tconstructor( value: EShapeActionValueBlink, reset: EShapeRuntimeReset ) {\r\n\t\tsuper( value, reset );\r\n\t\tthis.interval = value.interval;\r\n\t}\r\n\r\n\texecute( shape: EShape, runtime: EShapeRuntime, time: number ): void {\r\n\t\tif( !! this.condition( shape, time ) ) {\r\n\t\t\tconst interval = this.interval;\r\n\t\t\tconst dinterval = ( interval << 1 );\r\n\t\t\tconst elapsed = ( time % dinterval );\r\n\t\t\tif( elapsed < interval ) {\r\n\t\t\t\tthis.toOff( shape, runtime );\r\n\t\t\t\truntime.effect = time + ( interval - elapsed );\r\n\t\t\t} else {\r\n\t\t\t\tthis.toOn( shape, runtime );\r\n\t\t\t\truntime.effect = time + ( dinterval - elapsed );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toOn( shape: EShape, runtime: EShapeRuntime ): void {\r\n\t\t//\r\n\t}\r\n\r\n\tprotected toOff( shape: EShape, runtime: EShapeRuntime ): void {\r\n\t\t//\r\n\t}\r\n}\r\n"]}