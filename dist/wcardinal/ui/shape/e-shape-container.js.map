{"version":3,"file":"e-shape-container.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/shape/e-shape-container.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DisplayObject, IPoint, Point, Renderer } from \"pixi.js\";\r\nimport { DynamicAtlas } from \"../util/dynamic-atlas\";\r\nimport { DynamicSDFFontAtlases } from \"../util/dynamic-sdf-font-atlases\";\r\nimport { EShape } from \"./e-shape\";\r\nimport { EShapeBuffer } from \"./e-shape-buffer\";\r\nimport { EShapeRenderer } from \"./e-shape-renderer\";\r\n\r\nexport class EShapeContainer extends DisplayObject {\r\n\tprotected _shapeRenderer: EShapeRenderer | null = null;\r\n\r\n\treadonly children: EShape[];\r\n\tprotected _childrenId: number;\r\n\tprotected _childrenIdRendered: number;\r\n\r\n\tprotected _atlas: DynamicAtlas | null;\r\n\tprotected _fontAtlases: DynamicSDFFontAtlases;\r\n\r\n\tprotected _pixelScale: number;\r\n\tprotected _pixelScaleId: number;\r\n\r\n\tprotected _work: Point;\r\n\r\n\tprotected _buffers: EShapeBuffer[];\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.children = [];\r\n\r\n\t\tthis._childrenId = 0;\r\n\t\tthis._childrenIdRendered = -1;\r\n\r\n\t\tthis._atlas = null;\r\n\t\tthis._fontAtlases = new DynamicSDFFontAtlases();\r\n\r\n\t\tthis._pixelScale = 1;\r\n\t\tthis._pixelScaleId = NaN;\r\n\r\n\t\tthis._work = new Point();\r\n\r\n\t\tthis._buffers = [];\r\n\t}\r\n\r\n\tcalculateBounds(): void {\r\n\t\tthis._bounds.clear();\r\n\t}\r\n\r\n\tonChildTransformChange(): void {\r\n\t\t// DO NOTHING\r\n\t}\r\n\r\n\ttoDirty(): number {\r\n\t\treturn this._childrenId += 1;\r\n\t}\r\n\r\n\tisDirty(): boolean {\r\n\t\treturn this._childrenIdRendered < this._childrenId;\r\n\t}\r\n\r\n\trender( renderer: Renderer ): void {\r\n\t\tif( !this.visible || this.worldAlpha <= 0 || !this.renderable ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst childrenId = this._childrenId;\r\n\t\tconst childrenIdRendered = this._childrenIdRendered;\r\n\t\tthis._childrenIdRendered = childrenId;\r\n\t\tconst isChildrenDirty = childrenIdRendered < childrenId;\r\n\t\tconst children = this.children;\r\n\r\n\t\tlet shapeRenderer: EShapeRenderer | null = this._shapeRenderer;\r\n\t\tif( shapeRenderer == null ) {\r\n\t\t\tshapeRenderer = this._shapeRenderer = new EShapeRenderer( renderer );\r\n\t\t}\r\n\t\trenderer.batch.setObjectRenderer( shapeRenderer );\r\n\r\n\t\tconst mask = this.mask;\r\n\t\tif( mask ) {\r\n\t\t\trenderer.mask.push( this, mask );\r\n\t\t\tshapeRenderer.render_( this, children, isChildrenDirty );\r\n\t\t\trenderer.mask.pop( this );\r\n\t\t} else {\r\n\t\t\tshapeRenderer.render_( this, children, isChildrenDirty );\r\n\t\t}\r\n\t}\r\n\r\n\tcontainsPoint( point: Point ): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetFontAtlases(): DynamicSDFFontAtlases {\r\n\t\treturn this._fontAtlases;\r\n\t}\r\n\r\n\tgetAtlas( resolution: number ): DynamicAtlas {\r\n\t\tlet atlas = this._atlas;\r\n\t\tif( atlas == null ) {\r\n\t\t\tatlas = new DynamicAtlas( resolution );\r\n\t\t\tthis._atlas = atlas;\r\n\t\t}\r\n\t\treturn atlas;\r\n\t}\r\n\r\n\tgetBuffers(): EShapeBuffer[] {\r\n\t\treturn this._buffers;\r\n\t}\r\n\r\n\ttoPixelScale( resolution: number ): number {\r\n\t\tthis.updateTransform();\r\n\t\tconst transform = this.transform;\r\n\t\tconst worldID = (transform as any)._worldID;\r\n\t\tif( worldID !== this._pixelScaleId ) {\r\n\t\t\tthis._pixelScaleId = worldID;\r\n\t\t\tconst worldTransform = transform.worldTransform;\r\n\t\t\tconst a = worldTransform.a;\r\n\t\t\tconst b = worldTransform.b;\r\n\t\t\tconst scale = Math.sqrt( a * a + b * b );\r\n\t\t\tthis._pixelScale = 1 / ( resolution * scale );\r\n\t\t}\r\n\t\treturn this._pixelScale;\r\n\t}\r\n\r\n\tgetPixelScale(): number {\r\n\t\treturn this._pixelScale;\r\n\t}\r\n\r\n\tgetAntialiasWeight( resolution: number ): number {\r\n\t\treturn 1.25 / resolution;\r\n\t}\r\n\r\n\thitTest( global: IPoint, handler?: ( shape: EShape ) => boolean ): EShape | null {\r\n\t\tconst work = this._work;\r\n\t\tconst children = this.children;\r\n\t\tfor( let i = children.length - 1; 0 <= i; --i ) {\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tif( child.visible ) {\r\n\t\t\t\tconst childLocal = child.toLocal( global, undefined, work );\r\n\t\t\t\tconst childResult = child.contains( childLocal );\r\n\t\t\t\tif( childResult != null ) {\r\n\t\t\t\t\tif( handler == null || handler( childResult ) ) {\r\n\t\t\t\t\t\treturn childResult;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\thitTestBBox( global: IPoint, handler?: ( shape: EShape ) => boolean ): EShape | null {\r\n\t\tconst work = this._work;\r\n\t\tconst children = this.children;\r\n\t\tfor( let i = children.length - 1; 0 <= i; --i ) {\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tif( child.visible ) {\r\n\t\t\t\tconst childLocal = child.toLocal( global, undefined, work );\r\n\t\t\t\tif( child.containsBBox( childLocal ) ) {\r\n\t\t\t\t\tif( handler == null || handler( child ) ) {\r\n\t\t\t\t\t\treturn child;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\t// Buffer\r\n\t\tconst buffers = this._buffers;\r\n\t\tif( buffers != null ) {\r\n\t\t\tfor( let i = 0, imax = buffers.length; i < imax; ++i ) {\r\n\t\t\t\tbuffers[ i ].destroy();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._buffers.length = 0;\r\n\r\n\t\t// Shapes\r\n\t\tconst children = this.children;\r\n\t\tfor( let i = children.length - 1; 0 <= i; --i ) {\r\n\t\t\tchildren[ i ].destroy();\r\n\t\t}\r\n\t\tchildren.length = 0;\r\n\r\n\t\t//\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n"]}