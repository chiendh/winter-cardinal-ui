{"version":3,"file":"e-shape-triangle.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-triangle.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD;IAAoC,kCAAe;IAClD,wBAAa,IAA0B;QAA1B,qBAAA,EAAA,OAAO,UAAU,CAAC,QAAQ;eACtC,kBAAO,IAAI,CAAE;IACd,CAAC;IAED,8BAAK,GAAL;QACC,OAAO,IAAI,cAAc,EAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;IAC1C,CAAC;IAES,qCAAY,GAAtB,UAAwB,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,GAAW,EAAE,GAAW;QAChF,kBAAkB;QAClB,oBAAoB;QACpB,oBAAoB;QACpB,WAAW;QACX,OAAO,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAE,CAAC;IACvE,CAAC;IAED,oCAAW,GAAX,UAAa,CAAS,EAAE,CAAS,EAAE,EAAU,EAAE,EAAU;QACxD,IAAI,iBAAM,eAAe,YAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE,EAAG;YAC3C,IAAM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;YACtB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,IAAI,CAAC,MAAM,EAAG;gBACjB,IAAI,IAAI,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAE,EAAG;oBAC5C,OAAO,IAAI,CAAC;iBACZ;aACD;iBAAM;gBACN,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,IAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;gBACjC,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,GAAG,WAAW,EAAG;oBACtC,IAAI,IAAI,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAE,EAAG;wBAC5C,IAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAE,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAE,CAAC;wBAC9C,IAAM,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;wBAEnC,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;wBACnB,IAAM,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,EAAE,GAAG,WAAW,CAAE,GAAG,EAAE,CAAC;wBACrE,IAAM,GAAG,GAAG,EAAE,GAAG,WAAW,CAAC;wBAC7B,IAAI,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE,EAAG;4BAC9C,OAAO,IAAI,CAAC;yBACZ;qBACD;iBACD;aACD;SACD;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IACF,qBAAC;AAAD,CAAC,AA7CD,CAAoC,eAAe,GA6ClD","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShapeType } from \"../e-shape-type\";\r\nimport { EShapePrimitive } from \"./e-shape-primitive\";\r\n\r\nexport class EShapeTriangle extends EShapePrimitive {\r\n\tconstructor( type = EShapeType.TRIANGLE ) {\r\n\t\tsuper( type );\r\n\t}\r\n\r\n\tclone(): EShapeTriangle {\r\n\t\treturn new EShapeTriangle().copy( this );\r\n\t}\r\n\r\n\tprotected containsAbs_( x: number, y: number, a: number, ay1: number, ay2: number ): boolean {\r\n\t\t// a = 2 * ay / ax\r\n\t\t// y = + a * x + ay1\r\n\t\t// y = - a * x + ay1\r\n\t\t// y = ay2;\r\n\t\treturn ( +a * x + ay1 - y <= 0 && -a * x + ay1 - y <= 0 && y <= ay2 );\r\n\t}\r\n\r\n\tcontainsAbs( x: number, y: number, ax: number, ay: number ): boolean {\r\n\t\tif( super.containsAbsBBox( x, y, ax, ay ) ) {\r\n\t\t\tconst a = 2 * ay / ax;\r\n\t\t\tconst fill = this.fill;\r\n\t\t\tif( fill.enable ) {\r\n\t\t\t\tif( this.containsAbs_( x, y, a, -ay, +ay ) ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst stroke = this.stroke;\r\n\t\t\t\tconst strokeWidth = stroke.width;\r\n\t\t\t\tif( stroke.enable && 0 < strokeWidth ) {\r\n\t\t\t\t\tif( this.containsAbs_( x, y, a, -ay, +ay ) ) {\r\n\t\t\t\t\t\tconst az = Math.sqrt( ax * ax + 4 * ay * ay );\r\n\t\t\t\t\t\tconst aw = 2 * ax * ay / (ax + az);\r\n\r\n\t\t\t\t\t\tconst cy = ay - aw;\r\n\t\t\t\t\t\tconst ay1 = cy + (-ay - cy) * Math.max( 0.0, aw - strokeWidth ) / aw;\r\n\t\t\t\t\t\tconst ay2 = ay - strokeWidth;\r\n\t\t\t\t\t\tif( ! this.containsAbs_( x, y, a, ay1, ay2 ) ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n"]}