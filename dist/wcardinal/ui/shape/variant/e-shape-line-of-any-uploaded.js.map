{"version":3,"file":"e-shape-line-of-any-uploaded.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-line-of-any-uploaded.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeBuffer } from \"../e-shape-buffer\";\r\nimport { buildLineOfAnyColor, toLineOfAnyPointCount } from \"./build-line-of-any\";\r\nimport { EShapeLineOfAnyPoints } from \"./e-shape-line-of-any-points\";\r\nimport { EShapeTextUploaded } from \"./e-shape-text-uploaded\";\r\n\r\nexport abstract class EShapeLineOfAnyUploaded extends EShapeTextUploaded {\r\n\tprotected pointId: number;\r\n\tprotected pointCount: number;\r\n\tprotected pointCountReserved: number;\r\n\tprotected pointSizeId: number;\r\n\tprotected pointOffsetId: number;\r\n\tprotected pointFillId: number;\r\n\tprotected pointStrokeId: number;\r\n\r\n\tconstructor(\r\n\t\tbuffer: EShapeBuffer,\r\n\t\tvoffset: number, ioffset: number,\r\n\t\ttvcount: number, ticount: number,\r\n\t\tvcount: number, icount: number,\r\n\t\tantialiasWeight: number,\r\n\t\tpointCountReserved: number\r\n\t) {\r\n\t\tsuper( buffer, voffset, ioffset, tvcount, ticount, vcount, icount, antialiasWeight );\r\n\t\tthis.pointId = -1;\r\n\t\tthis.pointCount = 0;\r\n\t\tthis.pointCountReserved = pointCountReserved;\r\n\t\tthis.pointSizeId = -1;\r\n\t\tthis.pointOffsetId = -1;\r\n\t\tthis.pointFillId = -1;\r\n\t\tthis.pointStrokeId = -1;\r\n\t}\r\n\r\n\tisCompatible( shape: EShape ): boolean {\r\n\t\tif( super.isCompatible( shape ) ) {\r\n\t\t\tconst points = shape.points;\r\n\t\t\tconst pointCount = toLineOfAnyPointCount( points ? points.length : 0 );\r\n\t\t\treturn pointCount === this.pointCountReserved;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected updateLineOfAnyColorFill(\r\n\t\tbuffer: EShapeBuffer, shape: EShape,\r\n\t\tpoints: EShapeLineOfAnyPoints, vcountPerPoint: number\r\n\t): void {\r\n\t\tconst pointFill = points.fill;\r\n\t\tconst pointFillId = pointFill.id;\r\n\t\tconst isPointFillChanged = ( pointFillId !== this.pointFillId );\r\n\r\n\t\tconst fill = shape.fill;\r\n\t\tconst isFillEnabled = shape.visible && fill.enable;\r\n\t\tconst colorFill = fill.color;\r\n\t\tconst alphaFill = (isFillEnabled ? fill.alpha : 0);\r\n\t\tconst isFillChanged = ( colorFill !== this.colorFill || alphaFill !== this.alphaFill );\r\n\r\n\t\tif( isPointFillChanged || isFillChanged ) {\r\n\t\t\tthis.colorFill = colorFill;\r\n\t\t\tthis.alphaFill = alphaFill;\r\n\t\t\tthis.pointFillId = pointFillId;\r\n\t\t\tbuffer.updateColorFills();\r\n\t\t\tbuildLineOfAnyColor(\r\n\t\t\t\tthis.vertexOffset,\r\n\t\t\t\tvcountPerPoint,\r\n\t\t\t\tpointFill,\r\n\t\t\t\tthis.pointCountReserved,\r\n\t\t\t\tbuffer.colorFills,\r\n\t\t\t\tisFillEnabled,\r\n\t\t\t\tcolorFill,\r\n\t\t\t\talphaFill\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateLineOfAnyColorStroke(\r\n\t\tbuffer: EShapeBuffer, shape: EShape,\r\n\t\tpoints: EShapeLineOfAnyPoints, vcountPerPoint: number\r\n\t): void {\r\n\t\tconst pointStroke = points.stroke;\r\n\t\tconst pointStrokeId = pointStroke.id;\r\n\t\tconst isPointStrokeChanged = ( pointStrokeId !== this.pointStrokeId );\r\n\r\n\t\tconst stroke = shape.stroke;\r\n\t\tconst isStrokeEnabled = shape.visible && stroke.enable;\r\n\t\tconst colorStroke = stroke.color;\r\n\t\tconst alphaStroke = (isStrokeEnabled ? stroke.alpha : 0);\r\n\t\tconst isStrokeChanged = ( colorStroke !== this.colorStroke || alphaStroke !== this.alphaStroke );\r\n\r\n\t\tif( isPointStrokeChanged || isStrokeChanged ) {\r\n\t\t\tthis.colorStroke = colorStroke;\r\n\t\t\tthis.alphaStroke = alphaStroke;\r\n\t\t\tthis.pointStrokeId = pointStrokeId;\r\n\t\t\tbuffer.updateColorStrokes();\r\n\t\t\tbuildLineOfAnyColor(\r\n\t\t\t\tthis.vertexOffset,\r\n\t\t\t\tvcountPerPoint,\r\n\t\t\t\tpointStroke,\r\n\t\t\t\tthis.pointCountReserved,\r\n\t\t\t\tbuffer.colorStrokes,\r\n\t\t\t\tisStrokeEnabled,\r\n\t\t\t\tcolorStroke,\r\n\t\t\t\talphaStroke\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n"]}