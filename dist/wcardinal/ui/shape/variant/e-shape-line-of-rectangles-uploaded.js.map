{"version":3,"file":"e-shape-line-of-rectangles-uploaded.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-line-of-rectangles-uploaded.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeBuffer } from \"../e-shape-buffer\";\r\nimport { buildNullClipping, buildNullStep, buildNullUv, buildNullVertex } from \"./build-null\";\r\nimport {\r\n\tbuildRectangleClipping, buildRectangleIndex, buildRectangleStep,\r\n\tbuildRectangleUv, buildRectangleVertex,\r\n\tRECTANGLE_INDEX_COUNT, RECTANGLE_VERTEX_COUNT, RECTANGLE_WORLD_SIZE\r\n} from \"./build-rectangle\";\r\nimport { copyClipping } from \"./copy-clipping\";\r\nimport { copyIndex } from \"./copy-index\";\r\nimport { copyStep } from \"./copy-step\";\r\nimport { copyUvs } from \"./copy-uv\";\r\nimport { copyVertex } from \"./copy-vertex\";\r\nimport { EShapeLineOfAnyPoints } from \"./e-shape-line-of-any-points\";\r\nimport { EShapeLineOfAnyPointsImpl } from \"./e-shape-line-of-any-points-impl\";\r\nimport { EShapeLineOfAnyUploaded } from \"./e-shape-line-of-any-uploaded\";\r\n\r\nexport class EShapeLineOfRectanglesUploaded extends EShapeLineOfAnyUploaded {\r\n\tinit( shape: EShape ): this {\r\n\t\tsuper.init( shape );\r\n\r\n\t\t// Indices\r\n\t\tconst buffer = this.buffer;\r\n\t\tbuffer.updateIndices();\r\n\t\tconst indices = buffer.indices;\r\n\t\tconst voffset = this.vertexOffset;\r\n\t\tconst ioffset = this.indexOffset;\r\n\t\tconst pointCountReserved = this.pointCountReserved;\r\n\t\tif( 0 < pointCountReserved ) {\r\n\t\t\tbuildRectangleIndex(\r\n\t\t\t\tindices,\r\n\t\t\t\tvoffset,\r\n\t\t\t\tioffset\r\n\t\t\t);\r\n\t\t\tcopyIndex(\r\n\t\t\t\tindices,\r\n\t\t\t\tRECTANGLE_VERTEX_COUNT,\r\n\t\t\t\tioffset,\r\n\t\t\t\tRECTANGLE_INDEX_COUNT,\r\n\t\t\t\tpointCountReserved\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Text\r\n\t\tthis.initText();\r\n\r\n\t\tthis.update( shape );\r\n\t\treturn this;\r\n\t}\r\n\r\n\tupdate( shape: EShape ): void {\r\n\t\tconst buffer = this.buffer;\r\n\t\tconst points = shape.points;\r\n\t\tif( points instanceof EShapeLineOfAnyPointsImpl ) {\r\n\t\t\tthis.updateVertexClippingStepAndUv( buffer, shape, points );\r\n\t\t\tthis.updateLineOfAnyColorFill( buffer, shape, points, RECTANGLE_VERTEX_COUNT );\r\n\t\t\tthis.updateLineOfAnyColorStroke( buffer, shape, points, RECTANGLE_VERTEX_COUNT );\r\n\t\t\tthis.updateText( buffer, shape );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateVertexClippingStepAndUv( buffer: EShapeBuffer, shape: EShape, points: EShapeLineOfAnyPoints ) {\r\n\t\tconst pointId = points.id;\r\n\t\tconst pointOffset = points.offset;\r\n\t\tconst pointOffsetId = pointOffset.id;\r\n\t\tconst isPointChanged = ( pointId !== this.pointId || pointOffsetId !== this.pointOffsetId );\r\n\r\n\t\tconst pointSize = points.size;\r\n\t\tconst pointSizeId = pointSize.id;\r\n\t\tconst isPointSizeChanged = ( pointSizeId !== this.pointSizeId );\r\n\r\n\t\tconst size = shape.size;\r\n\t\tconst sizeX = size.x;\r\n\t\tconst sizeY = size.y;\r\n\t\tconst isSizeChanged = ( sizeX !== this.sizeX || sizeY !== this.sizeY );\r\n\r\n\t\tconst transformLocalId = this.toTransformLocalId( shape );\r\n\t\tconst isTransformChanged = ( this.transformLocalId !== transformLocalId );\r\n\r\n\t\tconst stroke = shape.stroke;\r\n\t\tconst strokeWidth = (stroke.enable ? stroke.width : 0);\r\n\t\tconst strokeAlign = stroke.align;\r\n\t\tconst strokeSide = stroke.side;\r\n\t\tconst isStrokeChanged = ( this.strokeAlign !== strokeAlign ||\r\n\t\t\tthis.strokeWidth !== strokeWidth || this.strokeSide !== strokeSide );\r\n\r\n\t\tconst texture = this.toTexture( shape );\r\n\t\tconst textureTransformId = this.toTextureTransformId( texture );\r\n\t\tconst isTextureChanged = ( texture !== this.texture || textureTransformId !== this.textureTransformId );\r\n\r\n\t\tconst isVertexChanged = isPointChanged || isPointSizeChanged || isSizeChanged || isStrokeChanged;\r\n\r\n\t\tif( isVertexChanged || isTransformChanged || isTextureChanged ) {\r\n\t\t\tthis.pointId = pointId;\r\n\t\t\tthis.pointCount = points.length;\r\n\t\t\tthis.pointOffsetId = pointOffsetId;\r\n\t\t\tthis.pointSizeId = pointSizeId;\r\n\t\t\tthis.transformLocalId = transformLocalId;\r\n\t\t\tthis.strokeWidth = strokeWidth;\r\n\t\t\tthis.strokeAlign = strokeAlign;\r\n\t\t\tthis.strokeSide = strokeSide;\r\n\t\t\tthis.texture = texture;\r\n\t\t\tthis.textureTransformId = textureTransformId;\r\n\r\n\t\t\tif( isSizeChanged || isTransformChanged || isStrokeChanged ) {\r\n\t\t\t\t// Invalidate the text layout to update the text layout.\r\n\t\t\t\tthis.textSpacingHorizontal = NaN;\r\n\t\t\t}\r\n\r\n\t\t\t// Buffer\r\n\t\t\tbuffer.updateVertices();\r\n\t\t\tif( isVertexChanged || isTransformChanged ) {\r\n\t\t\t\tbuffer.updateSteps();\r\n\t\t\t}\r\n\t\t\tif( isVertexChanged ) {\r\n\t\t\t\tbuffer.updateClippings();\r\n\t\t\t}\r\n\t\t\tif( isVertexChanged || isTextureChanged ) {\r\n\t\t\t\tbuffer.updateUvs();\r\n\t\t\t}\r\n\t\t\tconst pointCount = this.pointCount;\r\n\t\t\tconst pointsValues = points.values;\r\n\t\t\tconst voffset = this.vertexOffset;\r\n\t\t\tconst vertices = buffer.vertices;\r\n\t\t\tconst clippings = buffer.clippings;\r\n\t\t\tconst steps = buffer.steps;\r\n\t\t\tconst uvs = buffer.uvs;\r\n\t\t\tconst internalTransform = shape.transform.internalTransform;\r\n\t\t\tconst antialiasWeight = this.antialiasWeight;\r\n\t\t\tconst textureUvs = this.toTextureUvs( texture );\r\n\t\t\tif( 0 < pointCount && pointSize.isStaticX() && pointSize.isStaticY() ) {\r\n\t\t\t\tconst pointSizeX = pointSize.getX( 0 );\r\n\t\t\t\tconst pointSizeY = pointSize.getY( 0 );\r\n\r\n\t\t\t\t// Vertices\r\n\t\t\t\tbuildRectangleVertex(\r\n\t\t\t\t\tvertices, voffset,\r\n\t\t\t\t\t0, 0,\r\n\t\t\t\t\tpointSizeX, pointSizeY,\r\n\t\t\t\t\tstrokeAlign, strokeWidth,\r\n\t\t\t\t\tinternalTransform,\r\n\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t);\r\n\t\t\t\tcopyVertex(\r\n\t\t\t\t\tvertices,\r\n\t\t\t\t\tinternalTransform,\r\n\t\t\t\t\tvoffset, RECTANGLE_VERTEX_COUNT,\r\n\t\t\t\t\tpointCount, pointsValues,\r\n\t\t\t\t\tpointOffset\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Steps\r\n\t\t\t\tif( isVertexChanged || isTransformChanged ) {\r\n\t\t\t\t\tbuildRectangleStep(\r\n\t\t\t\t\t\tvoffset,\r\n\t\t\t\t\t\tsteps,\r\n\t\t\t\t\t\tstrokeWidth, strokeSide,\r\n\t\t\t\t\t\tantialiasWeight,\r\n\t\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcopyStep(\r\n\t\t\t\t\t\tsteps,\r\n\t\t\t\t\t\tvoffset, RECTANGLE_VERTEX_COUNT,\r\n\t\t\t\t\t\tpointCount\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Clippings\r\n\t\t\t\tif( isVertexChanged ) {\r\n\t\t\t\t\tbuildRectangleClipping(\r\n\t\t\t\t\t\tclippings,\r\n\t\t\t\t\t\tvoffset,\r\n\t\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcopyClipping(\r\n\t\t\t\t\t\tclippings,\r\n\t\t\t\t\t\tvoffset, RECTANGLE_VERTEX_COUNT,\r\n\t\t\t\t\t\tpointCount\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// UVs\r\n\t\t\t\tif( isVertexChanged || isTextureChanged ) {\r\n\t\t\t\t\tbuildRectangleUv(\r\n\t\t\t\t\t\tuvs,\r\n\t\t\t\t\t\tvoffset,\r\n\t\t\t\t\t\ttextureUvs,\r\n\t\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcopyUvs(\r\n\t\t\t\t\t\tuvs,\r\n\t\t\t\t\t\tvoffset, RECTANGLE_VERTEX_COUNT,\r\n\t\t\t\t\t\tpointCount\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor( let i = 0; i < pointCount; ++i ) {\r\n\t\t\t\t\tconst ip = i << 1;\r\n\t\t\t\t\tconst px = pointsValues[ ip     ] + pointOffset.getX( i );\r\n\t\t\t\t\tconst py = pointsValues[ ip + 1 ] + pointOffset.getY( i );\r\n\t\t\t\t\tconst pointSizeX = pointSize.getX( i );\r\n\t\t\t\t\tconst pointSizeY = pointSize.getY( i );\r\n\t\t\t\t\tconst iv = voffset + i * RECTANGLE_VERTEX_COUNT;\r\n\r\n\t\t\t\t\t// Vertices\r\n\t\t\t\t\tbuildRectangleVertex(\r\n\t\t\t\t\t\tvertices, iv,\r\n\t\t\t\t\t\tpx, py,\r\n\t\t\t\t\t\tpointSizeX, pointSizeY,\r\n\t\t\t\t\t\tstrokeAlign, strokeWidth,\r\n\t\t\t\t\t\tinternalTransform,\r\n\t\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Steps\r\n\t\t\t\t\tif( isVertexChanged || isTransformChanged ) {\r\n\t\t\t\t\t\tbuildRectangleStep(\r\n\t\t\t\t\t\t\tiv,\r\n\t\t\t\t\t\t\tsteps,\r\n\t\t\t\t\t\t\tstrokeWidth, strokeSide,\r\n\t\t\t\t\t\t\tantialiasWeight,\r\n\t\t\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Clippings\r\n\t\t\t\t\tif( isVertexChanged ) {\r\n\t\t\t\t\t\tbuildRectangleClipping(\r\n\t\t\t\t\t\t\tclippings,\r\n\t\t\t\t\t\t\tiv,\r\n\t\t\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// UVs\r\n\t\t\t\t\tif( isVertexChanged || isTextureChanged ) {\r\n\t\t\t\t\t\tbuildRectangleUv(\r\n\t\t\t\t\t\t\tuvs,\r\n\t\t\t\t\t\t\tiv,\r\n\t\t\t\t\t\t\ttextureUvs,\r\n\t\t\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Fill the rest\r\n\t\t\tconst pointCountReserved = this.pointCountReserved;\r\n\t\t\tconst voffsetReserved = voffset + pointCount * RECTANGLE_VERTEX_COUNT;\r\n\t\t\tconst vcountReserved = RECTANGLE_VERTEX_COUNT * (pointCountReserved - pointCount);\r\n\t\t\tbuildNullVertex(\r\n\t\t\t\tvertices,\r\n\t\t\t\tvoffsetReserved,\r\n\t\t\t\tvcountReserved\r\n\t\t\t);\r\n\t\t\tbuildNullStep(\r\n\t\t\t\tsteps,\r\n\t\t\t\tvoffsetReserved,\r\n\t\t\t\tvcountReserved\r\n\t\t\t);\r\n\t\t\tbuildNullClipping(\r\n\t\t\t\tclippings,\r\n\t\t\t\tvoffsetReserved,\r\n\t\t\t\tvcountReserved\r\n\t\t\t);\r\n\t\t\tbuildNullUv(\r\n\t\t\t\tuvs,\r\n\t\t\t\tvoffsetReserved,\r\n\t\t\t\tvcountReserved\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n"]}