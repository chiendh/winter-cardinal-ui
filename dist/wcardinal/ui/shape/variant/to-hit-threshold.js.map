{"version":3,"file":"to-hit-threshold.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/to-hit-threshold.ts"],"names":[],"mappings":"AAGA,MAAM,CAAC,IAAM,cAAc,GAAG,UAC7B,MAAkF,EAClF,WAAuD;IAEvD,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC7B,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;IACjG,OAAO,CAAE,WAAW,CAAC,CAAC;QACrB,WAAW,CAAE,IAAI,EAAE,CAAC,CAAE,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,CACV,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { EShapeStroke } from \"../e-shape-stroke\";\r\nimport { EShapeLineOfAnyPoints, EShapeLineOfAnyPointsToHitThreshold } from \"./e-shape-line-of-any-points\";\r\n\r\nexport const toHitThreshold = (\r\n\ttarget: { readonly stroke: EShapeStroke, readonly points: EShapeLineOfAnyPoints; },\r\n\ttoThreshold: EShapeLineOfAnyPointsToHitThreshold | null\r\n): number => {\r\n\tconst stroke = target.stroke;\r\n\tconst size = target.points.size.getLimit() + ( stroke.enable ? stroke.width * stroke.align : 0 );\r\n\treturn ( toThreshold ?\r\n\t\ttoThreshold( size, 1 ) :\r\n\t\tsize * 0.5\r\n\t);\r\n};\r\n"]}