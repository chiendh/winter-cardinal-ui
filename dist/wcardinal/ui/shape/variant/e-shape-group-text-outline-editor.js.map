{"version":3,"file":"e-shape-group-text-outline-editor.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-group-text-outline-editor.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShapeResourceManagerDeserialization } from \"../e-shape-resource-manager-deserialization\";\r\nimport { EShapeResourceManagerSerialization } from \"../e-shape-resource-manager-serialization\";\r\nimport { EShapeTextOutline, EShapeTextOutlineLike } from \"../e-shape-text-outline\";\r\nimport { EShapeGroupPropertyParent } from \"./e-shape-group-property-parent\";\r\n\r\nexport class EShapeGroupTextOutlineEditor implements EShapeTextOutline {\r\n\tprotected _parent: EShapeGroupPropertyParent;\r\n\r\n\tconstructor( parent: EShapeGroupPropertyParent ) {\r\n\t\tthis._parent = parent;\r\n\t}\r\n\r\n\tget enable(): boolean {\r\n\t\tconst children = this._parent.children;\r\n\t\tif( 0 < children.length ) {\r\n\t\t\treturn children[ children.length - 1 ].text.outline.enable;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tset enable( enable: boolean ) {\r\n\t\tconst children = this._parent.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tchildren[ i ].text.outline.enable = enable;\r\n\t\t}\r\n\t}\r\n\r\n\tget color(): number {\r\n\t\tconst children = this._parent.children;\r\n\t\tif( 0 < children.length ) {\r\n\t\t\treturn children[ children.length - 1 ].text.outline.color;\r\n\t\t}\r\n\t\treturn 0xffffff;\r\n\t}\r\n\r\n\tset color( color: number ) {\r\n\t\tconst children = this._parent.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tchildren[ i ].text.outline.color = color;\r\n\t\t}\r\n\t}\r\n\r\n\tget alpha(): number {\r\n\t\tconst children = this._parent.children;\r\n\t\tif( 0 < children.length ) {\r\n\t\t\treturn children[ children.length - 1 ].text.outline.alpha;\r\n\t\t}\r\n\t\treturn 1.0;\r\n\t}\r\n\r\n\tset alpha( alpha: number ) {\r\n\t\tconst children = this._parent.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tchildren[ i ].text.outline.alpha = alpha;\r\n\t\t}\r\n\t}\r\n\r\n\tget width(): number {\r\n\t\tconst children = this._parent.children;\r\n\t\tif( 0 < children.length ) {\r\n\t\t\treturn children[ children.length - 1 ].text.outline.width;\r\n\t\t}\r\n\t\treturn 1.0;\r\n\t}\r\n\r\n\tset width( width: number ) {\r\n\t\tconst children = this._parent.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tchildren[ i ].text.outline.width = width;\r\n\t\t}\r\n\t}\r\n\r\n\tcopy( target?: Partial<EShapeTextOutlineLike> ) {\r\n\t\tconst children = this._parent.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tchildren[ i ].text.outline.copy( target );\r\n\t\t}\r\n\t}\r\n\r\n\tset( enable?: boolean, color?: number, alpha?: number, width?: number ) {\r\n\t\tconst children = this._parent.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tchildren[ i ].text.outline.set( enable, color, alpha, width );\r\n\t\t}\r\n\t}\r\n\r\n\tclone(): EShapeGroupTextOutlineEditor {\r\n\t\treturn new EShapeGroupTextOutlineEditor( this._parent );\r\n\t}\r\n\r\n\ttoObject(): EShapeTextOutlineLike {\r\n\t\tconst children = this._parent.children;\r\n\t\tif( 0 < children.length ) {\r\n\t\t\treturn children[ children.length - 1 ].text.outline.toObject();\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tenable: false,\r\n\t\t\tcolor: 0xffffff,\r\n\t\t\talpha: 1.0,\r\n\t\t\twidth: 1.0\r\n\t\t};\r\n\t}\r\n\r\n\tserialize( manager: EShapeResourceManagerSerialization ): number {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tdeserialize( target: number, manager: EShapeResourceManagerDeserialization ): void {\r\n\t\t//\r\n\t}\r\n}\r\n"]}