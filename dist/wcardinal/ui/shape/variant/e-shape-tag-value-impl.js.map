{"version":3,"file":"e-shape-tag-value-impl.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-tag-value-impl.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DDiagramSerializedTagValue } from \"../../d-diagram-serialized\";\r\nimport { EShapeResourceManagerDeserialization } from \"../e-shape-resource-manager-deserialization\";\r\nimport { EShapeResourceManagerSerialization } from \"../e-shape-resource-manager-serialization\";\r\nimport { EShapeTagValue, EShapeTagValueOrder, EShapeTagValueParent } from \"../e-shape-tag-value\";\r\nimport { EShapeTagValueRange } from \"../e-shape-tag-value-range\";\r\nimport { EShapeTagValueRangeImpl } from \"./e-shape-tag-value-range-impl\";\r\n\r\nconst INDEX_COMPARATOR = ( a: number, b: number ): number => {\r\n\treturn a - b;\r\n};\r\n\r\nexport class EShapeTagValueImpl implements EShapeTagValue {\r\n\tid: string;\r\n\tinitial: string;\r\n\tformat: string;\r\n\trange: EShapeTagValueRange;\r\n\tprotected _value: unknown;\r\n\tprotected _time: number;\r\n\r\n\tprotected _values: unknown[] | undefined;\r\n\tprotected _times: number[] | undefined;\r\n\tprotected _capacity: number;\r\n\tprotected _order: EShapeTagValueOrder;\r\n\r\n\tprotected _parent?: EShapeTagValueParent;\r\n\r\n\tformatter?: ( value: unknown ) => unknown;\r\n\r\n\tconstructor() {\r\n\t\tthis.id = \"\";\r\n\t\tthis.initial = \"\";\r\n\t\tthis.format = \"\";\r\n\t\tthis.range = new EShapeTagValueRangeImpl();\r\n\t\tthis._value = 0;\r\n\t\tthis._time = 0;\r\n\t\tthis._capacity = 0;\r\n\t\tthis._order = EShapeTagValueOrder.ASCENDING;\r\n\t}\r\n\r\n\tget parent(): EShapeTagValueParent | undefined {\r\n\t\treturn this._parent;\r\n\t}\r\n\r\n\tset parent( parent: EShapeTagValueParent | undefined ) {\r\n\t\tif( this._parent !== parent ) {\r\n\t\t\tthis._parent = parent;\r\n\t\t\tthis.range.parent = parent;\r\n\t\t}\r\n\t}\r\n\r\n\tget value(): unknown {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tset value( newValue: unknown ) {\r\n\t\tconst formatter = this.formatter;\r\n\t\tif( formatter != null ) {\r\n\t\t\tnewValue = formatter( newValue );\r\n\t\t}\r\n\r\n\t\tconst capacity = this._capacity;\r\n\t\tif( capacity <= 0 ) {\r\n\t\t\tif( this._value !== newValue ) {\r\n\t\t\t\tthis._value = newValue;\r\n\t\t\t\tconst parent = this.parent;\r\n\t\t\t\tif( parent != null ) {\r\n\t\t\t\t\tparent.isChanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet values = this._values;\r\n\t\t\tif( values == null ) {\r\n\t\t\t\tvalues = [];\r\n\t\t\t\tthis._values = values;\r\n\t\t\t}\r\n\r\n\t\t\t// Update the value\r\n\t\t\tthis._value = newValue;\r\n\r\n\t\t\t// Update the values\r\n\t\t\tconst order = this._order;\r\n\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\tvalues.push( newValue );\r\n\t\t\t} else {\r\n\t\t\t\tvalues.unshift( newValue );\r\n\t\t\t}\r\n\r\n\t\t\t// Remove the unnecessary values\r\n\t\t\tconst count = values.length - capacity;\r\n\t\t\tif( 0 < count ) {\r\n\t\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\t\tfor( let i = 0; i < count; ++i ) {\r\n\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalues.length = capacity;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Tell the parent it's changed\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif( parent != null ) {\r\n\t\t\t\tparent.isChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget nvalue(): number {\r\n\t\treturn this.range.normalize( this._value as number );\r\n\t}\r\n\r\n\tget values(): unknown[] {\r\n\t\tlet result = this._values;\r\n\t\tif( result == null ) {\r\n\t\t\tresult = [];\r\n\t\t\tthis._values = result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tset values( newValues: unknown[] ) {\r\n\t\tif( 0 < newValues.length ) {\r\n\t\t\tconst capacity = this._capacity;\r\n\t\t\tif( capacity <= 0 ) {\r\n\t\t\t\tlet newValue = newValues[ newValues.length - 1 ];\r\n\t\t\t\tconst formatter = this.formatter;\r\n\t\t\t\tif( formatter != null ) {\r\n\t\t\t\t\tnewValue = formatter( newValue );\r\n\t\t\t\t}\r\n\t\t\t\tif( this._value !== newValue ) {\r\n\t\t\t\t\tthis._value = newValue;\r\n\t\t\t\t\tconst parent = this.parent;\r\n\t\t\t\t\tif( parent != null ) {\r\n\t\t\t\t\t\tparent.isChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet values = this._values;\r\n\t\t\t\tif( values == null ) {\r\n\t\t\t\t\tvalues = [];\r\n\t\t\t\t\tthis._values = values;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst order = this._order;\r\n\t\t\t\tconst formatter = this.formatter;\r\n\t\t\t\tif( formatter != null ) {\r\n\t\t\t\t\t// Update the value\r\n\t\t\t\t\tthis._value = formatter( newValues[ newValues.length - 1 ] );\r\n\r\n\t\t\t\t\t// Update the values\r\n\t\t\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\t\t\tfor( let i = 0, imax = newValues.length; i < imax; ++i ) {\r\n\t\t\t\t\t\t\tvalues.push( formatter( newValues[ i ] ) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor( let i = 0, imax = newValues.length; i < imax; ++i ) {\r\n\t\t\t\t\t\t\tvalues.unshift( formatter( newValues[ i ] ) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Update the value\r\n\t\t\t\t\tthis._value = newValues[ newValues.length - 1 ];\r\n\r\n\t\t\t\t\t// Update the values\r\n\t\t\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\t\t\tfor( let i = 0, imax = newValues.length; i < imax; ++i ) {\r\n\t\t\t\t\t\t\tvalues.push( newValues[ i ] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor( let i = 0, imax = newValues.length; i < imax; ++i ) {\r\n\t\t\t\t\t\t\tvalues.unshift( newValues[ i ] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove the unnecessary values\r\n\t\t\t\tconst count = values.length - capacity;\r\n\t\t\t\tif( 0 < count ) {\r\n\t\t\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\t\t\tfor( let i = 0; i < count; ++i ) {\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalues.length = capacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Tell the parent it's changed\r\n\t\t\t\tconst parent = this.parent;\r\n\t\t\t\tif( parent != null ) {\r\n\t\t\t\t\tparent.isChanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget time(): number {\r\n\t\treturn this._time;\r\n\t}\r\n\r\n\tset time( newTime: number ) {\r\n\t\tconst capacity = this._capacity;\r\n\t\tif( capacity <= 0 ) {\r\n\t\t\tif( this._time !== newTime ) {\r\n\t\t\t\tthis._time = newTime;\r\n\t\t\t\tconst parent = this.parent;\r\n\t\t\t\tif( parent != null ) {\r\n\t\t\t\t\tparent.isChanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Update the times\r\n\t\t\tlet times = this._times;\r\n\t\t\tif( times == null ) {\r\n\t\t\t\ttimes = [];\r\n\t\t\t\tthis._times = times;\r\n\t\t\t}\r\n\r\n\t\t\t// Update the time\r\n\t\t\tthis._time = newTime;\r\n\r\n\t\t\t// Update the times\r\n\t\t\tconst order = this._order;\r\n\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\ttimes.push( newTime );\r\n\t\t\t} else {\r\n\t\t\t\ttimes.unshift( newTime );\r\n\t\t\t}\r\n\r\n\t\t\t// Remove the unnecessary times\r\n\t\t\tconst count = times.length - capacity;\r\n\t\t\tif( 0 < count ) {\r\n\t\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\t\tfor( let i = 0; i < count; ++i ) {\r\n\t\t\t\t\t\ttimes.shift();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttimes.length = capacity;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Tell the parent it's changed\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif( parent != null ) {\r\n\t\t\t\tparent.isChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget times(): number[] {\r\n\t\tlet result = this._times;\r\n\t\tif( result == null ) {\r\n\t\t\tresult = [];\r\n\t\t\tthis._times = result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tset times( newTimes: number[] ) {\r\n\t\tif( 0 < newTimes.length ) {\r\n\t\t\tconst capacity = this._capacity;\r\n\t\t\tif( capacity <= 0 ) {\r\n\t\t\t\tconst newTime = newTimes[ newTimes.length - 1 ];\r\n\t\t\t\tif( this._time !== newTime ) {\r\n\t\t\t\t\tthis._time = newTime;\r\n\t\t\t\t\tconst parent = this.parent;\r\n\t\t\t\t\tif( parent != null ) {\r\n\t\t\t\t\t\tparent.isChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Update the times\r\n\t\t\t\tlet times = this._times;\r\n\t\t\t\tif( times == null ) {\r\n\t\t\t\t\ttimes = [];\r\n\t\t\t\t\tthis._times = times;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update the value\r\n\t\t\t\tthis._time = newTimes[ newTimes.length - 1 ];\r\n\r\n\t\t\t\t//\r\n\t\t\t\tconst order = this._order;\r\n\t\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\t\tfor( let i = 0, imax = newTimes.length; i < imax; ++i ) {\r\n\t\t\t\t\t\ttimes.push( newTimes[ i ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor( let i = 0, imax = newTimes.length; i < imax; ++i ) {\r\n\t\t\t\t\t\ttimes.unshift( newTimes[ i ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\r\n\t\t\t\tconst count = times.length - capacity;\r\n\t\t\t\tif( 0 < count ) {\r\n\t\t\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\t\t\tfor( let i = 0; i < count; ++i ) {\r\n\t\t\t\t\t\t\ttimes.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttimes.length = capacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Tell the parent it's changed\r\n\t\t\t\tconst parent = this.parent;\r\n\t\t\t\tif( parent != null ) {\r\n\t\t\t\t\tparent.isChanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget capacity(): number {\r\n\t\treturn this._capacity;\r\n\t}\r\n\r\n\tset capacity( capacity: number ) {\r\n\t\tif( this._capacity < capacity ) {\r\n\t\t\tthis._capacity = capacity;\r\n\t\t} else if( capacity < this._capacity ) {\r\n\t\t\tthis._capacity = capacity;\r\n\r\n\t\t\tlet isChanged = false;\r\n\r\n\t\t\t// Values\r\n\t\t\tconst order = this._order;\r\n\t\t\tconst values = this._values;\r\n\t\t\tif( values != null ) {\r\n\t\t\t\tconst count = values.length - capacity;\r\n\t\t\t\tif( 0 < count ) {\r\n\t\t\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\t\t\tfor( let i = 0; i < count; ++i ) {\r\n\t\t\t\t\t\t\tvalues.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalues.length = capacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tisChanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Times\r\n\t\t\tconst times = this._times;\r\n\t\t\tif( times != null ) {\r\n\t\t\t\tconst count = times.length - capacity;\r\n\t\t\t\tif( 0 < count ) {\r\n\t\t\t\t\tif( order === EShapeTagValueOrder.ASCENDING ) {\r\n\t\t\t\t\t\tfor( let i = 0; i < count; ++i ) {\r\n\t\t\t\t\t\t\ttimes.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttimes.length = capacity;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tisChanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( isChanged ) {\r\n\t\t\t\tconst parent = this.parent;\r\n\t\t\t\tif( parent != null ) {\r\n\t\t\t\t\tparent.isChanged = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget order(): EShapeTagValueOrder {\r\n\t\treturn this._order;\r\n\t}\r\n\r\n\tset order( order: EShapeTagValueOrder ) {\r\n\t\tthis._order = order;\r\n\t}\r\n\r\n\tremove( index: number ): void {\r\n\t\tlet isChanged = false;\r\n\r\n\t\t// Values\r\n\t\tconst values = this._values;\r\n\t\tif( values != null ) {\r\n\t\t\tif( 0 <= index && index < values.length ) {\r\n\t\t\t\tvalues.splice( index, 1 );\r\n\t\t\t\tisChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Times\r\n\t\tconst times = this._times;\r\n\t\tif( times != null ) {\r\n\t\t\tif( 0 <= index && index < times.length ) {\r\n\t\t\t\ttimes.splice( index, 1 );\r\n\t\t\t\tisChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( isChanged ) {\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif( parent != null ) {\r\n\t\t\t\tparent.isChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremoveAll( indices: number[] ): void {\r\n\t\tlet isChanged = false;\r\n\r\n\t\tconst values = this._values;\r\n\t\tconst times = this._times;\r\n\t\tconst sorted = indices.slice(0).sort( INDEX_COMPARATOR );\r\n\t\tif( values != null ) {\r\n\t\t\tif( times != null ) {\r\n\t\t\t\tfor( let i = sorted.length - 1; 0 <= i; --i ) {\r\n\t\t\t\t\tconst index = sorted[ i ];\r\n\t\t\t\t\tif( 0 <= index ) {\r\n\t\t\t\t\t\tif( index < values.length ) {\r\n\t\t\t\t\t\t\tvalues.splice( index, 1 );\r\n\t\t\t\t\t\t\tisChanged = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif( index < times.length ) {\r\n\t\t\t\t\t\t\ttimes.splice( index, 1 );\r\n\t\t\t\t\t\t\tisChanged = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor( let i = sorted.length - 1; 0 <= i; --i ) {\r\n\t\t\t\t\tconst index = sorted[ i ];\r\n\t\t\t\t\tif( 0 <= index && index < values.length ) {\r\n\t\t\t\t\t\tvalues.splice( index, 1 );\r\n\t\t\t\t\t\tisChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( times != null ) {\r\n\t\t\t\tfor( let i = sorted.length - 1; 0 <= i; --i ) {\r\n\t\t\t\t\tconst index = sorted[ i ];\r\n\t\t\t\t\tif( 0 <= index && index < times.length ) {\r\n\t\t\t\t\t\ttimes.splice( index, 1 );\r\n\t\t\t\t\t\tisChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( isChanged ) {\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif( parent != null ) {\r\n\t\t\t\tparent.isChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclear(): void {\r\n\t\tlet isChanged = false;\r\n\r\n\t\t// Values\r\n\t\tconst values = this._values;\r\n\t\tif( values != null ) {\r\n\t\t\tvalues.length = 0;\r\n\t\t\tisChanged = true;\r\n\t\t}\r\n\r\n\t\t// Times\r\n\t\tconst times = this._times;\r\n\t\tif( times != null ) {\r\n\t\t\ttimes.length = 0;\r\n\t\t\tisChanged = true;\r\n\t\t}\r\n\r\n\t\t// Change flag\r\n\t\tif( isChanged ) {\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif( parent != null ) {\r\n\t\t\t\tparent.isChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This method does not copy the `#values` and `#times` for the performance.\r\n\t *\r\n\t * @param target a copy target\r\n\t */\r\n\tcopy( target: EShapeTagValue ): this {\r\n\t\tthis.id = target.id;\r\n\t\tthis.initial = target.initial;\r\n\t\tthis.format = target.format;\r\n\t\tthis.formatter = target.formatter;\r\n\t\tthis.range.copy( target.range );\r\n\t\tthis._value = target.value;\r\n\t\tthis._time = target.time;\r\n\t\tthis._capacity = target.capacity;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tserialize( manager: EShapeResourceManagerSerialization ): number {\r\n\t\tconst idSerialized = manager.add( this.id );\r\n\t\tconst initialSerialized = manager.add( this.initial );\r\n\t\tconst formatSerialized = manager.add( this.format.trim() );\r\n\t\tconst rangeSerialized = this.range.serialize( manager );\r\n\t\treturn manager.add(\r\n\t\t\t`[${idSerialized},${initialSerialized},${formatSerialized},${rangeSerialized},${this._capacity},${this._order}]`\r\n\t\t);\r\n\t}\r\n\r\n\tdeserialize( target: number, manager: EShapeResourceManagerDeserialization ): this {\r\n\t\tconst resources = manager.resources;\r\n\t\tif( 0 <= target && target < resources.length ) {\r\n\t\t\tlet parsed = manager.tagValues.get( target );\r\n\t\t\tif( parsed == null ) {\r\n\t\t\t\tparsed = JSON.parse( resources[ target ] ) as DDiagramSerializedTagValue;\r\n\t\t\t\tmanager.tagValues.set( target, parsed );\r\n\t\t\t}\r\n\t\t\tthis.id = resources[ parsed[ 0 ] ] || \"\";\r\n\t\t\tthis.initial = resources[ parsed[ 1 ] ] || \"\";\r\n\t\t\tthis.format = resources[ parsed[ 2 ] ] || \"\";\r\n\t\t\tthis.range.deserialize( parsed[ 3 ], manager );\r\n\t\t\tthis._capacity = parsed[ 4 ];\r\n\t\t\tthis._order = parsed[ 5 ];\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}