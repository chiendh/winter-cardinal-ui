{"version":3,"file":"e-shape-line-base.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-line-base.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { IPoint } from \"pixi.js\";\r\nimport { DDiagramSerializedItem } from \"../../d-diagram-serialized\";\r\nimport { EShapePoints } from \"../e-shape-points\";\r\nimport { EShapePointsStyle } from \"../e-shape-points-style\";\r\nimport { EShapeResourceManagerSerialization } from \"../e-shape-resource-manager-serialization\";\r\nimport { EShapeBase } from \"./e-shape-base\";\r\nimport {\r\n\tEShapeLineBasePoints, EShapeLineBasePointsHitTester, EShapeLineBasePointsTestRange,\r\n\tEShapeLineBasePointsToHitThreshold\r\n} from \"./e-shape-line-base-points\";\r\nimport { EShapePrimitive } from \"./e-shape-primitive\";\r\n\r\nexport abstract class EShapeLineBase extends EShapePrimitive {\r\n\tprotected static WORK_RANGE: [ number, number ] = [ 0, 0 ];\r\n\tabstract points: EShapeLineBasePoints;\r\n\tabstract clone(): EShapeLineBase;\r\n\r\n\tserialize( manager: EShapeResourceManagerSerialization ): DDiagramSerializedItem {\r\n\t\tconst result = super.serialize( manager );\r\n\t\tresult[ 15 ] = this.points.serialize( manager );\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected getPixelScale(): number {\r\n\t\tconst container = this.root.parent as any;\r\n\t\tif( container != null && container.getPixelScale != null ) {\r\n\t\t\treturn container.getPixelScale();\r\n\t\t}\r\n\t\treturn 1.0;\r\n\t}\r\n\r\n\tprotected getStrokeWidthScale( points: EShapePoints ): number {\r\n\t\tconst style = points.style;\r\n\t\tif( style & EShapePointsStyle.NON_EXPANDING_WIDTH ) {\r\n\t\t\tif( style & EShapePointsStyle.NON_SHRINKING_WIDTH ) {\r\n\t\t\t\treturn this.getPixelScale();\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.min( 1.0, this.getPixelScale() );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( style & EShapePointsStyle.NON_SHRINKING_WIDTH ) {\r\n\t\t\t\treturn Math.max( 1.0, this.getPixelScale() );\r\n\t\t\t} else {\r\n\t\t\t\treturn 1.0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toHitThreshold(\r\n\t\ttoThreshold: EShapeLineBasePointsToHitThreshold | null\r\n\t): number {\r\n\t\tconst stroke = this.stroke;\r\n\t\tconst strokeWidth = ( stroke.enable ? stroke.width : 0 );\r\n\t\tconst strokeScale = this.getStrokeWidthScale( this.points );\r\n\t\treturn ( toThreshold ?\r\n\t\t\ttoThreshold( strokeWidth, strokeScale ) :\r\n\t\t\tstrokeWidth * strokeScale * 0.5\r\n\t\t);\r\n\t}\r\n\r\n\tcontainsAbs( x: number, y: number, ax: number, ay: number ): boolean {\r\n\t\tconst points = this.points;\r\n\t\tconst threshold = this.toHitThreshold( null );\r\n\t\tif( this.containsAbsBBox( x, y, ax + threshold, ay + threshold ) ) {\r\n\t\t\treturn points.calcHitPointAbs(\r\n\t\t\t\tx, y,\r\n\t\t\t\tax, ay,\r\n\t\t\t\tthreshold,\r\n\t\t\t\tnull,\r\n\t\t\t\tthis.calcHitPointAbsHitTester,\r\n\t\t\t\tnull\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcalcHitPoint<RESULT>(\r\n\t\tpoint: IPoint,\r\n\t\ttoHitThreshold: EShapeLineBasePointsToHitThreshold | null,\r\n\t\trange: EShapeLineBasePointsTestRange | null,\r\n\t\ttester: EShapeLineBasePointsHitTester<RESULT>,\r\n\t\tresult: RESULT\r\n\t): boolean {\r\n\t\tconst points = this.points;\r\n\t\tconst threshold = this.toHitThreshold( toHitThreshold );\r\n\t\tconst rect = this.toLocalRect( point, EShapeBase.WORK_RECT );\r\n\t\tif( this.containsAbsBBox( rect.x, rect.y, rect.width + threshold, rect.height + threshold ) ) {\r\n\t\t\treturn points.calcHitPointAbs(\r\n\t\t\t\trect.x, rect.y,\r\n\t\t\t\trect.width, rect.height,\r\n\t\t\t\tthreshold,\r\n\t\t\t\trange,\r\n\t\t\t\ttester,\r\n\t\t\t\tresult\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected calcHitPointAbsHitTester(\r\n\t\tthis: unknown,\r\n\t\tx: number, y: number,\r\n\t\tp0x: number, p0y: number,\r\n\t\tp1x: number, p1y: number,\r\n\t\tindex: number,\r\n\t\tthreshold: number,\r\n\t\tresult: unknown\r\n\t): boolean {\r\n\t\t// (x, y) = p0 + (p1 - p0) * t where 0 <= t <= 1\r\n\t\t// d0 := p1 - p0\r\n\t\t// d1 := v - p0\r\n\t\t// (p0.x + d0.x * t - x)^2 + (p0.y + d0.y * t - y)^2\r\n\t\t// (d0.x t - d1.x)^2 + (d0.y t - d1.y)^2\r\n\t\t// (d0.x^2 + d0.y^2) t^2 - 2 (d0.x * d1.x + d0.y * d1.y) t + (d1.x^2 + d1.y^2)\r\n\t\t// a := dot( d0, d0 )\r\n\t\t// b := dot( d0, d1 )\r\n\t\t// c := dot( d1, d1 )\r\n\t\t// a t^2 - 2 b t + c = a (t - b / a)^2 + c - b * b / a\r\n\t\t// t0 = b / a  min = c - b * b / a\r\n\t\tconst d0x = p1x - p0x;\r\n\t\tconst d0y = p1y - p0y;\r\n\t\tconst d1x = x - p0x;\r\n\t\tconst d1y = y - p0y;\r\n\t\tconst a = d0x * d0x + d0y * d0y;\r\n\t\tconst b = d0x * d1x + d0y * d1y;\r\n\t\tconst c = d1x * d1x + d1y * d1y;\r\n\t\tif( 0.0001 < a ) {\r\n\t\t\tconst t = Math.max( 0, Math.min( 1, b / a ) );\r\n\t\t\tconst d = a * t * t - 2 * b * t + c;\r\n\t\t\tif( d < threshold * threshold ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n"]}