{"version":3,"file":"e-shape-line-points.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-line-points.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Matrix, Point } from \"pixi.js\";\r\nimport { toIndexOf } from \"../../util/to-index-of\";\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapePoints } from \"../e-shape-points\";\r\nimport { EShapePointsStyle } from \"../e-shape-points-style\";\r\nimport { EShapeResourceManagerSerialization } from \"../e-shape-resource-manager-serialization\";\r\nimport { EShapeLineBasePointsHitTester, EShapeLineBasePointsTestRange } from \"./e-shape-line-base-points\";\r\n\r\nexport class EShapeLinePoints implements EShapePoints {\r\n\tprotected static WORK_RANGE: [ number, number ] = [ 0, 0 ];\r\n\r\n\tprotected _parent: EShape;\r\n\tprotected _valuesBase?: number[];\r\n\tprotected _valuesBaseLength: number;\r\n\tprotected _values: number[];\r\n\tprotected _segments: number[];\r\n\treadonly position: Point;\r\n\tprotected _sizeBase: Point;\r\n\treadonly size: Point;\r\n\tprotected _id: number;\r\n\tprotected _style: EShapePointsStyle;\r\n\r\n\tconstructor(\r\n\t\tparent: EShape,\r\n\t\tpoints: number[],\r\n\t\tsegments: number[],\r\n\t\tstyle: EShapePointsStyle\r\n\t) {\r\n\t\t// Calculate the center\r\n\t\tconst values: number[] = [];\r\n\t\tlet minX = 0;\r\n\t\tlet maxX = 0;\r\n\t\tlet minY = 0;\r\n\t\tlet maxY = 0;\r\n\t\tconst pointsLength = points.length;\r\n\t\tif( 2 <= pointsLength ) {\r\n\t\t\tminX = maxX = points[ 0 ];\r\n\t\t\tminY = maxY = points[ 1 ];\r\n\t\t\tfor( let i = 2; i < pointsLength; i += 2 ) {\r\n\t\t\t\tconst x = points[ i ];\r\n\t\t\t\tconst y = points[ i + 1 ];\r\n\t\t\t\tminX = Math.min( minX, x );\r\n\t\t\t\tmaxX = Math.max( maxX, x );\r\n\t\t\t\tminY = Math.min( minY, y );\r\n\t\t\t\tmaxY = Math.max( maxY, y );\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst cx = (maxX + minX) * 0.5;\r\n\t\tconst cy = (maxY + minY) * 0.5;\r\n\t\tfor( let i = 0; i < pointsLength; i += 2 ) {\r\n\t\t\tconst x = points[ i + 0 ] - cx;\r\n\t\t\tconst y = points[ i + 1 ] - cy;\r\n\t\t\tvalues.push( x, y );\r\n\t\t}\r\n\t\tconst sx = maxX - minX;\r\n\t\tconst sy = maxY - minY;\r\n\r\n\t\t//\r\n\t\tthis._parent = parent;\r\n\t\tthis._valuesBase = undefined;\r\n\t\tthis._valuesBaseLength = values.length;\r\n\t\tthis._values = values;\r\n\t\tthis._segments = segments.slice( 0 );\r\n\t\tthis._sizeBase = new Point( sx, sy );\r\n\t\tthis.size = new Point( sx, sy );\r\n\t\tthis.position = new Point( cx, cy );\r\n\t\tthis._id = 0;\r\n\t\tthis._style = style!;\r\n\t}\r\n\r\n\tget length(): number {\r\n\t\treturn this._values.length >> 1;\r\n\t}\r\n\r\n\tprivate fitToParentSize() {\r\n\t\tconst size = this.size;\r\n\t\tconst parentSize = this._parent.size;\r\n\t\tconst ssx = parentSize.x;\r\n\t\tconst ssy = parentSize.y;\r\n\t\tconst threshold = 0.00001;\r\n\t\tif( threshold < Math.abs( ssx - size.x ) || threshold < Math.abs( ssy - size.y ) ) {\r\n\t\t\tsize.set( ssx, ssy );\r\n\r\n\t\t\tconst sizeBase = this._sizeBase;\r\n\t\t\tconst hasSizeBaseX = threshold < Math.abs( sizeBase.x );\r\n\t\t\tconst hasSizeBaseY = threshold < Math.abs( sizeBase.y );\r\n\t\t\tif( hasSizeBaseX || hasSizeBaseY ) {\r\n\t\t\t\tconst scaleX = ( hasSizeBaseX ? ssx / sizeBase.x : 1 );\r\n\t\t\t\tconst scaleY = ( hasSizeBaseY ? ssy / sizeBase.y : 1 );\r\n\r\n\t\t\t\tconst values = this._values;\r\n\t\t\t\tlet valuesBase = this._valuesBase;\r\n\t\t\t\tif( valuesBase == null ) {\r\n\t\t\t\t\tvaluesBase = [];\r\n\t\t\t\t\tthis._valuesBase = valuesBase;\r\n\r\n\t\t\t\t\tfor( let i = 0, imax = this.length << 1; i < imax; i += 2 ) {\r\n\t\t\t\t\t\tconst x = values[ i ];\r\n\t\t\t\t\t\tconst y = values[ i + 1 ];\r\n\t\t\t\t\t\tvalues[ i ] = x * scaleX;\r\n\t\t\t\t\t\tvalues[ i + 1 ] = y * scaleY;\r\n\t\t\t\t\t\tvaluesBase.push( x, y );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor( let i = 0, imax = this.length << 1; i < imax; i += 2 ) {\r\n\t\t\t\t\t\tvalues[ i ] = valuesBase[ i ] * scaleX;\r\n\t\t\t\t\t\tvalues[ i + 1 ] = valuesBase[ i + 1 ] * scaleY;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._id += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget id(): number {\r\n\t\tthis.fitToParentSize();\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tget values(): number[] {\r\n\t\tthis.fitToParentSize();\r\n\t\treturn this._values;\r\n\t}\r\n\r\n\tset values( values: number[] ) {\r\n\t\tthis.set( values, undefined, undefined );\r\n\t}\r\n\r\n\tget segments(): number[] {\r\n\t\treturn this._segments;\r\n\t}\r\n\r\n\t/**\r\n\t * Must be sorted in ascending order.\r\n\t */\r\n\tset segments( segments: number[] ) {\r\n\t\tthis.set( undefined, segments, undefined );\r\n\t}\r\n\r\n\tget style(): EShapePointsStyle {\r\n\t\treturn this._style;\r\n\t}\r\n\r\n\tset style( style: EShapePointsStyle ) {\r\n\t\tthis.set( undefined, undefined, style );\r\n\t}\r\n\r\n\tcopy( source: EShapePoints ): this {\r\n\t\treturn this.set( source.values, source.segments, source.style );\r\n\t}\r\n\r\n\tset( newValues?: number[], newSegments?: number[], newStyle?: EShapePointsStyle ): this {\r\n\t\tlet isDirty = false;\r\n\t\tlet isUpdated = false;\r\n\r\n\t\t// Values\r\n\t\tif( newValues != null ) {\r\n\t\t\tconst values = this._values;\r\n\t\t\tconst valuesBaseLength = this._valuesBaseLength;\r\n\t\t\tconst newValuesLength = newValues.length;\r\n\t\t\tconst iupdate = Math.min( newValuesLength, valuesBaseLength );\r\n\t\t\tthis._valuesBase = undefined;\r\n\t\t\tif( values !== newValues ) {\r\n\t\t\t\tfor( let i = 0; i < iupdate; ++i ) {\r\n\t\t\t\t\tvalues[ i ] = newValues[ i ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor( let i = iupdate; i < newValuesLength; ++i ) {\r\n\t\t\t\t\tvalues.push( newValues[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( valuesBaseLength !== newValuesLength ) {\r\n\t\t\t\t\tvalues.length = newValuesLength;\r\n\t\t\t\t\tthis._valuesBaseLength = newValuesLength;\r\n\t\t\t\t\tisDirty = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tisUpdated = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif( valuesBaseLength !== newValuesLength ) {\r\n\t\t\t\t\tthis._valuesBaseLength = newValuesLength;\r\n\t\t\t\t\tisDirty = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tisUpdated = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Segments\r\n\t\tif( newSegments != null ) {\r\n\t\t\tconst segments = this._segments;\r\n\t\t\tif( segments !== newSegments ) {\r\n\t\t\t\tconst newSegmentsLength = newSegments.length;\r\n\t\t\t\tconst iupdate = Math.min( segments.length, newSegmentsLength );\r\n\t\t\t\tfor( let i = 0; i < iupdate; ++i ) {\r\n\t\t\t\t\tsegments[ i ] = newSegments[ i ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor( let i = iupdate; i < newSegmentsLength; ++i ) {\r\n\t\t\t\t\tsegments.push( newSegments[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( segments.length !== newSegmentsLength ) {\r\n\t\t\t\t\tsegments.length = newSegmentsLength;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tisUpdated = true;\r\n\t\t}\r\n\r\n\t\t// Style\r\n\t\tif( newStyle != null ) {\r\n\t\t\tconst oldStyle = this._style;\r\n\t\t\tif( oldStyle !== newStyle ) {\r\n\t\t\t\tthis._style = newStyle;\r\n\t\t\t\tisUpdated = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//\r\n\t\tif( isDirty ) {\r\n\t\t\tthis._id += 1;\r\n\t\t\tconst parent = this._parent;\r\n\t\t\tconst uploaded = parent.uploaded;\r\n\t\t\tif( uploaded ) {\r\n\t\t\t\tif( uploaded.isCompatible( parent ) ) {\r\n\t\t\t\t\tparent.updateUploaded();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.uploaded = undefined;\r\n\t\t\t\t\tparent.toDirty();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tparent.updateUploaded();\r\n\t\t\t}\r\n\t\t} else if( isUpdated ) {\r\n\t\t\tthis._id += 1;\r\n\t\t\tthis._parent.updateUploaded();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone( parent: EShape ): EShapeLinePoints {\r\n\t\treturn new EShapeLinePoints( parent, this._values, this._segments, this._style );\r\n\t}\r\n\r\n\ttoPoints( transform: Matrix ): Point[] {\r\n\t\tconst result: Point[] = [];\r\n\t\tconst values = this.values;\r\n\t\tfor( let i = 0, imax = values.length; i < imax; i += 2 ) {\r\n\t\t\tconst point = new Point( values[ i + 0 ], values[ i + 1 ] );\r\n\t\t\tresult.push( transform.apply( point, point ) );\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tserialize( manager: EShapeResourceManagerSerialization ): number {\r\n\t\treturn manager.add( `[${JSON.stringify(this._values)},${JSON.stringify(this._segments)},${this._style}]` );\r\n\t}\r\n\r\n\tcalcHitPointAbs<RESULT>(\r\n\t\tx: number, y: number,\r\n\t\tax: number, ay: number,\r\n\t\tthreshold: number,\r\n\t\trange: EShapeLineBasePointsTestRange | null,\r\n\t\ttester: EShapeLineBasePointsHitTester<RESULT>,\r\n\t\tresult: RESULT\r\n\t): boolean {\r\n\t\tconst pointCount = this.length;\r\n\t\tif( 2 <= pointCount ) {\r\n\t\t\tconst pointValues = this._values;\r\n\t\t\tconst pointSegments = this._segments;\r\n\t\t\tlet istart = 0;\r\n\t\t\tlet iend = pointCount;\r\n\t\t\tif( range ) {\r\n\t\t\t\tconst rangeResult = range( x, y, threshold, pointValues, EShapeLinePoints.WORK_RANGE );\r\n\t\t\t\tistart = rangeResult[ 0 ];\r\n\t\t\t\tiend = rangeResult[ 1 ];\r\n\t\t\t}\r\n\t\t\tfor( let i = istart, imax = Math.min( iend, pointCount - 1 ), iv = 2 * istart; i < imax; i += 1, iv += 2 ) {\r\n\t\t\t\tif( toIndexOf( pointSegments, i + 1 ) < 0 ) {\r\n\t\t\t\t\tconst p0x = pointValues[ iv + 0 ];\r\n\t\t\t\t\tconst p0y = pointValues[ iv + 1 ];\r\n\t\t\t\t\tconst p1x = pointValues[ iv + 2 ];\r\n\t\t\t\t\tconst p1y = pointValues[ iv + 3 ];\r\n\t\t\t\t\tif( tester( x, y, p0x, p0y, p1x, p1y, i, threshold, result ) ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif( 2 < pointCount && pointCount <= iend && (this.style & EShapePointsStyle.CLOSED) ) {\r\n\t\t\t\tif( toIndexOf( pointSegments, 0 ) < 0 ) {\r\n\t\t\t\t\tconst i = pointCount - 1;\r\n\t\t\t\t\tconst iv = i << 1;\r\n\t\t\t\t\tconst p0x = pointValues[ iv + 0 ];\r\n\t\t\t\t\tconst p0y = pointValues[ iv + 1 ];\r\n\t\t\t\t\tconst p1x = pointValues[ 0 ];\r\n\t\t\t\t\tconst p1y = pointValues[ 1 ];\r\n\t\t\t\t\tif( tester( x, y, p0x, p0y, p1x, p1y, i, threshold, result ) ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n"]}