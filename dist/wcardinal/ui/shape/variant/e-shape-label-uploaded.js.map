{"version":3,"file":"e-shape-label-uploaded.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-label-uploaded.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAIH,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAE7D;IAAyC,uCAAkB;IAA3D;;IAmCA,CAAC;IAlCA,kCAAI,GAAJ,UAAM,KAAa;QAClB,iBAAM,IAAI,YAAE,KAAK,CAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC;QACrB,OAAO,IAAI,CAAC;IACb,CAAC;IAED,oCAAM,GAAN,UAAQ,KAAa;QACpB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,iBAAiB,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;QACxC,IAAI,CAAC,aAAa,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;QACpC,IAAI,CAAC,UAAU,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;IAClC,CAAC;IAED,+CAAiB,GAAjB,UAAmB,MAAoB,EAAE,KAAa;QACrD,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;QACrB,IAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;QACrB,IAAM,aAAa,GAAG,CAAE,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,CAAE,CAAC;QACvE,IAAM,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAE,KAAK,CAAE,CAAC;QAC1D,IAAM,kBAAkB,GAAG,CAAE,IAAI,CAAC,gBAAgB,KAAK,gBAAgB,CAAE,CAAC;QAC1E,IAAI,aAAa,IAAI,kBAAkB,EAAG;YACzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YAEzC,wDAAwD;YACxD,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;SACjC;IACF,CAAC;IAED,2CAAa,GAAb,UAAe,MAAoB,EAAE,KAAa;QACjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC;IACxC,CAAC;IACF,0BAAC;AAAD,CAAC,AAnCD,CAAyC,kBAAkB,GAmC1D","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeBuffer } from \"../e-shape-buffer\";\r\nimport { EShapeTextUploaded } from \"./e-shape-text-uploaded\";\r\n\r\nexport class EShapeLabelUploaded extends EShapeTextUploaded {\r\n\tinit( shape: EShape ): this {\r\n\t\tsuper.init( shape );\r\n\t\tthis.initText();\r\n\t\tthis.update( shape );\r\n\t\treturn this;\r\n\t}\r\n\r\n\tupdate( shape: EShape ): void {\r\n\t\tconst buffer = this.buffer;\r\n\t\tthis.updateLabelVertex( buffer, shape );\r\n\t\tthis.updateLabelUv( buffer, shape );\r\n\t\tthis.updateText( buffer, shape );\r\n\t}\r\n\r\n\tupdateLabelVertex( buffer: EShapeBuffer, shape: EShape ): void {\r\n\t\tconst size = shape.size;\r\n\t\tconst sizeX = size.x;\r\n\t\tconst sizeY = size.y;\r\n\t\tconst isSizeChanged = ( sizeX !== this.sizeX || sizeY !== this.sizeY );\r\n\t\tconst transformLocalId = this.toTransformLocalId( shape );\r\n\t\tconst isTransformChanged = ( this.transformLocalId !== transformLocalId );\r\n\t\tif( isSizeChanged || isTransformChanged ) {\r\n\t\t\tthis.sizeX = sizeX;\r\n\t\t\tthis.sizeY = sizeY;\r\n\t\t\tthis.transformLocalId = transformLocalId;\r\n\r\n\t\t\t// Invalidate the text layout to update the text layout.\r\n\t\t\tthis.textSpacingHorizontal = NaN;\r\n\t\t}\r\n\t}\r\n\r\n\tupdateLabelUv( buffer: EShapeBuffer, shape: EShape ): void {\r\n\t\tthis.texture = this.toTexture( shape );\r\n\t}\r\n}\r\n"]}