{"version":3,"file":"e-shape-text-uploaded.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-text-uploaded.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAKlC,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EACN,iBAAiB,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EACjE,iBAAiB,EAAE,iBAAiB,EACpC,MAAM,cAAc,CAAC;AAEtB;IAAiD,sCAAkB;IA4BlE,4BACC,MAAoB,EACpB,OAAe,EAAE,OAAe,EAChC,OAAe,EAAE,OAAe,EAChC,MAAc,EAAE,MAAc,EAC9B,eAAuB;QALxB,YAOC,kBAAO,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,eAAe,CAAE,SA4BlE;QA1BA,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,KAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;QAClC,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;QAC/B,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;QAC7B,KAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC;QAChC,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAC9B,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAC5B,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAC5B,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAC5B,KAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;QACjC,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;QAC/B,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,KAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;QACjC,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;QAC/B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QACvE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QACpE,KAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;;IAC/B,CAAC;IAED,qCAAQ,GAAR;QACC,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;QACpC,IAAI,CAAC,GAAG,MAAM,EAAG;YAChB,YAAY;YACZ,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACtC,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,iBAAiB,CAChB,MAAM,CAAC,SAAS,EAChB,OAAO,EACP,MAAM,CACN,CAAC;YAEF,UAAU;YACV,MAAM,CAAC,aAAa,EAAE,CAAC;YACvB,cAAc,CACb,MAAM,CAAC,OAAO,EACd,OAAO,EACP,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,cAAc,CACnB,CAAC;SACF;IACF,CAAC;IAED,yCAAY,GAAZ,UAAc,KAAa;QAC1B,IAAI,iBAAM,YAAY,YAAE,KAAK,CAAE,EAAG;YACjC,OAAO,CAAE,iBAAiB,CAAE,KAAK,CAAE,GAAG,iBAAiB,KAAK,IAAI,CAAC,eAAe,CAAE,CAAC;SACnF;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAES,uCAAU,GAApB,UAAsB,MAAoB,EAAE,KAAa;QACxD,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;QACpC,IAAI,CAAC,GAAG,MAAM,EAAG;YAChB,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;YACnC,IAAI,SAAS,IAAI,IAAI,EAAG;gBACvB,IAAI,CAAC,gBAAgB,CAAE,MAAM,EAAE,KAAK,EAAE,SAAS,CAAE,CAAC;gBAClD,IAAI,CAAC,mBAAmB,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;gBAC1C,IAAI,CAAC,qBAAqB,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;gBAC5C,IAAI,CAAC,cAAc,CAAE,MAAM,EAAE,KAAK,CAAE,CAAC;aACrC;SACD;IACF,CAAC;IAES,wCAAW,GAArB,UAAuB,MAAoB,EAAE,KAAa;QACzD,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5D,IAAI,CAAC,wBAAwB,CAAE,MAAM,EAAE,KAAK,EAAE,WAAW,CAAE,CAAC;IAC7D,CAAC;IAES,6CAAgB,GAA1B,UAA4B,MAAoB,EAAE,KAAa,EAAE,SAA0B;QAC1F,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,IAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAClD,IAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC9C,IAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QACpD,IAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChD,IAAM,qBAAqB,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACtD,IAAM,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAClD,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;QACrC,IAAM,qBAAqB,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QACtD,IAAM,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAClD,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnC,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC;QAClD,IAAM,sBAAsB,GAAG,IAAI,CAAC,oBAAoB,CAAE,WAAW,CAAE,CAAC;QAExE,IAAM,aAAa,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,IAAI,UAAU,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC;QACvF,IAAM,iBAAiB,GAAG,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAM,kBAAkB,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAM,kBAAkB,GAAG,CAAC,mBAAmB,KAAK,IAAI,CAAC,mBAAmB;YAC3E,iBAAiB,KAAK,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/C,IAAM,mBAAmB,GAAG,CAAC,oBAAoB,KAAK,IAAI,CAAC,oBAAoB;YAC9E,kBAAkB,KAAK,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACjD,IAAM,oBAAoB,GAAG,CAAC,qBAAqB,KAAK,IAAI,CAAC,qBAAqB;YACjF,mBAAmB,KAAK,IAAI,CAAC,mBAAmB;YAChD,qBAAqB,KAAK,IAAI,CAAC,qBAAqB;YACpD,mBAAmB,KAAK,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACnD,IAAM,sBAAsB,GAAG,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC;QACtE,IAAM,iBAAiB,GAAG,CAAE,IAAI,CAAC,YAAY,KAAK,YAAY,CAAE,CAAC;QACjE,IAAM,gBAAgB,GAAG,CAAE,WAAW,KAAK,IAAI,CAAC,WAAW;YAC1D,sBAAsB,KAAK,IAAI,CAAC,sBAAsB,CAAE,CAAC;QAE1D,IAAI,aAAa,IAAI,iBAAiB,IAAI,kBAAkB;YAC3D,kBAAkB,IAAI,mBAAmB,IAAI,oBAAoB;YACjE,sBAAsB,IAAI,iBAAiB,IAAI,gBAAgB,EAAG;YAClE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;YAC/C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YAC3C,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;YACjD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAC7C,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;YACnD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;YAC/C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;YACnD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;YAC/C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;YAErD,IAAI,iBAAiB,EAAG;gBACvB,uDAAuD;gBACvD,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;aACtB;YAED,iBAAiB;YACjB,MAAM,CAAC,cAAc,EAAE,CAAC;YACxB,MAAM,CAAC,SAAS,EAAE,CAAC;YACnB,IAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;YAC7B,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,YAAY,CAAE,CAAC,CAAE,CAAC;YACnE,eAAe,CACd,MAAM,CAAC,QAAQ,EACf,MAAM,CAAC,GAAG,EACV,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,eAAe,EACpB,CAAC,EACD,CAAC,EACD,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,EACT,QAAQ,EACR,SAAS,EACT,SAAS,EACT,mBAAmB,EACnB,iBAAiB,EACjB,oBAAoB,EACpB,kBAAkB,EAClB,qBAAqB,EACrB,mBAAmB,EACnB,aAAa,EACb,qBAAqB,EACrB,mBAAmB,EACnB,YAAY,EACZ,SAAS,EACT,IAAI,CAAC,YAAY,CAAE,WAAW,CAAE,EAChC,KAAK,CAAC,SAAS,CAAC,iBAAiB,CACjC,CAAC;SACF;IACF,CAAC;IAES,gDAAmB,GAA7B,UAA+B,MAAoB,EAAE,KAAa;QACjE,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAM,KAAK,GAAG,CAAE,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;QAChE,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,EAAG;YAC1D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,MAAM,CAAC,gBAAgB,EAAE,CAAC;YAE1B,UAAU,CACT,KAAK,EAAE,KAAK,EACZ,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,eAAe,EACpB,MAAM,CAAC,UAAU,CACjB,CAAC;SACF;IACF,CAAC;IAES,kDAAqB,GAA/B,UAAiC,MAAoB,EAAE,KAAa;QACnE,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,IAAM,KAAK,GAAG,CAAE,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;QACnE,IAAI,KAAK,KAAK,IAAI,CAAC,gBAAgB,IAAI,KAAK,KAAK,IAAI,CAAC,gBAAgB,EAAG;YACxE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,MAAM,CAAC,kBAAkB,EAAE,CAAC;YAE5B,UAAU,CACT,KAAK,EAAE,KAAK,EACZ,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,eAAe,EACpB,MAAM,CAAC,YAAY,CACnB,CAAC;SACF;IACF,CAAC;IAES,2CAAc,GAAxB,UAA0B,MAAoB,EAAE,KAAa;QAC5D,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;QACjC,IAAM,gBAAgB,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,UAAU,KAAK,IAAI,CAAC,UAAU,IAAI,gBAAgB,KAAK,IAAI,CAAC,gBAAgB,EAAG;YAClF,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YAEzC,MAAM,CAAC,WAAW,EAAE,CAAC;YACrB,aAAa,CACZ,MAAM,CAAC,KAAK,EACZ,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,IAAI,EACT,gBAAgB,EAChB,UAAU,EACV,IAAI,CAAC,eAAe,CACpB,CAAC;SACF;IACF,CAAC;IAED,sCAAS,GAAT,UAAW,OAAgC;QAC1C,iBAAM,SAAS,YAAE,OAAO,CAAE,CAAC;QAE3B,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,EAAG;YAC9B,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC,KAAK,CAAC;YACtD,IAAM,eAAe,GAAG,WAAW,CAAC,WAAW,CAAC;YAChD,IAAI,eAAe,KAAK,OAAO,CAAC,WAAW,EAAG;gBAC7C,OAAO,CAAC,WAAW,GAAG,eAAe,CAAC;gBACtC,OAAO,CAAC,IAAI,CAAE,WAAW,EAAE,IAAI,CAAC,eAAe,CAAE,CAAC;aAClD;SACD;IACF,CAAC;IACF,yBAAC;AAAD,CAAC,AAzRD,CAAiD,kBAAkB,GAyRlE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Texture } from \"pixi.js\";\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeBuffer } from \"../e-shape-buffer\";\r\nimport { EShapeBufferUnitBuilder } from \"../e-shape-buffer-unit-builder\";\r\nimport { EShapeTextAtlas } from \"../e-shape-text\";\r\nimport { EShapeUploadedBase } from \"../e-shape-uploaded\";\r\nimport { buildColor } from \"./build-color\";\r\nimport {\r\n\tbuildTextClipping, buildTextIndex, buildTextStep, buildTextVertex,\r\n\tTEXT_VERTEX_COUNT, toTextBufferCount\r\n} from \"./build-text\";\r\n\r\nexport abstract class EShapeTextUploaded extends EShapeUploadedBase {\r\n\tprotected textTexture: Texture | null;\r\n\tprotected textTextureTransformId: number;\r\n\tprotected textValue: string;\r\n\tprotected textFamily: string;\r\n\tprotected textSize: number;\r\n\tprotected textColor: number;\r\n\tprotected textAlpha: number;\r\n\tprotected textWeight: number;\r\n\tprotected textStyle: number;\r\n\tprotected textAlignHorizontal: number;\r\n\tprotected textAlignVertical: number;\r\n\tprotected textOffsetHorizontal: number;\r\n\tprotected textOffsetVertical: number;\r\n\tprotected textOutlineWidth: number;\r\n\tprotected textOutlineColor: number;\r\n\tprotected textOutlineAlpha: number;\r\n\tprotected textSpacingHorizontal: number;\r\n\tprotected textSpacingVertical: number;\r\n\tprotected textDirection: number;\r\n\tprotected textPaddingHorizontal: number;\r\n\tprotected textPaddingVertical: number;\r\n\tprotected textClipping: boolean;\r\n\tprotected textVertexOffset: number;\r\n\tprotected textIndexOffset: number;\r\n\tprotected textVertexCount: number;\r\n\tprotected textIndexCount: number;\r\n\r\n\tconstructor(\r\n\t\tbuffer: EShapeBuffer,\r\n\t\tvoffset: number, ioffset: number,\r\n\t\ttvcount: number, ticount: number,\r\n\t\tvcount: number, icount: number,\r\n\t\tantialiasWeight: number\r\n\t) {\r\n\t\tsuper( buffer, voffset, ioffset, vcount, icount, antialiasWeight );\r\n\r\n\t\tthis.textSize = NaN;\r\n\t\tthis.textFamily = \"auto\";\r\n\t\tthis.textValue = \"\";\r\n\t\tthis.textTexture = null;\r\n\t\tthis.textTextureTransformId = NaN;\r\n\t\tthis.textColor = NaN;\r\n\t\tthis.textAlpha = NaN;\r\n\t\tthis.textWeight = NaN;\r\n\t\tthis.textStyle = NaN;\r\n\t\tthis.textAlignHorizontal = NaN;\r\n\t\tthis.textAlignVertical = NaN;\r\n\t\tthis.textOffsetHorizontal = NaN;\r\n\t\tthis.textOffsetVertical = NaN;\r\n\t\tthis.textOutlineWidth = NaN;\r\n\t\tthis.textOutlineColor = NaN;\r\n\t\tthis.textOutlineAlpha = NaN;\r\n\t\tthis.textSpacingHorizontal = NaN;\r\n\t\tthis.textSpacingVertical = NaN;\r\n\t\tthis.textDirection = NaN;\r\n\t\tthis.textPaddingHorizontal = NaN;\r\n\t\tthis.textPaddingVertical = NaN;\r\n\t\tthis.textClipping = false;\r\n\t\tthis.textVertexOffset = this.vertexOffset + this.vertexCount - tvcount;\r\n\t\tthis.textIndexOffset = this.indexOffset + this.indexCount - ticount;\r\n\t\tthis.textVertexCount = tvcount;\r\n\t\tthis.textIndexCount = ticount;\r\n\t}\r\n\r\n\tinitText(): void {\r\n\t\tconst vcount = this.textVertexCount;\r\n\t\tif( 0 < vcount ) {\r\n\t\t\t// Clippings\r\n\t\t\tconst buffer = this.buffer;\r\n\t\t\tconst voffset = this.textVertexOffset;\r\n\t\t\tbuffer.updateClippings();\r\n\t\t\tbuildTextClipping(\r\n\t\t\t\tbuffer.clippings,\r\n\t\t\t\tvoffset,\r\n\t\t\t\tvcount\r\n\t\t\t);\r\n\r\n\t\t\t// Indices\r\n\t\t\tbuffer.updateIndices();\r\n\t\t\tbuildTextIndex(\r\n\t\t\t\tbuffer.indices,\r\n\t\t\t\tvoffset,\r\n\t\t\t\tthis.textIndexOffset,\r\n\t\t\t\tthis.textIndexCount\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tisCompatible( shape: EShape ): boolean {\r\n\t\tif( super.isCompatible( shape ) ) {\r\n\t\t\treturn ( toTextBufferCount( shape ) * TEXT_VERTEX_COUNT === this.textVertexCount );\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected updateText( buffer: EShapeBuffer, shape: EShape ) {\r\n\t\tconst vcount = this.textVertexCount;\r\n\t\tif( 0 < vcount ) {\r\n\t\t\tconst textAtlas = shape.text.atlas;\r\n\t\t\tif( textAtlas != null ) {\r\n\t\t\t\tthis.updateTextVertex( buffer, shape, textAtlas );\r\n\t\t\t\tthis.updateTextColorFill( buffer, shape );\r\n\t\t\t\tthis.updateTextColorStroke( buffer, shape );\r\n\t\t\t\tthis.updateTextStep( buffer, shape );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateColor( buffer: EShapeBuffer, shape: EShape ) {\r\n\t\tconst vertexCount = this.vertexCount - this.textVertexCount;\r\n\t\tthis.updateColorFillAndStroke( buffer, shape, vertexCount );\r\n\t}\r\n\r\n\tprotected updateTextVertex( buffer: EShapeBuffer, shape: EShape, textAtlas: EShapeTextAtlas ) {\r\n\t\tconst text = shape.text;\r\n\t\tconst textSize = text.size;\r\n\t\tconst textFamily = text.family;\r\n\t\tconst textValue = text.value;\r\n\t\tconst textStyle = text.style;\r\n\t\tconst textAlignHorizontal = text.align.horizontal;\r\n\t\tconst textAlignVertical = text.align.vertical;\r\n\t\tconst textOffsetHorizontal = text.offset.horizontal;\r\n\t\tconst textOffsetVertical = text.offset.vertical;\r\n\t\tconst textSpacingHorizontal = text.spacing.horizontal;\r\n\t\tconst textSpacingVertical = text.spacing.vertical;\r\n\t\tconst textDirection = text.direction;\r\n\t\tconst textPaddingHorizontal = text.padding.horizontal;\r\n\t\tconst textPaddingVertical = text.padding.vertical;\r\n\t\tconst textClipping = text.clipping;\r\n\t\tconst textTexture = text.texture || Texture.WHITE;\r\n\t\tconst textTextureTransformId = this.toTextureTransformId( textTexture );\r\n\r\n\t\tconst isCharChanged = (textValue !== this.textValue || textFamily !== this.textFamily);\r\n\t\tconst isCharSizeChanged = (textSize !== this.textSize);\r\n\t\tconst isCharStyleChanged = (textStyle !== this.textStyle);\r\n\t\tconst isCharAlignChanged = (textAlignHorizontal !== this.textAlignHorizontal ||\r\n\t\t\ttextAlignVertical !== this.textAlignVertical);\r\n\t\tconst isCharOffsetChanged = (textOffsetHorizontal !== this.textOffsetHorizontal ||\r\n\t\t\ttextOffsetVertical !== this.textOffsetVertical);\r\n\t\tconst isCharSpacingChanged = (textSpacingHorizontal !== this.textSpacingHorizontal ||\r\n\t\t\ttextSpacingVertical !== this.textSpacingVertical ||\r\n\t\t\ttextPaddingHorizontal !== this.textPaddingHorizontal ||\r\n\t\t\ttextPaddingVertical !== this.textPaddingVertical);\r\n\t\tconst isCharDirectionChanged = (textDirection !== this.textDirection);\r\n\t\tconst isClippingChanged = ( this.textClipping !== textClipping );\r\n\t\tconst isTextureChanged = ( textTexture !== this.textTexture ||\r\n\t\t\ttextTextureTransformId !== this.textTextureTransformId );\r\n\r\n\t\tif( isCharChanged || isCharSizeChanged || isCharStyleChanged ||\r\n\t\t\tisCharAlignChanged || isCharOffsetChanged || isCharSpacingChanged ||\r\n\t\t\tisCharDirectionChanged || isClippingChanged || isTextureChanged ) {\r\n\t\t\tthis.textSize = textSize;\r\n\t\t\tthis.textFamily = textFamily;\r\n\t\t\tthis.textValue = textValue;\r\n\t\t\tthis.textStyle = textStyle;\r\n\t\t\tthis.textAlignHorizontal = textAlignHorizontal;\r\n\t\t\tthis.textAlignVertical = textAlignVertical;\r\n\t\t\tthis.textOffsetHorizontal = textOffsetHorizontal;\r\n\t\t\tthis.textOffsetVertical = textOffsetVertical;\r\n\t\t\tthis.textSpacingHorizontal = textSpacingHorizontal;\r\n\t\t\tthis.textSpacingVertical = textSpacingVertical;\r\n\t\t\tthis.textDirection = textDirection;\r\n\t\t\tthis.textPaddingHorizontal = textPaddingHorizontal;\r\n\t\t\tthis.textPaddingVertical = textPaddingVertical;\r\n\t\t\tthis.textClipping = textClipping;\r\n\t\t\tthis.textTexture = textTexture;\r\n\t\t\tthis.textTextureTransformId = textTextureTransformId;\r\n\r\n\t\t\tif( isCharSizeChanged ) {\r\n\t\t\t\t// Invalidate the text weight to update the text steps.\r\n\t\t\t\tthis.textWeight = NaN;\r\n\t\t\t}\r\n\r\n\t\t\t// Vertices & UVs\r\n\t\t\tbuffer.updateVertices();\r\n\t\t\tbuffer.updateUvs();\r\n\t\t\tconst shapeSize = shape.size;\r\n\t\t\tconst textWorld = text.world = text.world || new Float32Array( 8 );\r\n\t\t\tbuildTextVertex(\r\n\t\t\t\tbuffer.vertices,\r\n\t\t\t\tbuffer.uvs,\r\n\t\t\t\tthis.textVertexOffset,\r\n\t\t\t\tthis.textVertexCount,\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tshapeSize.x,\r\n\t\t\t\tshapeSize.y,\r\n\t\t\t\ttextAtlas,\r\n\t\t\t\ttextSize,\r\n\t\t\t\ttextValue,\r\n\t\t\t\ttextStyle,\r\n\t\t\t\ttextAlignHorizontal,\r\n\t\t\t\ttextAlignVertical,\r\n\t\t\t\ttextOffsetHorizontal,\r\n\t\t\t\ttextOffsetVertical,\r\n\t\t\t\ttextSpacingHorizontal,\r\n\t\t\t\ttextSpacingVertical,\r\n\t\t\t\ttextDirection,\r\n\t\t\t\ttextPaddingHorizontal,\r\n\t\t\t\ttextPaddingVertical,\r\n\t\t\t\ttextClipping,\r\n\t\t\t\ttextWorld,\r\n\t\t\t\tthis.toTextureUvs( textTexture ),\r\n\t\t\t\tshape.transform.internalTransform\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateTextColorFill( buffer: EShapeBuffer, shape: EShape ) {\r\n\t\tconst text = shape.text;\r\n\t\tconst color = text.color;\r\n\t\tconst alpha = ( shape.visible && text.enable ? text.alpha : 0 );\r\n\t\tif( color !== this.textColor || alpha !== this.textAlpha ) {\r\n\t\t\tthis.textColor = color;\r\n\t\t\tthis.textAlpha = alpha;\r\n\t\t\tbuffer.updateColorFills();\r\n\r\n\t\t\tbuildColor(\r\n\t\t\t\tcolor, alpha,\r\n\t\t\t\tthis.textVertexOffset,\r\n\t\t\t\tthis.textVertexCount,\r\n\t\t\t\tbuffer.colorFills\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateTextColorStroke( buffer: EShapeBuffer, shape: EShape ) {\r\n\t\tconst text = shape.text;\r\n\t\tconst outline = text.outline;\r\n\t\tconst color = outline.color;\r\n\t\tconst alpha = ( shape.visible && text.enable ? outline.alpha : 0 );\r\n\t\tif( color !== this.textOutlineColor || alpha !== this.textOutlineAlpha ) {\r\n\t\t\tthis.textOutlineColor = color;\r\n\t\t\tthis.textOutlineAlpha = alpha;\r\n\t\t\tbuffer.updateColorStrokes();\r\n\r\n\t\t\tbuildColor(\r\n\t\t\t\tcolor, alpha,\r\n\t\t\t\tthis.textVertexOffset,\r\n\t\t\t\tthis.textVertexCount,\r\n\t\t\t\tbuffer.colorStrokes\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateTextStep( buffer: EShapeBuffer, shape: EShape ) {\r\n\t\tconst text = shape.text;\r\n\t\tconst textOutline = text.outline;\r\n\t\tconst textOutlineWidth = (textOutline.enable ? textOutline.width : 0);\r\n\t\tconst textWeight = text.weight;\r\n\t\tif( textWeight !== this.textWeight || textOutlineWidth !== this.textOutlineWidth ) {\r\n\t\t\tthis.textWeight = textWeight;\r\n\t\t\tthis.textOutlineWidth = textOutlineWidth;\r\n\r\n\t\t\tbuffer.updateSteps();\r\n\t\t\tbuildTextStep(\r\n\t\t\t\tbuffer.steps,\r\n\t\t\t\tthis.textVertexOffset,\r\n\t\t\t\tthis.textVertexCount,\r\n\t\t\t\ttext.atlas,\r\n\t\t\t\ttext.size,\r\n\t\t\t\ttextOutlineWidth,\r\n\t\t\t\ttextWeight,\r\n\t\t\t\tthis.antialiasWeight\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tbuildUnit( builder: EShapeBufferUnitBuilder ) {\r\n\t\tsuper.buildUnit( builder );\r\n\r\n\t\tif( 0 < this.textVertexCount ) {\r\n\t\t\tconst textTexture = this.textTexture || Texture.WHITE;\r\n\t\t\tconst textBaseTexture = textTexture.baseTexture;\r\n\t\t\tif( textBaseTexture !== builder.baseTexture ) {\r\n\t\t\t\tbuilder.baseTexture = textBaseTexture;\r\n\t\t\t\tbuilder.push( textTexture, this.textIndexOffset );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}