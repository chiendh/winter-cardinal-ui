{"version":3,"file":"to-step.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/to-step.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,IAAM,WAAW,GAA+B,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;AAEnE,MAAM,CAAC,IAAM,MAAM,GAAG,UACrB,IAAY,EACZ,WAAmB,EACnB,eAAuB,EACvB,MAAkC;IAElC,IAAM,IAAI,GAAW,OAAO,CAAC;IAC7B,IAAI,IAAI,GAAG,WAAW,EAAG;QACxB,IAAM,IAAI,GAAG,IAAI,GAAG,WAAW,CAAC;QAChC,IAAI,IAAI,GAAG,IAAI,EAAG;YACjB,IAAM,GAAG,GAAG,eAAe,GAAG,IAAI,CAAC;YACnC,IAAM,GAAG,GAAG,eAAe,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;YACrD,IAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,EAAE,CAAC,GAAG,WAAW,GAAG,IAAI,CAAE,CAAC;YACzD,MAAM,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;YAClB,MAAM,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;YAClB,MAAM,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;SAClB;aAAM;YACN,IAAM,GAAG,GAAG,eAAe,GAAG,IAAI,CAAC;YACnC,IAAM,GAAG,GAAG,eAAe,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;YACrD,IAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;YACrB,MAAM,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;YAClB,MAAM,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;YAClB,MAAM,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC;SAClB;KACD;SAAM;QACN,4BAA4B;QAC5B,IAAM,EAAE,GAAG,eAAe,GAAG,IAAI,CAAC,GAAG,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;QACpD,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC;QAChB,MAAM,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC;QACjB,MAAM,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC;KACjB;IACD,OAAO,MAAM,CAAC;AACf,CAAC,CAAC","sourcesContent":["export const STEP_VALUES: [ number, number, number ] = [ 0, 0, 0 ];\r\n\r\nexport const toStep = (\r\n\tsize: number,\r\n\tstrokeWidth: number,\r\n\tantialiasWeight: number,\r\n\tresult: [ number, number, number ]\r\n): [ number, number, number ] => {\r\n\tconst FMIN: number = 0.00001;\r\n\tif( FMIN < strokeWidth ) {\r\n\t\tconst dpc0 = size - strokeWidth;\r\n\t\tif( FMIN < dpc0 ) {\r\n\t\t\tconst pc0 = antialiasWeight / dpc0;\r\n\t\t\tconst pc1 = antialiasWeight / Math.max( FMIN, size );\r\n\t\t\tconst swc = 1 / Math.max( FMIN, 1 - strokeWidth / size );\r\n\t\t\tresult[ 0 ] = swc;\r\n\t\t\tresult[ 1 ] = pc0;\r\n\t\t\tresult[ 2 ] = pc1;\r\n\t\t} else {\r\n\t\t\tconst pc0 = antialiasWeight / FMIN;\r\n\t\t\tconst pc1 = antialiasWeight / Math.max( FMIN, size );\r\n\t\t\tconst swc = 1 / FMIN;\r\n\t\t\tresult[ 0 ] = swc;\r\n\t\t\tresult[ 1 ] = pc0;\r\n\t\t\tresult[ 2 ] = pc1;\r\n\t\t}\r\n\t} else {\r\n\t\t// Assumes strokeWidth === 0\r\n\t\tconst pc = antialiasWeight / Math.max( FMIN, size );\r\n\t\tresult[ 0 ] = 1;\r\n\t\tresult[ 1 ] = pc;\r\n\t\tresult[ 2 ] = pc;\r\n\t}\r\n\treturn result;\r\n};\r\n"]}