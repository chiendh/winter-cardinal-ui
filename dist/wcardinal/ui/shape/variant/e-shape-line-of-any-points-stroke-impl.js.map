{"version":3,"file":"e-shape-line-of-any-points-stroke-impl.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-line-of-any-points-stroke-impl.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAIH,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAM3C;IAMC,yCAAa,MAA6C;QACzD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,sBAAI,+CAAE;aAAN;YACC,OAAO,IAAI,CAAC,GAAG,CAAC;QACjB,CAAC;;;OAAA;IAED,sBAAI,kDAAK;aAAT;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;aAED,UAAW,KAA2B;YACrC,IAAI,CAAC,GAAG,CAAE,KAAK,EAAE,SAAS,CAAE,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAI,kDAAK;aAAT;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;aAED,UAAW,KAA2B;YACrC,IAAI,CAAC,GAAG,CAAE,SAAS,EAAE,KAAK,CAAE,CAAC;QAC9B,CAAC;;;OAJA;IAMD,6CAAG,GAAH,UAAK,KAA4B,EAAE,KAA4B;QAC9D,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAG;YAClD,SAAS,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB;QAED,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAG;YAClD,SAAS,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpB;QAED,IAAI,SAAS,EAAG;YACf,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;YACd,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;SAC9B;IACF,CAAC;IAED,kDAAQ,GAAR,UAAU,KAAa,EAAE,GAAW;QACnC,OAAO,UAAU,CAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAE,CAAC;IAC9C,CAAC;IAED,kDAAQ,GAAR,UAAU,KAAa,EAAE,GAAW;QACnC,OAAO,UAAU,CAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAE,CAAC;IAC9C,CAAC;IAED,uDAAa,GAAb;QACC,OAAO,QAAQ,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;IAChC,CAAC;IAED,uDAAa,GAAb;QACC,OAAO,QAAQ,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;IAChC,CAAC;IAED,iDAAO,GAAP;QACC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;IACf,CAAC;IACF,sCAAC;AAAD,CAAC,AAvED,IAuEC","sourcesContent":["/*\r\n * Copyright (C) 2020 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShapeLineOfAnyPointsStroke } from \"./e-shape-line-of-any-points-stroke\";\r\nimport { EShapeLineOfAnyValue } from \"./e-shape-line-of-any-value\";\r\nimport { isStatic } from \"./is-static\";\r\nimport { toComputed } from \"./to-computed\";\r\n\r\nexport interface EShapeLineOfAnyPointsStrokeImplParent {\r\n\tupdateUploaded(): void;\r\n}\r\n\r\nexport class EShapeLineOfAnyPointsStrokeImpl implements EShapeLineOfAnyPointsStroke {\r\n\tprotected _parent: EShapeLineOfAnyPointsStrokeImplParent;\r\n\tprotected _id: number;\r\n\tprotected _color: EShapeLineOfAnyValue;\r\n\tprotected _alpha: EShapeLineOfAnyValue;\r\n\r\n\tconstructor( parent: EShapeLineOfAnyPointsStrokeImplParent ) {\r\n\t\tthis._parent = parent;\r\n\t\tthis._id = 0;\r\n\t\tthis._color = null;\r\n\t\tthis._alpha = null;\r\n\t}\r\n\r\n\tget id(): number {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tget color(): EShapeLineOfAnyValue {\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tset color( color: EShapeLineOfAnyValue ) {\r\n\t\tthis.set( color, undefined );\r\n\t}\r\n\r\n\tget alpha(): EShapeLineOfAnyValue {\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tset alpha( alpha: EShapeLineOfAnyValue ) {\r\n\t\tthis.set( undefined, alpha );\r\n\t}\r\n\r\n\tset( color?: EShapeLineOfAnyValue, alpha?: EShapeLineOfAnyValue ): void {\r\n\t\tlet isChanged = false;\r\n\r\n\t\tif( color !== undefined && this._color !== color ) {\r\n\t\t\tisChanged = true;\r\n\t\t\tthis._color = color;\r\n\t\t}\r\n\r\n\t\tif( alpha !== undefined && this._alpha !== alpha ) {\r\n\t\t\tisChanged = true;\r\n\t\t\tthis._alpha = alpha;\r\n\t\t}\r\n\r\n\t\tif( isChanged ) {\r\n\t\t\tthis._id += 1;\r\n\t\t\tthis._parent.updateUploaded();\r\n\t\t}\r\n\t}\r\n\r\n\tgetColor( index: number, def: number ): number {\r\n\t\treturn toComputed( index, this._color, def );\r\n\t}\r\n\r\n\tgetAlpha( index: number, def: number ): number {\r\n\t\treturn toComputed( index, this._alpha, def );\r\n\t}\r\n\r\n\tisStaticColor(): boolean {\r\n\t\treturn isStatic( this._color );\r\n\t}\r\n\r\n\tisStaticAlpha(): boolean {\r\n\t\treturn isStatic( this._alpha );\r\n\t}\r\n\r\n\ttoDirty(): void {\r\n\t\tthis._id += 1;\r\n\t}\r\n}\r\n"]}