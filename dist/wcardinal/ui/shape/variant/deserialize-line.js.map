{"version":3,"file":"deserialize-line.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/deserialize-line.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAE7D,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAE5C,MAAM,CAAC,IAAM,eAAe,GAAG,UAC9B,IAA4B,EAAE,OAA6C;IAE3E,IAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;IACpC,IAAM,UAAU,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC;IAC9B,IAAI,CAAC,IAAI,UAAU,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,EAAG;QACtD,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAE,UAAU,CAAgD,CAAC;QAChG,IAAI,MAAM,IAAI,IAAI,EAAG;YACpB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAE,SAAS,CAAE,UAAU,CAAE,CAAoC,CAAC;YACjF,OAAO,CAAC,UAAU,CAAC,GAAG,CAAE,UAAU,EAAE,MAAM,CAAE,CAAC;SAC7C;QACD,IAAM,KAAK,GAAG,IAAI,UAAU,CAC3B,MAAM,CAAE,CAAC,CAAE,EACX,MAAM,CAAE,CAAC,CAAE,EACX,cAAc,CAAC,YAAY,EAC3B,MAAM,CAAE,CAAC,CAAE,CACX,CAAC;QACF,OAAO,kBAAkB,CAAC,WAAW,CAAE,IAAI,EAAE,OAAO,EAAE,KAAK,CAAE,CAAC;KAC9D;IACD,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DDiagramSerializedItem } from \"../../d-diagram-serialized\";\r\nimport { EShapeDefaults } from \"../e-shape-defaults\";\r\nimport { EShapeDeserializer } from \"../e-shape-deserializer\";\r\nimport { EShapeResourceManagerDeserialization } from \"../e-shape-resource-manager-deserialization\";\r\nimport { EShapeLine } from \"./e-shape-line\";\r\n\r\nexport const deserializeLine = (\r\n\titem: DDiagramSerializedItem, manager: EShapeResourceManagerDeserialization\r\n): Promise<EShapeLine> | EShapeLine | null => {\r\n\tconst resources = manager.resources;\r\n\tconst resourceId = item[ 15 ];\r\n\tif( 0 <= resourceId && resourceId < resources.length ) {\r\n\t\tlet parsed = manager.extensions.get( resourceId ) as [ number[], number[], number ] | undefined;\r\n\t\tif( parsed == null ) {\r\n\t\t\tparsed = JSON.parse( resources[ resourceId ] ) as [ number[], number[], number ];\r\n\t\t\tmanager.extensions.set( resourceId, parsed );\r\n\t\t}\r\n\t\tconst shape = new EShapeLine(\r\n\t\t\tparsed[ 0 ],\r\n\t\t\tparsed[ 1 ],\r\n\t\t\tEShapeDefaults.STROKE_WIDTH,\r\n\t\t\tparsed[ 2 ]\r\n\t\t);\r\n\t\treturn EShapeDeserializer.deserialize( item, manager, shape );\r\n\t}\r\n\treturn null;\r\n};\r\n"]}