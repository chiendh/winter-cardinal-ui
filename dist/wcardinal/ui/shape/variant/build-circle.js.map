{"version":3,"file":"build-circle.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/build-circle.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,KAAK,EAAc,MAAM,SAAS,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAEhD,MAAM,CAAC,IAAM,mBAAmB,GAAG,CAAC,CAAC;AACrC,MAAM,CAAC,IAAM,kBAAkB,GAAG,CAAC,CAAC;AACpC,MAAM,CAAC,IAAM,iBAAiB,GAAuB,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;AAC9D,IAAM,iBAAiB,GAAU,IAAI,KAAK,EAAE,CAAC;AAE7C,MAAM,CAAC,IAAM,mBAAmB,GAAG,UAClC,SAAuB,EACvB,OAAe;IAEf,IAAM,EAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACvB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IAEzB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IAEzB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IAEzB,SAAS,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IAEzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IAEzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IAEzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IAEzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IAEzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;IACzB,SAAS,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,CAAC,CAAC;AAC1B,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAC/B,OAAkC,EAClC,OAAe,EACf,OAAe;IAEf,IAAM,EAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACvB,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IAEjC,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IAEjC,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IAEjC,OAAO,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IAEjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IAEjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IAEjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IAEjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACjC,OAAO,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,OAAO,GAAG,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,iBAAiB,GAAG,UAChC,QAAsB,EACtB,OAAe,EACf,OAAe,EACf,OAAe,EACf,KAAa,EACb,KAAa,EACb,WAAmB,EACnB,WAAmB,EACnB,iBAAyB,EACzB,SAA6B;IAE7B,sCAAsC;IACtC,EAAE;IACF,qBAAqB;IACrB,oBAAoB;IACpB,qBAAqB;IACrB,oBAAoB;IACpB,qBAAqB;IACrB,oBAAoB;IACpB,EAAE;IACF,IAAM,IAAI,GAAG,iBAAiB,CAAC;IAC/B,IAAM,CAAC,GAAG,WAAW,GAAG,WAAW,CAAC;IACpC,IAAM,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,IAAM,EAAE,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,GAAG,OAAO,EAAE,CAAC,EAAE,GAAG,OAAO,CAAE,CAAC;IACzC,iBAAiB,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IACtC,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IAClB,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,GAAG,OAAO,CAAE,CAAC;IACvC,iBAAiB,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IACtC,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IAClB,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IAClB,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACnB,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACnB,IAAI,CAAC,GAAG,CAAE,OAAO,EAAE,OAAO,CAAE,CAAC;IAC7B,iBAAiB,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IACtC,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IAClB,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;IAClB,IAAM,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC1B,IAAM,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC1B,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACnB,IAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAEnB,WAAW;IACX,IAAM,EAAE,GAAG,OAAO,GAAG,CAAC,CAAC;IACvB,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC9B,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAE9B,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC9B,QAAQ,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAE9B,QAAQ,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC9B,QAAQ,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC9B,QAAQ,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC;IACzB,QAAQ,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC9B,QAAQ,CAAE,EAAE,GAAG,EAAE,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAE9B,SAAS,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;IAC5C,SAAS,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAC;AAC7C,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,eAAe,GAAG,UAC9B,KAAmB,EACnB,SAAuB,EACvB,OAAe,EACf,WAAmB,EACnB,eAAuB,EACvB,SAA6B;IAE7B,MAAM,CAAE,SAAS,CAAE,CAAC,CAAE,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,CAAE,CAAC;IACpE,IAAM,GAAG,GAAG,WAAW,CAAE,CAAC,CAAE,CAAC;IAC7B,IAAM,GAAG,GAAG,WAAW,CAAE,CAAC,CAAE,CAAC;IAC7B,IAAM,GAAG,GAAG,WAAW,CAAE,CAAC,CAAE,CAAC;IAE7B,MAAM,CAAE,SAAS,CAAE,CAAC,CAAE,EAAE,WAAW,EAAE,eAAe,EAAE,WAAW,CAAE,CAAC;IACpE,IAAM,GAAG,GAAG,WAAW,CAAE,CAAC,CAAE,CAAC;IAC7B,IAAM,GAAG,GAAG,WAAW,CAAE,CAAC,CAAE,CAAC;IAC7B,IAAM,GAAG,GAAG,WAAW,CAAE,CAAC,CAAE,CAAC;IAE7B,SAAS,CACR,KAAK,EAAE,SAAS,EAChB,OAAO,EAAE,mBAAmB,EAC5B,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAC5B,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,aAAa,GAAG,UAC5B,GAAiB,EACjB,OAAe,EACf,UAAsB;IAEtB,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;IACzB,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;IACzB,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;IACzB,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;IACzB,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;IACzB,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;IACzB,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;IACzB,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC;IAEzB,MAAM;IACN,IAAM,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC;IACxB,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACrB,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACrB,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IACpC,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IACpC,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IACrB,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,EAAE,CAAC;IAErB,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IACpC,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IACpC,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IACpC,GAAG,CAAE,GAAG,GAAI,CAAC,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IACpC,GAAG,CAAE,GAAG,GAAG,EAAE,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IACpC,GAAG,CAAE,GAAG,GAAG,EAAE,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IAEpC,GAAG,CAAE,GAAG,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC;IACrB,GAAG,CAAE,GAAG,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC;IACrB,GAAG,CAAE,GAAG,GAAG,EAAE,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IACpC,GAAG,CAAE,GAAG,GAAG,EAAE,CAAE,GAAG,GAAG,GAAG,CAAE,EAAE,GAAG,EAAE,CAAE,CAAC;IACpC,GAAG,CAAE,GAAG,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC;IACrB,GAAG,CAAE,GAAG,GAAG,EAAE,CAAE,GAAG,EAAE,CAAC;AACtB,CAAC,CAAC","sourcesContent":["import { Matrix, Point, TextureUvs } from \"pixi.js\";\r\nimport { buildStep } from \"./build-step\";\r\nimport { toLength } from \"./to-length\";\r\nimport { STEP_VALUES, toStep } from \"./to-step\";\r\n\r\nexport const CIRCLE_VERTEX_COUNT = 9;\r\nexport const CIRCLE_INDEX_COUNT = 8;\r\nexport const CIRCLE_WORLD_SIZE: [ number, number ] = [ 0, 0 ];\r\nconst CIRCLE_WORK_POINT: Point = new Point();\r\n\r\nexport const buildCircleClipping = (\r\n\tclippings: Float32Array,\r\n\tvoffset: number\r\n): void => {\r\n\tconst ic = voffset * 3;\r\n\tclippings[ ic +  0 ] = 1;\r\n\tclippings[ ic +  1 ] = 1;\r\n\tclippings[ ic +  2 ] = 1;\r\n\r\n\tclippings[ ic +  3 ] = 0;\r\n\tclippings[ ic +  4 ] = 1;\r\n\tclippings[ ic +  5 ] = 1;\r\n\r\n\tclippings[ ic +  6 ] = 1;\r\n\tclippings[ ic +  7 ] = 1;\r\n\tclippings[ ic +  8 ] = 1;\r\n\r\n\tclippings[ ic +  9 ] = 1;\r\n\tclippings[ ic + 10 ] = 0;\r\n\tclippings[ ic + 11 ] = 1;\r\n\r\n\tclippings[ ic + 12 ] = 0;\r\n\tclippings[ ic + 13 ] = 0;\r\n\tclippings[ ic + 14 ] = 1;\r\n\r\n\tclippings[ ic + 15 ] = 1;\r\n\tclippings[ ic + 16 ] = 0;\r\n\tclippings[ ic + 17 ] = 1;\r\n\r\n\tclippings[ ic + 18 ] = 1;\r\n\tclippings[ ic + 19 ] = 1;\r\n\tclippings[ ic + 20 ] = 1;\r\n\r\n\tclippings[ ic + 21 ] = 0;\r\n\tclippings[ ic + 22 ] = 1;\r\n\tclippings[ ic + 23 ] = 1;\r\n\r\n\tclippings[ ic + 24 ] = 1;\r\n\tclippings[ ic + 25 ] = 1;\r\n\tclippings[ ic + 26 ] = 1;\r\n};\r\n\r\nexport const buildCircleIndex = (\r\n\tindices: Uint16Array | Uint32Array,\r\n\tvoffset: number,\r\n\tioffset: number\r\n): void => {\r\n\tconst ii = ioffset * 3;\r\n\tindices[ ii +  0 ] = voffset + 0;\r\n\tindices[ ii +  1 ] = voffset + 1;\r\n\tindices[ ii +  2 ] = voffset + 3;\r\n\r\n\tindices[ ii +  3 ] = voffset + 1;\r\n\tindices[ ii +  4 ] = voffset + 4;\r\n\tindices[ ii +  5 ] = voffset + 3;\r\n\r\n\tindices[ ii +  6 ] = voffset + 1;\r\n\tindices[ ii +  7 ] = voffset + 2;\r\n\tindices[ ii +  8 ] = voffset + 4;\r\n\r\n\tindices[ ii +  9 ] = voffset + 2;\r\n\tindices[ ii + 10 ] = voffset + 5;\r\n\tindices[ ii + 11 ] = voffset + 4;\r\n\r\n\tindices[ ii + 12 ] = voffset + 3;\r\n\tindices[ ii + 13 ] = voffset + 4;\r\n\tindices[ ii + 14 ] = voffset + 6;\r\n\r\n\tindices[ ii + 15 ] = voffset + 4;\r\n\tindices[ ii + 16 ] = voffset + 7;\r\n\tindices[ ii + 17 ] = voffset + 6;\r\n\r\n\tindices[ ii + 18 ] = voffset + 4;\r\n\tindices[ ii + 19 ] = voffset + 5;\r\n\tindices[ ii + 20 ] = voffset + 7;\r\n\r\n\tindices[ ii + 21 ] = voffset + 5;\r\n\tindices[ ii + 22 ] = voffset + 8;\r\n\tindices[ ii + 23 ] = voffset + 7;\r\n};\r\n\r\nexport const buildCircleVertex = (\r\n\tvertices: Float32Array,\r\n\tvoffset: number,\r\n\toriginX: number,\r\n\toriginY: number,\r\n\tsizeX: number,\r\n\tsizeY: number,\r\n\tstrokeAlign: number,\r\n\tstrokeWidth: number,\r\n\tinternalTransform: Matrix,\r\n\tworldSize: [ number, number ]\r\n): void => {\r\n\t// Calculate the transformed positions\r\n\t//\r\n\t//  0       1       2\r\n\t// |-------|-------|\r\n\t// |3      |4      |5\r\n\t// |-------|-------|\r\n\t// |6      |7      |8\r\n\t// |-------|-------|\r\n\t//\r\n\tconst work = CIRCLE_WORK_POINT;\r\n\tconst s = strokeAlign * strokeWidth;\r\n\tconst sx = sizeX * 0.5 + (0 <= sizeX ? +s : -s);\r\n\tconst sy = sizeY * 0.5 + (0 <= sizeY ? +s : -s);\r\n\twork.set( -sx + originX, -sy + originY );\r\n\tinternalTransform.apply( work, work );\r\n\tconst x0 = work.x;\r\n\tconst y0 = work.y;\r\n\twork.set( 0 + originX, -sy + originY );\r\n\tinternalTransform.apply( work, work );\r\n\tconst x1 = work.x;\r\n\tconst y1 = work.y;\r\n\tconst dx = x1 - x0;\r\n\tconst dy = y1 - y0;\r\n\twork.set( originX, originY );\r\n\tinternalTransform.apply( work, work );\r\n\tconst x4 = work.x;\r\n\tconst y4 = work.y;\r\n\tconst x7 = x4 + (x4 - x1);\r\n\tconst y7 = y4 + (y4 - y1);\r\n\tconst x3 = x4 - dx;\r\n\tconst y3 = y4 - dy;\r\n\r\n\t// Vertices\r\n\tconst iv = voffset * 2;\r\n\tvertices[ iv +  0 ] = x0;\r\n\tvertices[ iv +  1 ] = y0;\r\n\tvertices[ iv +  2 ] = x1;\r\n\tvertices[ iv +  3 ] = y1;\r\n\tvertices[ iv +  4 ] = x1 + dx;\r\n\tvertices[ iv +  5 ] = y1 + dy;\r\n\r\n\tvertices[ iv +  6 ] = x3;\r\n\tvertices[ iv +  7 ] = y3;\r\n\tvertices[ iv +  8 ] = x4;\r\n\tvertices[ iv +  9 ] = y4;\r\n\tvertices[ iv + 10 ] = x4 + dx;\r\n\tvertices[ iv + 11 ] = y4 + dy;\r\n\r\n\tvertices[ iv + 12 ] = x7 - dx;\r\n\tvertices[ iv + 13 ] = y7 - dy;\r\n\tvertices[ iv + 14 ] = x7;\r\n\tvertices[ iv + 15 ] = y7;\r\n\tvertices[ iv + 16 ] = x7 + dx;\r\n\tvertices[ iv + 17 ] = y7 + dy;\r\n\r\n\tworldSize[ 0 ] = toLength( x0, y0, x1, y1 );\r\n\tworldSize[ 1 ] = toLength( x0, y0, x3, y3 );\r\n};\r\n\r\nexport const buildCircleStep = (\r\n\tsteps: Float32Array,\r\n\tclippings: Float32Array,\r\n\tvoffset: number,\r\n\tstrokeWidth: number,\r\n\tantialiasWeight: number,\r\n\tworldSize: [ number, number ]\r\n): void => {\r\n\ttoStep( worldSize[ 0 ], strokeWidth, antialiasWeight, STEP_VALUES );\r\n\tconst swx = STEP_VALUES[ 0 ];\r\n\tconst px0 = STEP_VALUES[ 1 ];\r\n\tconst px1 = STEP_VALUES[ 2 ];\r\n\r\n\ttoStep( worldSize[ 1 ], strokeWidth, antialiasWeight, STEP_VALUES );\r\n\tconst swy = STEP_VALUES[ 0 ];\r\n\tconst py0 = STEP_VALUES[ 1 ];\r\n\tconst py1 = STEP_VALUES[ 2 ];\r\n\r\n\tbuildStep(\r\n\t\tsteps, clippings,\r\n\t\tvoffset, CIRCLE_VERTEX_COUNT,\r\n\t\tswx, swy, px0, py0, px1, py1\r\n\t);\r\n};\r\n\r\nexport const buildCircleUv = (\r\n\tuvs: Float32Array,\r\n\tvoffset: number,\r\n\ttextureUvs: TextureUvs\r\n): void => {\r\n\tconst x0 = textureUvs.x0;\r\n\tconst x1 = textureUvs.x1;\r\n\tconst x2 = textureUvs.x2;\r\n\tconst x3 = textureUvs.x3;\r\n\tconst y0 = textureUvs.y0;\r\n\tconst y1 = textureUvs.y1;\r\n\tconst y2 = textureUvs.y2;\r\n\tconst y3 = textureUvs.y3;\r\n\r\n\t// UVs\r\n\tconst iuv = voffset * 2;\r\n\tuvs[ iuv +  0 ] = x0;\r\n\tuvs[ iuv +  1 ] = y0;\r\n\tuvs[ iuv +  2 ] = 0.5 * ( x0 + x1 );\r\n\tuvs[ iuv +  3 ] = 0.5 * ( y0 + y1 );\r\n\tuvs[ iuv +  4 ] = x1;\r\n\tuvs[ iuv +  5 ] = y1;\r\n\r\n\tuvs[ iuv +  6 ] = 0.5 * ( x0 + x3 );\r\n\tuvs[ iuv +  7 ] = 0.5 * ( y0 + y3 );\r\n\tuvs[ iuv +  8 ] = 0.5 * ( x0 + x2 );\r\n\tuvs[ iuv +  9 ] = 0.5 * ( y0 + y2 );\r\n\tuvs[ iuv + 10 ] = 0.5 * ( x1 + x2 );\r\n\tuvs[ iuv + 11 ] = 0.5 * ( y1 + y2 );\r\n\r\n\tuvs[ iuv + 12 ] = x3;\r\n\tuvs[ iuv + 13 ] = y3;\r\n\tuvs[ iuv + 14 ] = 0.5 * ( x3 + x2 );\r\n\tuvs[ iuv + 15 ] = 0.5 * ( y3 + y2 );\r\n\tuvs[ iuv + 16 ] = x2;\r\n\tuvs[ iuv + 17 ] = y2;\r\n};\r\n"]}