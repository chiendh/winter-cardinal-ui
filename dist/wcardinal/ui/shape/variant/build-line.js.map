{"version":3,"file":"build-line.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/build-line.ts"],"names":[],"mappings":"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","sourcesContent":["import { Matrix, Point, TextureUvs } from \"pixi.js\";\r\nimport { toIndexOf } from \"../../util/to-index-of\";\r\nimport { EShapePointsStyle } from \"../e-shape-points-style\";\r\nimport { toDash } from \"./to-dash\";\r\nimport { toLength } from \"./to-length\";\r\nimport { toScaleInvariant } from \"./to-scale-invariant\";\r\n\r\nconst LINE_FMIN: number = 0.00001;\r\nconst LINE_WORK_POINT: Point = new Point();\r\n\r\nexport const toLineVertexCount = ( pointCount: number ): number => {\r\n\treturn (Math.ceil( pointCount / 12 ) * 12) * 4 + 2;\r\n};\r\n\r\nexport const buildLineClipping = (\r\n\tclippings: Float32Array,\r\n\tvoffset: number,\r\n\tvcount: number,\r\n\tpointCount: number,\r\n\tpointsClosed: boolean\r\n): void => {\r\n\tlet ic = voffset * 3;\r\n\tif( 2 <= pointCount ) {\r\n\t\t// First\r\n\t\tif( ! pointsClosed ) {\r\n\t\t\tclippings[ ic +  0 ] = 1;\r\n\t\t\tclippings[ ic +  1 ] = 0;\r\n\t\t\tclippings[ ic +  2 ] = 3;\r\n\r\n\t\t\tclippings[ ic +  3 ] = 0;\r\n\t\t\tclippings[ ic +  4 ] = 1;\r\n\t\t\tclippings[ ic +  5 ] = 5;\r\n\t\t\tic += 6;\r\n\t\t}\r\n\r\n\t\t// Middle\r\n\t\tfor( let i = (pointsClosed ? 0 : 1), imax = pointCount - i; i < imax; ++i ) {\r\n\t\t\tclippings[ ic +  0 ] = 1;\r\n\t\t\tclippings[ ic +  1 ] = 0;\r\n\t\t\tclippings[ ic +  2 ] = 3;\r\n\r\n\t\t\tclippings[ ic +  3 ] = 0;\r\n\t\t\tclippings[ ic +  4 ] = 1;\r\n\t\t\tclippings[ ic +  5 ] = 5;\r\n\r\n\t\t\tclippings[ ic +  6 ] = 1;\r\n\t\t\tclippings[ ic +  7 ] = 0;\r\n\t\t\tclippings[ ic +  8 ] = 4;\r\n\r\n\t\t\tclippings[ ic +  9 ] = 0;\r\n\t\t\tclippings[ ic + 10 ] = 1;\r\n\t\t\tclippings[ ic + 11 ] = 6;\r\n\t\t\tic += 12;\r\n\t\t}\r\n\r\n\t\t// Last\r\n\t\tclippings[ ic + 0 ] = 1;\r\n\t\tclippings[ ic + 1 ] = 0;\r\n\t\tclippings[ ic + 2 ] = 3;\r\n\r\n\t\tclippings[ ic + 3 ] = 0;\r\n\t\tclippings[ ic + 4 ] = 1;\r\n\t\tclippings[ ic + 5 ] = 5;\r\n\t\tic += 6;\r\n\t}\r\n\r\n\t// Fill the rest\r\n\tfor( const icmax = (voffset + vcount) * 3; ic < icmax; ic += 3 ) {\r\n\t\tclippings[ ic + 0 ] = 0;\r\n\t\tclippings[ ic + 1 ] = 0;\r\n\t\tclippings[ ic + 2 ] = 0;\r\n\t}\r\n};\r\n\r\nexport const buildLineIndex = (\r\n\tindices: Uint16Array | Uint32Array,\r\n\tvoffset: number,\r\n\tioffset: number,\r\n\ticount: number\r\n): void => {\r\n\tfor( let ii = ioffset * 3, iimax = (ioffset + icount) * 3, io = voffset; ii < iimax; ii += 6, io += 2 ) {\r\n\t\tindices[ ii + 0 ] = io + 0;\r\n\t\tindices[ ii + 1 ] = io + 2;\r\n\t\tindices[ ii + 2 ] = io + 1;\r\n\t\tindices[ ii + 3 ] = io + 1;\r\n\t\tindices[ ii + 4 ] = io + 2;\r\n\t\tindices[ ii + 5 ] = io + 3;\r\n\t}\r\n};\r\n\r\nexport const buildLineUv = (\r\n\tuvs: Float32Array,\r\n\tcolorFills: Float32Array,\r\n\tvoffset: number,\r\n\tvcount: number,\r\n\tpointCount: number,\r\n\tpointsClosed: boolean,\r\n\ttextureUvs: TextureUvs,\r\n\tlength: number\r\n): void => {\r\n\tlet iuv = voffset << 1;\r\n\tif( 2 <= pointCount ) {\r\n\t\tconst x0 = textureUvs.x0;\r\n\t\tconst x1 = textureUvs.x1;\r\n\t\tconst x2 = textureUvs.x2;\r\n\t\tconst x3 = textureUvs.x3;\r\n\t\tconst y0 = textureUvs.y0;\r\n\t\tconst y1 = textureUvs.y1;\r\n\t\tconst y2 = textureUvs.y2;\r\n\t\tconst y3 = textureUvs.y3;\r\n\r\n\t\tconst dx01 = x1 - x0;\r\n\t\tconst dy01 = y1 - y0;\r\n\t\tconst dx32 = x2 - x3;\r\n\t\tconst dy32 = y2 - y3;\r\n\r\n\t\t// Uvs\r\n\t\tlet icf = voffset << 2;\r\n\t\tconst lengthInverse = 1 / Math.max( LINE_FMIN, length );\r\n\t\tlet r = 0;\r\n\r\n\t\t// UV: First\r\n\t\tif( ! pointsClosed ) {\r\n\t\t\tr = colorFills[ icf ] * lengthInverse;\r\n\t\t\tuvs[ iuv + 0 ] = x0 + r * dx01;\r\n\t\t\tuvs[ iuv + 1 ] = y0 + r * dy01;\r\n\t\t\tuvs[ iuv + 2 ] = x3 + r * dx32;\r\n\t\t\tuvs[ iuv + 3 ] = y3 + r * dy32;\r\n\t\t\tiuv += 4;\r\n\t\t\ticf += 8;\r\n\t\t}\r\n\r\n\t\t// UV: Middle\r\n\t\tfor( let i = (pointsClosed ? 0 : 1), imax = pointCount - i; i < imax; ++i ) {\r\n\t\t\tr = colorFills[ icf ] * lengthInverse;\r\n\t\t\tuvs[ iuv + 0 ] = x0 + r * dx01;\r\n\t\t\tuvs[ iuv + 1 ] = y0 + r * dy01;\r\n\t\t\tuvs[ iuv + 2 ] = x3 + r * dx32;\r\n\t\t\tuvs[ iuv + 3 ] = y3 + r * dy32;\r\n\t\t\tiuv += 4;\r\n\t\t\ticf += 8;\r\n\r\n\t\t\tr = colorFills[ icf ] * lengthInverse;\r\n\t\t\tuvs[ iuv + 0 ] = x0 + r * dx01;\r\n\t\t\tuvs[ iuv + 1 ] = y0 + r * dy01;\r\n\t\t\tuvs[ iuv + 2 ] = x3 + r * dx32;\r\n\t\t\tuvs[ iuv + 3 ] = y3 + r * dy32;\r\n\t\t\tiuv += 4;\r\n\t\t\ticf += 8;\r\n\t\t}\r\n\r\n\t\t// UV: Last\r\n\t\tr = colorFills[ icf ] * lengthInverse;\r\n\t\tuvs[ iuv + 0 ] = x0 + r * dx01;\r\n\t\tuvs[ iuv + 1 ] = y0 + r * dy01;\r\n\t\tuvs[ iuv + 2 ] = x3 + r * dx32;\r\n\t\tuvs[ iuv + 3 ] = y3 + r * dy32;\r\n\t\tiuv += 4;\r\n\t}\r\n\r\n\t// Fill the rest\r\n\tfor( const iuvmax = ((voffset + vcount) << 1); iuv < iuvmax; iuv += 2 ) {\r\n\t\tuvs[ iuv + 0 ] = 0;\r\n\t\tuvs[ iuv + 1 ] = 0;\r\n\t}\r\n};\r\n\r\nexport const buildLineVertexStepAndColorFill = (\r\n\tvertices: Float32Array,\r\n\tsteps: Float32Array,\r\n\tcolorFills: Float32Array,\r\n\tvoffset: number,\r\n\tvcount: number,\r\n\tpointCount: number,\r\n\tpointsClosed: boolean,\r\n\tpointValues: number[],\r\n\tpointSegments: number[],\r\n\tpointsStyle: EShapePointsStyle,\r\n\tstrokeWidth: number,\r\n\tinternalTransform: Matrix\r\n): number => {\r\n\tlet iv = voffset << 1;\r\n\tlet is = voffset * 6;\r\n\tlet icf = voffset << 2;\r\n\tlet lmax = 0;\r\n\tlet px = 0;\r\n\tlet py = 0;\r\n\tif( 2 <= pointCount ) {\r\n\t\tconst scaleInvariant = toScaleInvariant( pointsStyle );\r\n\r\n\t\t//\r\n\t\tlet l = 0;\r\n\t\tlet lprev = 0;\r\n\t\tlet lnext = 0;\r\n\t\tlet llop = 0;\r\n\t\tlet llo = 0;\r\n\t\tlet pprevx = 0;\r\n\t\tlet pprevy = 0;\r\n\t\tlet pnextx = 0;\r\n\t\tlet pnexty = 0;\r\n\t\tlet pseg = false;\r\n\t\tlet psegnext = false;\r\n\t\tlet icfprev = icf;\r\n\t\tlet loffset = 0;\r\n\r\n\t\t//\r\n\t\tconst a  = internalTransform.a;\r\n\t\tconst b  = internalTransform.b;\r\n\t\tconst c  = internalTransform.c;\r\n\t\tconst d  = internalTransform.d;\r\n\t\tconst tx = internalTransform.tx;\r\n\t\tconst ty = internalTransform.ty;\r\n\r\n\t\t// First point\r\n\t\tconst pv0 = pointValues[ 0 ];\r\n\t\tconst pv1 = pointValues[ 1 ];\r\n\t\tconst pfirstx = a * pv0 + c * pv1 + tx;\r\n\t\tconst pfirsty = b * pv0 + d * pv1 + ty;\r\n\t\tconst psegfirst = ( 0 <= toIndexOf( pointSegments, 0 ) );\r\n\r\n\t\t// Last point\r\n\t\tconst lastIndex = (pointCount - 1) << 1;\r\n\t\tconst pvl0 = pointValues[ lastIndex + 0 ];\r\n\t\tconst pvl1 = pointValues[ lastIndex + 1 ];\r\n\t\tconst plastx = a * pvl0 + c * pvl1 + tx;\r\n\t\tconst plasty = b * pvl0 + d * pvl1 + ty;\r\n\t\tconst pseglast = ( 0 <= toIndexOf( pointSegments, pointCount - 1 ) );\r\n\r\n\t\t// Second point\r\n\t\tlet psecondx = plastx;\r\n\t\tlet psecondy = plasty;\r\n\t\tlet psegsecond = pseglast;\r\n\t\tif( 2 < pointCount ) {\r\n\t\t\tconst pv2 = pointValues[ 2 ];\r\n\t\t\tconst pv3 = pointValues[ 3 ];\r\n\t\t\tpsecondx = a * pv2 + c * pv3 + tx;\r\n\t\t\tpsecondy = b * pv2 + d * pv3 + ty;\r\n\t\t\tpsegsecond = ( 0 <= toIndexOf( pointSegments, 1 ) );\r\n\t\t}\r\n\r\n\t\t// First segment\r\n\t\tif( pointsClosed ) {\r\n\t\t\tpx = plastx;\r\n\t\t\tpy = plasty;\r\n\t\t\tpnextx = pfirstx;\r\n\t\t\tpnexty = pfirsty;\r\n\t\t\tpseg = pseglast;\r\n\t\t\tpsegnext = psegfirst;\r\n\t\t} else {\r\n\t\t\tpprevx = pfirstx - (psecondx - pfirstx);\r\n\t\t\tpprevy = pfirsty - (psecondy - pfirsty);\r\n\t\t\tpx = pfirstx;\r\n\t\t\tpy = pfirsty;\r\n\t\t\tpnextx = psecondx;\r\n\t\t\tpnexty = psecondy;\r\n\t\t\tpseg = psegfirst;\r\n\t\t\tpsegnext = psegsecond;\r\n\t\t\tlnext += toLength( px, py, pnextx, pnexty );\r\n\r\n\t\t\t//\r\n\t\t\tvertices[ iv + 0 ] = px;\r\n\t\t\tvertices[ iv + 1 ] = py;\r\n\t\t\tvertices[ iv + 2 ] = px;\r\n\t\t\tvertices[ iv + 3 ] = py;\r\n\t\t\tsteps[ is +  0 ] = strokeWidth;\r\n\t\t\tsteps[ is +  1 ] = scaleInvariant;\r\n\t\t\tsteps[ is +  2 ] = pprevx;\r\n\t\t\tsteps[ is +  3 ] = pprevy;\r\n\t\t\tsteps[ is +  4 ] = pnextx;\r\n\t\t\tsteps[ is +  5 ] = pnexty;\r\n\t\t\tsteps[ is +  6 ] = strokeWidth;\r\n\t\t\tsteps[ is +  7 ] = scaleInvariant;\r\n\t\t\tsteps[ is +  8 ] = pprevx;\r\n\t\t\tsteps[ is +  9 ] = pprevy;\r\n\t\t\tsteps[ is + 10 ] = pnextx;\r\n\t\t\tsteps[ is + 11 ] = pnexty;\r\n\t\t\tcolorFills[ icf + 0 ] = llo;\r\n\t\t\tcolorFills[ icf + 4 ] = llo;\r\n\t\t\tiv += 4;\r\n\t\t\tis += 12;\r\n\t\t\ticf += 8;\r\n\t\t}\r\n\r\n\t\t// Middle segments\r\n\t\tfor( let i = ( pointsClosed ? 0 : 1 ), imax = pointCount - i; i < imax; ++i ) {\r\n\t\t\tpprevx = px;\r\n\t\t\tpprevy = py;\r\n\t\t\tpx = pnextx;\r\n\t\t\tpy = pnexty;\r\n\t\t\tpseg = psegnext;\r\n\t\t\tif( i === pointCount - 2 ) {\r\n\t\t\t\tpnextx = plastx;\r\n\t\t\t\tpnexty = plasty;\r\n\t\t\t\tpsegnext = pseglast;\r\n\t\t\t} else if( i === 0 ) {\r\n\t\t\t\tpnextx = psecondx;\r\n\t\t\t\tpnexty = psecondy;\r\n\t\t\t\tpsegnext = psegsecond;\r\n\t\t\t} else if( i < pointCount - 1 ) {\r\n\t\t\t\tconst nextIndex = (i + 1) << 1;\r\n\t\t\t\tconst pvn0 = pointValues[ nextIndex + 0 ];\r\n\t\t\t\tconst pvn1 = pointValues[ nextIndex + 1 ];\r\n\t\t\t\tpnextx = a * pvn0 + c * pvn1 + tx;\r\n\t\t\t\tpnexty = b * pvn0 + d * pvn1 + ty;\r\n\t\t\t\tpsegnext = ( 0 <= toIndexOf( pointSegments, i + 1 ) );\r\n\t\t\t} else {\r\n\t\t\t\tpnextx = pfirstx;\r\n\t\t\t\tpnexty = pfirsty;\r\n\t\t\t\tpsegnext = psegfirst;\r\n\t\t\t}\r\n\t\t\tlprev = l;\r\n\t\t\tl = lnext;\r\n\t\t\tlnext += toLength( px, py, pnextx, pnexty );\r\n\r\n\t\t\tlet pnextxn = pnextx;\r\n\t\t\tlet pnextyn = pnexty;\r\n\t\t\tlet loffsetprev = loffset;\r\n\t\t\tif( pseg ) {\r\n\t\t\t\tpprevx = px - (pnextx - px);\r\n\t\t\t\tpprevy = py - (pnexty - py);\r\n\r\n\t\t\t\tlmax = Math.max( lmax, llo );\r\n\r\n\t\t\t\tllop = lprev - loffset;\r\n\t\t\t\tconst dash = toDash( llop, strokeWidth, pointsStyle, LINE_WORK_POINT );\r\n\t\t\t\tconst dash0 = dash.x;\r\n\t\t\t\tconst dash1 = dash.y;\r\n\t\t\t\tfor( let j = icfprev; j < icf + 8; j += 4 ) {\r\n\t\t\t\t\tcolorFills[ j + 1 ] = dash0;\r\n\t\t\t\t\tcolorFills[ j + 2 ] = dash1;\r\n\t\t\t\t\tcolorFills[ j + 3 ] = llop;\r\n\t\t\t\t}\r\n\t\t\t\ticfprev = icf + 8;\r\n\t\t\t\tloffsetprev = loffset;\r\n\t\t\t\tloffset = l;\r\n\t\t\t} else if( psegnext ) {\r\n\t\t\t\tpnextxn = px + (px - pprevx);\r\n\t\t\t\tpnextyn = py + (py - pprevy);\r\n\t\t\t}\r\n\r\n\t\t\t// Vertices\r\n\t\t\tvertices[ iv + 0 ] = px;\r\n\t\t\tvertices[ iv + 1 ] = py;\r\n\t\t\tvertices[ iv + 2 ] = px;\r\n\t\t\tvertices[ iv + 3 ] = py;\r\n\t\t\tsteps[ is +  0 ] = strokeWidth;\r\n\t\t\tsteps[ is +  1 ] = scaleInvariant;\r\n\t\t\tsteps[ is +  2 ] = pprevx;\r\n\t\t\tsteps[ is +  3 ] = pprevy;\r\n\t\t\tsteps[ is +  4 ] = pnextxn;\r\n\t\t\tsteps[ is +  5 ] = pnextyn;\r\n\t\t\tsteps[ is +  6 ] = strokeWidth;\r\n\t\t\tsteps[ is +  7 ] = scaleInvariant;\r\n\t\t\tsteps[ is +  8 ] = pprevx;\r\n\t\t\tsteps[ is +  9 ] = pprevy;\r\n\t\t\tsteps[ is + 10 ] = pnextxn;\r\n\t\t\tsteps[ is + 11 ] = pnextyn;\r\n\t\t\tllop = l - loffsetprev;\r\n\t\t\tcolorFills[ icf + 0 ] = llop;\r\n\t\t\tcolorFills[ icf + 4 ] = llop;\r\n\t\t\tiv += 4;\r\n\t\t\tis += 12;\r\n\t\t\ticf += 8;\r\n\r\n\t\t\tvertices[ iv + 0 ] = px;\r\n\t\t\tvertices[ iv + 1 ] = py;\r\n\t\t\tvertices[ iv + 2 ] = px;\r\n\t\t\tvertices[ iv + 3 ] = py;\r\n\t\t\tsteps[ is +  0 ] = strokeWidth;\r\n\t\t\tsteps[ is +  1 ] = scaleInvariant;\r\n\t\t\tsteps[ is +  2 ] = pprevx;\r\n\t\t\tsteps[ is +  3 ] = pprevy;\r\n\t\t\tsteps[ is +  4 ] = pnextxn;\r\n\t\t\tsteps[ is +  5 ] = pnextyn;\r\n\t\t\tsteps[ is +  6 ] = strokeWidth;\r\n\t\t\tsteps[ is +  7 ] = scaleInvariant;\r\n\t\t\tsteps[ is +  8 ] = pprevx;\r\n\t\t\tsteps[ is +  9 ] = pprevy;\r\n\t\t\tsteps[ is + 10 ] = pnextxn;\r\n\t\t\tsteps[ is + 11 ] = pnextyn;\r\n\t\t\tllo = l - loffset;\r\n\t\t\tcolorFills[ icf + 0 ] = llo;\r\n\t\t\tcolorFills[ icf + 4 ] = llo;\r\n\t\t\tiv += 4;\r\n\t\t\tis += 12;\r\n\t\t\ticf += 8;\r\n\t\t}\r\n\r\n\t\t// Last segment\r\n\t\t{\r\n\t\t\tpprevx = px;\r\n\t\t\tpprevy = py;\r\n\t\t\tpx = pnextx;\r\n\t\t\tpy = pnexty;\r\n\t\t\tpseg = psegnext;\r\n\t\t\tif( pointsClosed ) {\r\n\t\t\t\tpnextx = psecondx;\r\n\t\t\t\tpnexty = psecondy;\r\n\t\t\t\tpsegnext = psegsecond;\r\n\t\t\t} else {\r\n\t\t\t\tpnextx = px + (px - pprevx);\r\n\t\t\t\tpnexty = py + (py - pprevy);\r\n\t\t\t\tpsegnext = false;\r\n\t\t\t}\r\n\t\t\tlprev = l;\r\n\t\t\tl = lnext;\r\n\r\n\t\t\tlet pnextxn = pnextx;\r\n\t\t\tlet pnextyn = pnexty;\r\n\t\t\tlet loffsetprev = loffset;\r\n\t\t\tif( pseg ) {\r\n\t\t\t\tpprevx = px - (pnextx - px);\r\n\t\t\t\tpprevy = py - (pnexty - py);\r\n\r\n\t\t\t\tlmax = Math.max( lmax, llo );\r\n\r\n\t\t\t\tllop = lprev - loffset;\r\n\t\t\t\tconst dash = toDash( llop, strokeWidth, pointsStyle, LINE_WORK_POINT );\r\n\t\t\t\tconst dash0 = dash.x;\r\n\t\t\t\tconst dash1 = dash.y;\r\n\t\t\t\tfor( let j = icfprev; j < icf + 8; j += 4 ) {\r\n\t\t\t\t\tcolorFills[ j + 1 ] = dash0;\r\n\t\t\t\t\tcolorFills[ j + 2 ] = dash1;\r\n\t\t\t\t\tcolorFills[ j + 3 ] = llop;\r\n\t\t\t\t}\r\n\t\t\t\ticfprev = icf + 8;\r\n\t\t\t\tloffsetprev = loffset;\r\n\t\t\t\tloffset = l;\r\n\t\t\t} else if( psegnext ) {\r\n\t\t\t\tpnextxn = px + (px - pprevx);\r\n\t\t\t\tpnextyn = py + (py - pprevy);\r\n\t\t\t}\r\n\r\n\t\t\t// Vertices\r\n\t\t\tvertices[ iv + 0 ] = px;\r\n\t\t\tvertices[ iv + 1 ] = py;\r\n\t\t\tvertices[ iv + 2 ] = px;\r\n\t\t\tvertices[ iv + 3 ] = py;\r\n\t\t\tsteps[ is +  0 ] = strokeWidth;\r\n\t\t\tsteps[ is +  1 ] = scaleInvariant;\r\n\t\t\tsteps[ is +  2 ] = pprevx;\r\n\t\t\tsteps[ is +  3 ] = pprevy;\r\n\t\t\tsteps[ is +  4 ] = pnextxn;\r\n\t\t\tsteps[ is +  5 ] = pnextyn;\r\n\t\t\tsteps[ is +  6 ] = strokeWidth;\r\n\t\t\tsteps[ is +  7 ] = scaleInvariant;\r\n\t\t\tsteps[ is +  8 ] = pprevx;\r\n\t\t\tsteps[ is +  9 ] = pprevy;\r\n\t\t\tsteps[ is + 10 ] = pnextxn;\r\n\t\t\tsteps[ is + 11 ] = pnextyn;\r\n\t\t\tllop = l - loffsetprev;\r\n\t\t\tlmax = Math.max( lmax, llop );\r\n\t\t\tcolorFills[ icf + 0 ] = llop;\r\n\t\t\tcolorFills[ icf + 4 ] = llop;\r\n\t\t\tiv += 4;\r\n\t\t\tis += 12;\r\n\t\t\ticf += 8;\r\n\r\n\t\t\t// Total length\r\n\t\t\tif( icfprev < icf ) {\r\n\t\t\t\tconst dash = toDash( llop, strokeWidth, pointsStyle, LINE_WORK_POINT );\r\n\t\t\t\tconst dash0 = dash.x;\r\n\t\t\t\tconst dash1 = dash.y;\r\n\t\t\t\tif( pointsClosed ) {\r\n\t\t\t\t\tfor( let i = icfprev; i < icf; i += 4 ) {\r\n\t\t\t\t\t\tcolorFills[ i + 1 ] = dash0;\r\n\t\t\t\t\t\tcolorFills[ i + 2 ] = dash1;\r\n\t\t\t\t\t\tcolorFills[ i + 3 ] = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor( let i = icfprev; i < icf; i += 4 ) {\r\n\t\t\t\t\t\tcolorFills[ i + 1 ] = dash0;\r\n\t\t\t\t\t\tcolorFills[ i + 2 ] = dash1;\r\n\t\t\t\t\t\tcolorFills[ i + 3 ] = llop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// Fill the rest\r\n\tfor( const ivmax = ((voffset + vcount) << 1); iv < ivmax; iv += 2, is += 6, icf += 4 ) {\r\n\t\tvertices[ iv + 0 ] = px;\r\n\t\tvertices[ iv + 1 ] = py;\r\n\t\tsteps[ is + 0 ] = 0;\r\n\t\tsteps[ is + 1 ] = 0;\r\n\t\tsteps[ is + 2 ] = 0;\r\n\t\tsteps[ is + 3 ] = 0;\r\n\t\tsteps[ is + 4 ] = 0;\r\n\t\tsteps[ is + 5 ] = 0;\r\n\t\tcolorFills[ icf + 0 ] = 0;\r\n\t\tcolorFills[ icf + 1 ] = 0;\r\n\t\tcolorFills[ icf + 2 ] = 0;\r\n\t\tcolorFills[ icf + 4 ] = 0;\r\n\t}\r\n\r\n\treturn lmax;\r\n};\r\n"]}