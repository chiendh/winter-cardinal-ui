{"version":3,"file":"to-computed.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/to-computed.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAGhD,MAAM,CAAC,IAAM,UAAU,GAAG,UAAE,KAAa,EAAE,KAA2B,EAAE,GAAW;IAClF,IAAI,QAAQ,CAAE,KAAK,CAAE,EAAG;QACvB,OAAO,KAAK,CAAC;KACb;SAAM,IAAI,UAAU,CAAE,KAAK,CAAE,EAAG;QAChC,OAAO,KAAK,CAAE,KAAK,CAAE,CAAC;KACtB;SAAM,IAAI,KAAK,EAAG;QAClB,OAAO,KAAK,CAAE,KAAK,GAAG,KAAK,CAAC,MAAM,CAAE,CAAC;KACrC;IACD,OAAO,GAAG,CAAC;AACZ,CAAC,CAAC","sourcesContent":["import { isFunction } from \"../../util/is-function\";\r\nimport { isNumber } from \"../../util/is-number\";\r\nimport { EShapeLineOfAnyValue } from \"./e-shape-line-of-any-value\";\r\n\r\nexport const toComputed = ( index: number, value: EShapeLineOfAnyValue, def: number ): number => {\r\n\tif( isNumber( value ) ) {\r\n\t\treturn value;\r\n\t} else if( isFunction( value ) ) {\r\n\t\treturn value( index );\r\n\t} else if( value ) {\r\n\t\treturn value[ index % value.length ];\r\n\t}\r\n\treturn def;\r\n};\r\n"]}