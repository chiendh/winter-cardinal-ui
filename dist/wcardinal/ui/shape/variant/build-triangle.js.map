{"version":3,"file":"build-triangle.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/build-triangle.ts"],"names":[],"mappings":"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","sourcesContent":["import { Matrix, Point, TextureUvs } from \"pixi.js\";\r\nimport { buildStep } from \"./build-step\";\r\nimport { toLength } from \"./to-length\";\r\nimport { STEP_VALUES, toStep } from \"./to-step\";\r\n\r\nexport const TRIANGLE_VERTEX_COUNT = 7;\r\nexport const TRIANGLE_INDEX_COUNT = 3;\r\nexport const TRIANGLE_WORLD_SIZE: [ number, number, number ] = [ 0, 0, 0 ];\r\nconst TRIANGLE_WORK_POINT: Point = new Point();\r\n\r\nexport const buildTriangleClipping = (\r\n\tclippings: Float32Array,\r\n\tvoffset: number\r\n): void => {\r\n\t// Clippings\r\n\tlet iv = voffset * 3;\r\n\tclippings[ iv + 0 ] = 0;\r\n\tclippings[ iv + 1 ] = 0;\r\n\tclippings[ iv + 2 ] = 0;\r\n\tiv += 3;\r\n\r\n\tclippings[ iv + 0 ] = 1;\r\n\tclippings[ iv + 1 ] = 0;\r\n\tclippings[ iv + 2 ] = 0;\r\n\tiv += 3;\r\n\r\n\tclippings[ iv + 0 ] = 1;\r\n\tclippings[ iv + 1 ] = 0;\r\n\tclippings[ iv + 2 ] = 0;\r\n\tiv += 3;\r\n\r\n\tclippings[ iv + 0 ] = 0;\r\n\tclippings[ iv + 1 ] = 1;\r\n\tclippings[ iv + 2 ] = 0;\r\n\tiv += 3;\r\n\r\n\tclippings[ iv + 0 ] = 0;\r\n\tclippings[ iv + 1 ] = 1;\r\n\tclippings[ iv + 2 ] = 0;\r\n\tiv += 3;\r\n\r\n\tclippings[ iv + 0 ] = 1;\r\n\tclippings[ iv + 1 ] = 0;\r\n\tclippings[ iv + 2 ] = 0;\r\n\tiv += 3;\r\n\r\n\tclippings[ iv + 0 ] = 1;\r\n\tclippings[ iv + 1 ] = 0;\r\n\tclippings[ iv + 2 ] = 0;\r\n};\r\n\r\nexport const buildTriangleIndex = (\r\n\tindices: Uint16Array | Uint32Array,\r\n\tvoffset: number,\r\n\tioffset: number\r\n): void => {\r\n\t// Indices\r\n\tconst ii = ioffset * 3;\r\n\tindices[ ii + 0 ] = voffset + 0;\r\n\tindices[ ii + 1 ] = voffset + 1;\r\n\tindices[ ii + 2 ] = voffset + 2;\r\n\r\n\tindices[ ii + 3 ] = voffset + 0;\r\n\tindices[ ii + 4 ] = voffset + 3;\r\n\tindices[ ii + 5 ] = voffset + 4;\r\n\r\n\tindices[ ii + 6 ] = voffset + 0;\r\n\tindices[ ii + 7 ] = voffset + 5;\r\n\tindices[ ii + 8 ] = voffset + 6;\r\n};\r\n\r\nexport const buildTriangleVertex = (\r\n\tvertices: Float32Array,\r\n\tvoffset: number,\r\n\toriginX: number,\r\n\toriginY: number,\r\n\tsizeX: number,\r\n\tsizeY: number,\r\n\tstrokeAlign: number,\r\n\tstrokeWidth: number,\r\n\tinternalTransform: Matrix,\r\n\tworldSize: [ number, number, number ]\r\n): void => {\r\n\tconst s = strokeAlign * strokeWidth;\r\n\tconst sx = sizeX * 0.5 + (0 <= sizeX ? +s : -s);\r\n\tconst sy = sizeY * 0.5 + (0 <= sizeY ? +s : -s);\r\n\tconst sz = Math.sqrt( sx * sx + 4 * sy * sy );\r\n\tconst sw = 2 * sx * sy / (sx + sz);\r\n\r\n\tconst work = TRIANGLE_WORK_POINT;\r\n\twork.set( originX, originY - sy );\r\n\tinternalTransform.apply( work, work );\r\n\tconst x0 = work.x;\r\n\tconst y0 = work.y;\r\n\twork.set( originX, originY );\r\n\tinternalTransform.apply( work, work );\r\n\tconst tx = work.x;\r\n\tconst ty = work.y;\r\n\twork.set( originX + sx, originY );\r\n\tinternalTransform.apply( work, work );\r\n\tconst dx = tx - x0;\r\n\tconst dy = ty - y0;\r\n\tconst x1 = work.x + dx;\r\n\tconst y1 = work.y + dy;\r\n\tconst x2 = tx + (tx - work.x) + dx;\r\n\tconst y2 = ty + (ty - work.y) + dy;\r\n\twork.set( originX, originY + sy - sw ); // Incenter of a triangle\r\n\tinternalTransform.apply( work, work );\r\n\tconst x3 = work.x;\r\n\tconst y3 = work.y;\r\n\r\n\t// World size\r\n\tconst xb = tx + dx;\r\n\tconst yb = ty + dy;\r\n\tworldSize[ 0 ] = toLength( xb, yb, x3, y3 );\r\n\tworldSize[ 1 ] = toLength( x1, y1, xb, yb );\r\n\tworldSize[ 2 ] = toLength( x0, y0, tx, ty );\r\n\r\n\t// Vertices\r\n\tconst iv = voffset << 1;\r\n\tvertices[ iv +  0 ] = x3;\r\n\tvertices[ iv +  1 ] = y3;\r\n\r\n\tvertices[ iv +  2 ] = x0;\r\n\tvertices[ iv +  3 ] = y0;\r\n\tvertices[ iv +  4 ] = x1;\r\n\tvertices[ iv +  5 ] = y1;\r\n\r\n\tvertices[ iv +  6 ] = x1;\r\n\tvertices[ iv +  7 ] = y1;\r\n\tvertices[ iv +  8 ] = x2;\r\n\tvertices[ iv +  9 ] = y2;\r\n\r\n\tvertices[ iv + 10 ] = x2;\r\n\tvertices[ iv + 11 ] = y2;\r\n\tvertices[ iv + 12 ] = x0;\r\n\tvertices[ iv + 13 ] = y0;\r\n};\r\n\r\nexport const buildTriangleStep = (\r\n\tsteps: Float32Array,\r\n\tclippings: Float32Array,\r\n\tvoffset: number,\r\n\tvcount: number,\r\n\tstrokeWidth: number,\r\n\tantialiasWeight: number,\r\n\tworldSize: [ number, number, number ]\r\n): void => {\r\n\ttoStep( worldSize[ 0 ], strokeWidth, antialiasWeight, STEP_VALUES );\r\n\tconst swc = STEP_VALUES[ 0 ];\r\n\tconst pc0 = STEP_VALUES[ 1 ];\r\n\tconst pc1 = STEP_VALUES[ 2 ];\r\n\r\n\tbuildStep(\r\n\t\tsteps,\r\n\t\tclippings,\r\n\t\tvoffset,\r\n\t\tvcount,\r\n\t\tswc, swc,\r\n\t\tpc0, pc0,\r\n\t\tpc1, pc1\r\n\t);\r\n};\r\n\r\nexport const buildTriangleUv = (\r\n\tuvs: Float32Array,\r\n\ttextureUvs: TextureUvs,\r\n\tvoffset: number,\r\n\tworldSize: [ number, number, number ]\r\n): void => {\r\n\tconst x0 = textureUvs.x0;\r\n\tconst x1 = textureUvs.x1;\r\n\tconst x2 = textureUvs.x2;\r\n\tconst x3 = textureUvs.x3;\r\n\tconst y0 = textureUvs.y0;\r\n\tconst y1 = textureUvs.y1;\r\n\tconst y2 = textureUvs.y2;\r\n\tconst y3 = textureUvs.y3;\r\n\r\n\tconst x4 = 0.5 * ( x0 + x1 );\r\n\tconst y4 = 0.5 * ( y0 + y1 );\r\n\r\n\tconst c = 1 - 0.5 * worldSize[ 0 ] / worldSize[ 2 ];\r\n\tconst x5 = x4 + c * ( x3 - x0 );\r\n\tconst y5 = y4 + c * ( y3 - y0 );\r\n\r\n\tconst iuv = voffset << 1;\r\n\tuvs[ iuv +  0 ] = x5;\r\n\tuvs[ iuv +  1 ] = y5;\r\n\r\n\tuvs[ iuv +  2 ] = x4;\r\n\tuvs[ iuv +  3 ] = y4;\r\n\tuvs[ iuv +  4 ] = x2;\r\n\tuvs[ iuv +  5 ] = y2;\r\n\r\n\tuvs[ iuv +  6 ] = x2;\r\n\tuvs[ iuv +  7 ] = y2;\r\n\tuvs[ iuv +  8 ] = x3;\r\n\tuvs[ iuv +  9 ] = y3;\r\n\r\n\tuvs[ iuv + 10 ] = x3;\r\n\tuvs[ iuv + 11 ] = y3;\r\n\tuvs[ iuv + 12 ] = x4;\r\n\tuvs[ iuv + 13 ] = y4;\r\n};\r\n"]}