{"version":3,"file":"e-shape-triangle-rounded-uploaded.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-triangle-rounded-uploaded.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeBuffer } from \"../e-shape-buffer\";\r\nimport {\r\n\tbuildTriangleRoundedClipping, buildTriangleRoundedIndex, buildTriangleRoundedStep,\r\n\tbuildTriangleRoundedUv, buildTriangleRoundedVertex, TRIANGLE_ROUNDED_WORLD_SIZE\r\n} from \"./build-triangle-rounded\";\r\nimport { EShapeTextUploaded } from \"./e-shape-text-uploaded\";\r\n\r\nexport class EShapeTriangleRoundedUploaded extends EShapeTextUploaded {\r\n\tinit( shape: EShape ): this {\r\n\t\tsuper.init( shape );\r\n\r\n\t\t// Indices\r\n\t\tconst buffer = this.buffer;\r\n\t\tbuffer.updateIndices();\r\n\t\tbuildTriangleRoundedIndex(\r\n\t\t\tbuffer.indices,\r\n\t\t\tthis.vertexOffset,\r\n\t\t\tthis.indexOffset\r\n\t\t);\r\n\r\n\t\t// Text\r\n\t\tthis.initText();\r\n\r\n\t\tthis.update( shape );\r\n\t\treturn this;\r\n\t}\r\n\r\n\tupdate( shape: EShape ): void {\r\n\t\tconst buffer = this.buffer;\r\n\t\tthis.updateVertexClippingStepAndUv( buffer, shape );\r\n\t\tthis.updateColor( buffer, shape );\r\n\t\tthis.updateText( buffer, shape );\r\n\t}\r\n\r\n\tprotected updateVertexClippingStepAndUv( buffer: EShapeBuffer, shape: EShape ): void {\r\n\t\tconst size = shape.size;\r\n\t\tconst sizeX = size.x;\r\n\t\tconst sizeY = size.y;\r\n\t\tconst isSizeChanged = ( sizeX !== this.sizeX || sizeY !== this.sizeY );\r\n\r\n\t\tconst radius = shape.radius;\r\n\t\tconst isRadiusChanged = ( radius !== this.radius );\r\n\r\n\t\tconst transformLocalId = this.toTransformLocalId( shape );\r\n\t\tconst isTransformChanged = ( this.transformLocalId !== transformLocalId );\r\n\r\n\t\tconst stroke = shape.stroke;\r\n\t\tconst strokeWidth = (stroke.enable ? stroke.width : 0);\r\n\t\tconst strokeAlign = stroke.align;\r\n\t\tconst isStrokeChanged = ( this.strokeAlign !== strokeAlign || this.strokeWidth !== strokeWidth );\r\n\r\n\t\tconst corner = shape.corner;\r\n\t\tconst isCornerChanged = ( corner !== this.corner );\r\n\r\n\t\tconst texture = this.toTexture( shape );\r\n\t\tconst textureTransformId = this.toTextureTransformId( texture );\r\n\t\tconst isTextureChanged = ( texture !== this.texture || textureTransformId !== this.textureTransformId );\r\n\r\n\t\tconst isVertexChanged = isSizeChanged || isRadiusChanged || isStrokeChanged;\r\n\r\n\t\tif( isVertexChanged || isTransformChanged || isCornerChanged || isTextureChanged ) {\r\n\t\t\tthis.sizeX = sizeX;\r\n\t\t\tthis.sizeY = sizeY;\r\n\t\t\tthis.radius = radius;\r\n\t\t\tthis.transformLocalId = transformLocalId;\r\n\t\t\tthis.strokeWidth = strokeWidth;\r\n\t\t\tthis.strokeAlign = strokeAlign;\r\n\t\t\tthis.corner = corner;\r\n\t\t\tthis.texture = texture;\r\n\t\t\tthis.textureTransformId = textureTransformId;\r\n\r\n\t\t\tif( isSizeChanged || isTransformChanged || isStrokeChanged ) {\r\n\t\t\t\t// Invalidate the text layout to update the text layout.\r\n\t\t\t\tthis.textSpacingHorizontal = NaN;\r\n\t\t\t}\r\n\r\n\t\t\tconst voffset = this.vertexOffset;\r\n\r\n\t\t\tbuffer.updateVertices();\r\n\t\t\tbuildTriangleRoundedVertex(\r\n\t\t\t\tbuffer.vertices,\r\n\t\t\t\tvoffset,\r\n\t\t\t\t0,\r\n\t\t\t\t0,\r\n\t\t\t\tsizeX,\r\n\t\t\t\tsizeY,\r\n\t\t\t\tstrokeAlign,\r\n\t\t\t\tstrokeWidth,\r\n\t\t\t\tradius,\r\n\t\t\t\tshape.transform.internalTransform,\r\n\t\t\t\tTRIANGLE_ROUNDED_WORLD_SIZE\r\n\t\t\t);\r\n\r\n\t\t\tif( isRadiusChanged || isCornerChanged ) {\r\n\t\t\t\tbuffer.updateClippings();\r\n\t\t\t\tbuildTriangleRoundedClipping(\r\n\t\t\t\t\tbuffer.clippings,\r\n\t\t\t\t\tvoffset,\r\n\t\t\t\t\tcorner,\r\n\t\t\t\t\tradius\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif( isVertexChanged || isTransformChanged || isCornerChanged ) {\r\n\t\t\t\tbuffer.updateSteps();\r\n\t\t\t\tbuildTriangleRoundedStep(\r\n\t\t\t\t\tbuffer.steps,\r\n\t\t\t\t\tbuffer.clippings,\r\n\t\t\t\t\tvoffset,\r\n\t\t\t\t\tstrokeWidth,\r\n\t\t\t\t\tshape.radius,\r\n\t\t\t\t\tthis.antialiasWeight,\r\n\t\t\t\t\tTRIANGLE_ROUNDED_WORLD_SIZE\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif( isVertexChanged || isTextureChanged ) {\r\n\t\t\t\tbuffer.updateUvs();\r\n\t\t\t\tbuildTriangleRoundedUv(\r\n\t\t\t\t\tbuffer.uvs,\r\n\t\t\t\t\tvoffset,\r\n\t\t\t\t\tthis.toTextureUvs( texture ),\r\n\t\t\t\t\tradius,\r\n\t\t\t\t\tTRIANGLE_ROUNDED_WORLD_SIZE\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}