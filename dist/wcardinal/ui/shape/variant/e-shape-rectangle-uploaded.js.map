{"version":3,"file":"e-shape-rectangle-uploaded.js","sourceRoot":"","sources":["../../../../../src/main/typescript/wcardinal/ui/shape/variant/e-shape-rectangle-uploaded.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { EShape } from \"../e-shape\";\r\nimport { EShapeBuffer } from \"../e-shape-buffer\";\r\nimport {\r\n\tbuildRectangleClipping, buildRectangleIndex, buildRectangleStep, buildRectangleUv,\r\n\tbuildRectangleVertex, RECTANGLE_WORLD_SIZE\r\n} from \"./build-rectangle\";\r\nimport { EShapeTextUploaded } from \"./e-shape-text-uploaded\";\r\n\r\nexport class EShapeRectangleUploaded extends EShapeTextUploaded {\r\n\tinit( shape: EShape ): this {\r\n\t\tsuper.init( shape );\r\n\r\n\t\t// Indices\r\n\t\tconst buffer = this.buffer;\r\n\t\tbuffer.updateIndices();\r\n\t\tbuildRectangleIndex(\r\n\t\t\tbuffer.indices,\r\n\t\t\tthis.vertexOffset,\r\n\t\t\tthis.indexOffset\r\n\t\t);\r\n\r\n\t\t// Text\r\n\t\tthis.initText();\r\n\r\n\t\tthis.update( shape );\r\n\t\treturn this;\r\n\t}\r\n\r\n\tupdate( shape: EShape ): void {\r\n\t\tconst buffer = this.buffer;\r\n\t\tthis.updateVertexClippingStepAndUv( buffer, shape );\r\n\t\tthis.updateColor( buffer, shape );\r\n\t\tthis.updateText( buffer, shape );\r\n\t}\r\n\r\n\tprotected updateVertexClippingStepAndUv( buffer: EShapeBuffer, shape: EShape ): void {\r\n\t\tconst size = shape.size;\r\n\t\tconst sizeX = size.x;\r\n\t\tconst sizeY = size.y;\r\n\t\tconst isSizeChanged = ( sizeX !== this.sizeX || sizeY !== this.sizeY );\r\n\r\n\t\tconst transformLocalId = this.toTransformLocalId( shape );\r\n\t\tconst isTransformChanged = ( this.transformLocalId !== transformLocalId );\r\n\r\n\t\tconst stroke = shape.stroke;\r\n\t\tconst strokeWidth = (stroke.enable ? stroke.width : 0);\r\n\t\tconst strokeAlign = stroke.align;\r\n\t\tconst strokeSide = stroke.side;\r\n\t\tconst isStrokeChanged = ( this.strokeAlign !== strokeAlign ||\r\n\t\t\tthis.strokeWidth !== strokeWidth || this.strokeSide !== strokeSide );\r\n\r\n\t\tconst texture = this.toTexture( shape );\r\n\t\tconst textureTransformId = this.toTextureTransformId( texture );\r\n\t\tconst isTextureChanged = ( texture !== this.texture || textureTransformId !== this.textureTransformId );\r\n\r\n\t\tconst isVertexChanged = isSizeChanged || isStrokeChanged;\r\n\r\n\t\tif( isVertexChanged || isTransformChanged || isTextureChanged ) {\r\n\t\t\tthis.sizeX = sizeX;\r\n\t\t\tthis.sizeY = sizeY;\r\n\t\t\tthis.transformLocalId = transformLocalId;\r\n\t\t\tthis.strokeWidth = strokeWidth;\r\n\t\t\tthis.strokeAlign = strokeAlign;\r\n\t\t\tthis.strokeSide = strokeSide;\r\n\t\t\tthis.texture = texture;\r\n\t\t\tthis.textureTransformId = textureTransformId;\r\n\r\n\t\t\tif( isVertexChanged || isTransformChanged ) {\r\n\t\t\t\t// Invalidate the text layout to update the text layout.\r\n\t\t\t\tthis.textSpacingHorizontal = NaN;\r\n\t\t\t}\r\n\r\n\t\t\t// Vertices\r\n\t\t\tconst voffset = this.vertexOffset;\r\n\t\t\tbuffer.updateVertices();\r\n\t\t\tbuildRectangleVertex(\r\n\t\t\t\tbuffer.vertices, voffset,\r\n\t\t\t\t0, 0,\r\n\t\t\t\tsizeX, sizeY,\r\n\t\t\t\tstrokeAlign, strokeWidth,\r\n\t\t\t\tshape.transform.internalTransform,\r\n\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t);\r\n\r\n\t\t\t// Steps\r\n\t\t\tif( isVertexChanged || isTransformChanged ) {\r\n\t\t\t\tbuffer.updateSteps();\r\n\t\t\t\tbuildRectangleStep(\r\n\t\t\t\t\tvoffset,\r\n\t\t\t\t\tbuffer.steps,\r\n\t\t\t\t\tstrokeWidth, strokeSide,\r\n\t\t\t\t\tthis.antialiasWeight,\r\n\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Clippings\r\n\t\t\tif( isVertexChanged ) {\r\n\t\t\t\tbuffer.updateClippings();\r\n\t\t\t\tbuildRectangleClipping(\r\n\t\t\t\t\tbuffer.clippings,\r\n\t\t\t\t\tvoffset,\r\n\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// UVs\r\n\t\t\tif( isVertexChanged || isTextureChanged ) {\r\n\t\t\t\tbuffer.updateUvs();\r\n\t\t\t\tbuildRectangleUv(\r\n\t\t\t\t\tbuffer.uvs,\r\n\t\t\t\t\tvoffset,\r\n\t\t\t\t\tthis.toTextureUvs( texture ),\r\n\t\t\t\t\tRECTANGLE_WORLD_SIZE\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}