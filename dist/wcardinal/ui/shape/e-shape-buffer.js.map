{"version":3,"file":"e-shape-buffer.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/shape/e-shape-buffer.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Buffer, DRAW_MODES, Geometry, Renderer, Shader, Texture } from \"pixi.js\";\r\nimport { EShape } from \"./e-shape\";\r\nimport { EShapeBufferUnitBuilder } from \"./e-shape-buffer-unit-builder\";\r\nimport { EShapeRendererIterator } from \"./e-shape-renderer-iterator\";\r\nimport { EShapeType } from \"./e-shape-type\";\r\nimport { EShapeUploaded } from \"./e-shape-uploaded\";\r\nimport { EShapeUploadeds } from \"./e-shape-uploadeds\";\r\n\r\nexport class EShapeBuffer {\r\n\tvertices: Float32Array;\r\n\tprotected _vertexCapacity: number;\r\n\tprotected _vertexCount: number;\r\n\tprotected _vertexBuffer: Buffer | null;\r\n\r\n\tclippings: Float32Array;\r\n\tprotected _clippingBuffer: Buffer | null;\r\n\r\n\tsteps: Float32Array;\r\n\tprotected _stepBuffer: Buffer | null;\r\n\r\n\tcolorFills: Float32Array;\r\n\tprotected _colorFillBuffer: Buffer | null;\r\n\r\n\tcolorStrokes: Float32Array;\r\n\tprotected _colorStrokeBuffer: Buffer | null;\r\n\r\n\tuvs: Float32Array;\r\n\tprotected _uvBuffer: Buffer | null;\r\n\r\n\tindices: Uint16Array | Uint32Array;\r\n\tprotected _indexCapacity: number;\r\n\tprotected _indexCount: number;\r\n\tindexCountRequested: number;\r\n\tprotected _indexBuffer: Buffer | null;\r\n\r\n\tprotected _renderer: Renderer;\r\n\tprotected _geometry: Geometry | null;\r\n\r\n\tprotected _builder: EShapeBufferUnitBuilder;\r\n\r\n\tconstructor( ntriangles: number, renderer: Renderer ) {\r\n\t\tconst nindices = ntriangles * 3;\r\n\t\tconst nvertices = nindices;\r\n\r\n\t\tthis.vertices = new Float32Array( nvertices * 2 );\r\n\t\tthis._vertexCapacity = nvertices;\r\n\t\tthis._vertexCount = 0;\r\n\t\tthis._vertexBuffer = null;\r\n\r\n\t\tthis.clippings = new Float32Array( nvertices * 3 );\r\n\t\tthis._clippingBuffer = null;\r\n\r\n\t\tthis.steps = new Float32Array( nvertices * 6 );\r\n\t\tthis._stepBuffer = null;\r\n\r\n\t\tthis.colorFills = new Float32Array( nvertices * 4 );\r\n\t\tthis._colorFillBuffer = null;\r\n\r\n\t\tthis.colorStrokes = new Float32Array( nvertices * 4 );\r\n\t\tthis._colorStrokeBuffer = null;\r\n\r\n\t\tthis.uvs = new Float32Array( nvertices * 2 );\r\n\t\tthis._uvBuffer = null;\r\n\r\n\t\tconst isIndicesShort = ( nvertices <= 65535 );\r\n\t\tthis.indices = ( isIndicesShort ? new Uint16Array( nindices ) : new Uint32Array( nindices ) );\r\n\t\tthis._indexCapacity = ntriangles;\r\n\t\tthis._indexCount = 0;\r\n\t\tthis.indexCountRequested = 0;\r\n\t\tthis._indexBuffer = null;\r\n\r\n\t\tthis._renderer = renderer;\r\n\r\n\t\tthis._builder = new EShapeBufferUnitBuilder();\r\n\r\n\t\tthis._geometry = null;\r\n\t}\r\n\r\n\tupdateVertices(): void {\r\n\t\tconst vertexBuffer = this._vertexBuffer;\r\n\t\tif( vertexBuffer ) {\r\n\t\t\tvertexBuffer.update();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateClippings(): void {\r\n\t\tconst clippingBuffer = this._clippingBuffer;\r\n\t\tif( clippingBuffer ) {\r\n\t\t\tclippingBuffer.update();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateSteps(): void {\r\n\t\tconst stepBuffer = this._stepBuffer;\r\n\t\tif( stepBuffer ) {\r\n\t\t\tstepBuffer.update();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateColorFills(): void {\r\n\t\tconst colorFillBuffer = this._colorFillBuffer;\r\n\t\tif( colorFillBuffer ) {\r\n\t\t\tcolorFillBuffer.update();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateColorStrokes(): void {\r\n\t\tconst colorStrokeBuffer = this._colorStrokeBuffer;\r\n\t\tif( colorStrokeBuffer ) {\r\n\t\t\tcolorStrokeBuffer.update();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateUvs(): void {\r\n\t\tconst uvBuffer = this._uvBuffer;\r\n\t\tif( uvBuffer ) {\r\n\t\t\tuvBuffer.update();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateIndices(): void {\r\n\t\tconst indexBuffer = this._indexBuffer;\r\n\t\tif( indexBuffer ) {\r\n\t\t\tindexBuffer.update();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getGeometry(): Geometry {\r\n\t\tlet result = this._geometry;\r\n\t\tif( result == null ) {\r\n\t\t\tthis._vertexBuffer = new Buffer( this.vertices, false, false );\r\n\t\t\tthis._clippingBuffer = new Buffer( this.clippings, false, false );\r\n\t\t\tthis._stepBuffer = new Buffer( this.steps, false, false );\r\n\t\t\tthis._colorFillBuffer = new Buffer( this.colorFills, false, false );\r\n\t\t\tthis._colorStrokeBuffer = new Buffer( this.colorStrokes, false, false );\r\n\t\t\tthis._uvBuffer = new Buffer( this.uvs, false, false );\r\n\t\t\tthis._indexBuffer = new Buffer( this.indices, false, true );\r\n\r\n\t\t\tthis._geometry = result = new Geometry()\r\n\t\t\t\t.addIndex( this._indexBuffer )\r\n\t\t\t\t.addAttribute( \"aPosition\", this._vertexBuffer, 2 )\r\n\t\t\t\t.addAttribute( \"aClipping\", this._clippingBuffer, 3 )\r\n\t\t\t\t.addAttribute( \"aStep\", this._stepBuffer, 2 )\r\n\t\t\t\t.addAttribute( \"aAntialias\", this._stepBuffer, 4 )\r\n\t\t\t\t.addAttribute( \"aColorFill\", this._colorFillBuffer, 4 )\r\n\t\t\t\t.addAttribute( \"aColorStroke\", this._colorStrokeBuffer, 4 )\r\n\t\t\t\t.addAttribute( \"aUv\", this._uvBuffer, 2 );\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tupload(): void {\r\n\t\tthis._renderer.geometry.bind( this.getGeometry() );\r\n\t}\r\n\r\n\trender( shader: Shader ): void {\r\n\t\tconst renderer = this._renderer;\r\n\t\trenderer.geometry.bind( this.getGeometry() );\r\n\r\n\t\tconst units = this._builder.units;\r\n\t\tconst unitCount = units.length;\r\n\t\tif( 0 < unitCount ) {\r\n\t\t\tconst type = DRAW_MODES.TRIANGLES;\r\n\r\n\t\t\tlet unit0 = null;\r\n\t\t\tlet unit1 = units[ 0 ];\r\n\t\t\tlet ioffset0 = 0;\r\n\t\t\tlet ioffset1 = unit1.indexOffset * 3;\r\n\t\t\tlet vcount = 0;\r\n\t\t\tlet texture = Texture.WHITE;\r\n\t\t\tfor( let i = 0, imax = unitCount - 1; i < imax; ++i ) {\r\n\t\t\t\tunit0 = unit1;\r\n\t\t\t\tunit1 = units[ i + 1 ];\r\n\t\t\t\tioffset0 = ioffset1;\r\n\t\t\t\tioffset1 = unit1.indexOffset * 3;\r\n\t\t\t\tvcount = ioffset1 - ioffset0;\r\n\t\t\t\ttexture = unit0.texture || Texture.WHITE;\r\n\t\t\t\tif( 0 < vcount && texture.valid ) {\r\n\t\t\t\t\tshader.uniforms.sampler = renderer.texture.bind( texture );\r\n\t\t\t\t\trenderer.geometry.draw( type, vcount, ioffset0 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvcount = this._indexCount * 3 - ioffset1;\r\n\t\t\ttexture = unit1.texture || Texture.WHITE;\r\n\t\t\tif( 0 < vcount && texture.valid ) {\r\n\t\t\t\tshader.uniforms.sampler = renderer.texture.bind( texture );\r\n\t\t\t\trenderer.geometry.draw( type, vcount, ioffset1 );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisCompatible( shape: EShape, uploaded: EShapeUploaded, vindex: number, iindex: number ): boolean {\r\n\t\treturn (\r\n\t\t\tuploaded.getBuffer() === this &&\r\n\t\t\tuploaded.getVertexOffset() === vindex &&\r\n\t\t\tuploaded.getIndexOffset() === iindex &&\r\n\t\t\tuploaded.isCompatible( shape )\r\n\t\t);\r\n\t}\r\n\r\n\tupdate( iterator: EShapeRendererIterator, antialiasWeight: number, noMoreThanOne: boolean ): boolean {\r\n\t\tconst builder = this._builder;\r\n\t\tbuilder.begin();\r\n\r\n\t\tlet vindex = 0;\r\n\t\tlet iindex = 0;\r\n\t\tlet shape = iterator.get();\r\n\t\tfor( ; shape != null; shape = iterator.next() ) {\r\n\t\t\tconst uploaded = shape.uploaded;\r\n\t\t\tif( uploaded == null || ! this.isCompatible( shape, uploaded, vindex, iindex ) ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tuploaded.update( shape );\r\n\t\t\tuploaded.buildUnit( builder );\r\n\r\n\t\t\tvindex += uploaded.getVertexCount();\r\n\t\t\tiindex += uploaded.getIndexCount();\r\n\r\n\t\t\tif( noMoreThanOne ) {\r\n\t\t\t\titerator.next();\r\n\t\t\t\tbuilder.end();\r\n\t\t\t\tthis._vertexCount = vindex;\r\n\t\t\t\tthis._indexCount = iindex;\r\n\t\t\t\treturn 0 < builder.units.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor( ; shape != null; shape = iterator.next() ) {\r\n\t\t\tconst creater = EShapeUploadeds[ shape.type ] || EShapeUploadeds[ EShapeType.GROUP ];\r\n\t\t\tif( creater == null ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tconst uploaded = creater( this, shape, vindex, iindex, antialiasWeight );\r\n\t\t\tif( uploaded == null ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tuploaded.buildUnit( builder );\r\n\t\t\tvindex += uploaded.getVertexCount();\r\n\t\t\tiindex += uploaded.getIndexCount();\r\n\r\n\t\t\tif( noMoreThanOne ) {\r\n\t\t\t\titerator.next();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuilder.end();\r\n\t\tthis._vertexCount = vindex;\r\n\t\tthis._indexCount = iindex;\r\n\t\treturn 0 < builder.units.length;\r\n\t}\r\n\r\n\tcheck( vindex: number, ioffset: number, vcount: number, icount: number ): boolean {\r\n\t\tthis.indexCountRequested = icount;\r\n\t\treturn vindex + vcount <= this._vertexCapacity && ioffset + icount <= this._indexCapacity;\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tconst geometry = this._geometry;\r\n\t\tif( geometry ) {\r\n\t\t\tgeometry.destroy();\r\n\t\t}\r\n\t\tthis._builder.destroy();\r\n\t}\r\n}\r\n"]}