{"version":3,"file":"e-shape-text.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/shape/e-shape-text.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAWH,MAAM,CAAN,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IAC3B,2DAAM,CAAA;IACN,uDAAI,CAAA;AACL,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,QAG3B;AAED,MAAM,CAAN,IAAY,eAGX;AAHD,WAAY,eAAe;IAC1B,yDAAM,CAAA;IACN,yDAAM,CAAA;AACP,CAAC,EAHW,eAAe,KAAf,eAAe,QAG1B","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Texture } from \"pixi.js\";\r\nimport { DeepPartial } from \"../util/deep-partial\";\r\nimport { EShapeResourceManagerDeserialization } from \"./e-shape-resource-manager-deserialization\";\r\nimport { EShapeResourceManagerSerialization } from \"./e-shape-resource-manager-serialization\";\r\nimport { EShapeTextAlign, EShapeTextAlignLike } from \"./e-shape-text-align\";\r\nimport { EShapeTextDirection } from \"./e-shape-text-direction\";\r\nimport { EShapeTextOffset, EShapeTextOffsetLike } from \"./e-shape-text-offset\";\r\nimport { EShapeTextOutline, EShapeTextOutlineLike } from \"./e-shape-text-outline\";\r\n\r\nexport enum EShapeTextWeight {\r\n\tNORMAL,\r\n\tBOLD\r\n}\r\n\r\nexport enum EShapeTextStyle {\r\n\tNORMAL,\r\n\tITALIC\r\n}\r\n\r\nexport interface EShapeTextLike {\r\n\tvalue: string;\r\n\tcolor: number;\r\n\talpha: number;\r\n\tfamily: string;\r\n\tsize: number;\r\n\tweight: EShapeTextWeight;\r\n\talign: EShapeTextAlignLike;\r\n\toffset: EShapeTextOffsetLike;\r\n\tstyle: EShapeTextStyle;\r\n\toutline: EShapeTextOutlineLike;\r\n\tspacing: EShapeTextOffsetLike;\r\n\tdirection: EShapeTextDirection;\r\n\tpadding: EShapeTextOffsetLike;\r\n\tclipping: boolean;\r\n}\r\n\r\nexport interface EShapeTextAtlasCharacter {\r\n\tx: number;\r\n\ty: number;\r\n\twidth: number;\r\n\theight: number;\r\n\tadvance: number;\r\n\torigin: {\r\n\t\tx: number,\r\n\t\ty: number\r\n\t};\r\n}\r\n\r\nexport interface EShapeTextAtlasCharacters {\r\n\t[ character: string ]: EShapeTextAtlasCharacter;\r\n}\r\n\r\nexport interface EShapeTextAtlas {\r\n\twidth: number;\r\n\theight: number;\r\n\tfont: {\r\n\t\tsize: number;\r\n\t};\r\n\tcharacters: EShapeTextAtlasCharacters;\r\n}\r\n\r\nexport interface EShapeText extends EShapeTextLike {\r\n\tenable: boolean;\r\n\r\n\talign: EShapeTextAlign;\r\n\toffset: EShapeTextOffset;\r\n\toutline: EShapeTextOutline;\r\n\tspacing: EShapeTextOffset;\r\n\tpadding: EShapeTextOffset;\r\n\r\n\ttexture?: Texture;\t\t// Used for rendering and updated when rendered\r\n\tatlas?: EShapeTextAtlas;\t// Used for rendering and updated when rendered\r\n\tworld?: Float32Array;\t\t// Updated when rendered\r\n\r\n\tcopy( target?: DeepPartial<EShapeTextLike> ): this;\r\n\tset(\r\n\t\tvalue?: string, color?: number, alpha?: number,\r\n\t\tfamily?: string, size?: number, weight?: EShapeTextWeight,\r\n\t\tstyle?: EShapeTextStyle, direction?: EShapeTextDirection,\r\n\t\tclipping?: boolean\r\n\t): this;\r\n\ttoObject(): EShapeTextLike;\r\n\tserialize( manager: EShapeResourceManagerSerialization ): number;\r\n\tdeserialize( target: number, manager: EShapeResourceManagerDeserialization ): void;\r\n}\r\n"]}