{"version":3,"file":"e-shape-sizes.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/shape/e-shape-sizes.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { IPoint } from \"pixi.js\";\r\nimport { EShape } from \"./e-shape\";\r\n\r\nexport class EShapeSizes {\r\n\tstatic toRounded( value: number ): number {\r\n\t\treturn Math.round( value * 100 ) / 100;\r\n\t}\r\n\r\n\tstatic toNormalized( size: number ): number {\r\n\t\tconst THRESHOLD = 0.001;\r\n\t\tif( Math.abs( size ) < THRESHOLD ) {\r\n\t\t\treturn ( size < 0 ? -THRESHOLD : +THRESHOLD );\r\n\t\t}\r\n\t\treturn EShapeSizes.toRounded( size );\r\n\t}\r\n\r\n\tstatic resize( shape: EShape, from: IPoint, to: IPoint, centerMode: boolean, isPerfect: boolean ): void {\r\n\t\tshape.disallowUploadedUpdate();\r\n\t\tconst position = shape.transform.position;\r\n\t\tif( centerMode ) {\r\n\t\t\tconst dx = Math.abs(to.x - from.x);\r\n\t\t\tconst dy = Math.abs(to.y - from.y);\r\n\t\t\tif (isPerfect) {\r\n\t\t\t\tconst hsize = Math.max(dx, dy);\r\n\t\t\t\tconst size = hsize + hsize;\r\n\t\t\t\tshape.size.set(\r\n\t\t\t\t\tEShapeSizes.toNormalized( size ),\r\n\t\t\t\t\tEShapeSizes.toNormalized( size )\r\n\t\t\t\t);\r\n\t\t\t\tposition.set(\r\n\t\t\t\t\tEShapeSizes.toRounded( from.x ),\r\n\t\t\t\t\tEShapeSizes.toRounded( from.y )\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tshape.size.set(\r\n\t\t\t\t\tEShapeSizes.toNormalized( dx + dx ),\r\n\t\t\t\t\tEShapeSizes.toNormalized( dy + dy )\r\n\t\t\t\t);\r\n\t\t\t\tposition.set(\r\n\t\t\t\t\tEShapeSizes.toRounded( from.x ),\r\n\t\t\t\t\tEShapeSizes.toRounded( from.y )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( isPerfect ) {\r\n\t\t\t\tconst dx = to.x - from.x;\r\n\t\t\t\tconst dy = to.y - from.y;\r\n\t\t\t\tconst size = Math.max(Math.abs(dx), Math.abs(dy));\r\n\t\t\t\tconst x2 = from.x + (dx < 0 ? -size : +size);\r\n\t\t\t\tconst y2 = from.y + (dy < 0 ? -size : +size);\r\n\t\t\t\tconst hsize = size * 0.5;\r\n\t\t\t\tconst x = Math.min(from.x, x2) + hsize;\r\n\t\t\t\tconst y = Math.min(from.y, y2) + hsize;\r\n\t\t\t\tshape.size.set(\r\n\t\t\t\t\tEShapeSizes.toNormalized( size ),\r\n\t\t\t\t\tEShapeSizes.toNormalized( size )\r\n\t\t\t\t);\r\n\t\t\t\tposition.set(\r\n\t\t\t\t\tEShapeSizes.toRounded( x ),\r\n\t\t\t\t\tEShapeSizes.toRounded( y )\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tconst x0 = Math.min(from.x, to.x);\r\n\t\t\t\tconst y0 = Math.min(from.y, to.y);\r\n\t\t\t\tconst x1 = Math.max(from.x, to.x);\r\n\t\t\t\tconst y1 = Math.max(from.y, to.y);\r\n\t\t\t\tconst width = x1 - x0;\r\n\t\t\t\tconst height = y1 - y0;\r\n\t\t\t\tconst px = width * 0.5;\r\n\t\t\t\tconst py = height * 0.5;\r\n\t\t\t\tshape.size.set(\r\n\t\t\t\t\tEShapeSizes.toNormalized( width ),\r\n\t\t\t\t\tEShapeSizes.toNormalized( height )\r\n\t\t\t\t);\r\n\t\t\t\tposition.set(\r\n\t\t\t\t\tEShapeSizes.toRounded( x0 + px ),\r\n\t\t\t\t\tEShapeSizes.toRounded( y0 + py )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tshape.allowUploadedUpdate();\r\n\t}\r\n}\r\n"]}