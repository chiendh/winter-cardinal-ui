{"version":3,"file":"d-diagrams.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-diagrams.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBase } from \"./d-base\";\r\nimport { DDiagramLayerContainer } from \"./d-diagram-layer-container\";\r\nimport { DDiagramSerialized, DDiagramSerializedSimple } from \"./d-diagram-serialized\";\r\nimport { EShape } from \"./shape/e-shape\";\r\nimport { EShapeDefaults } from \"./shape/e-shape-defaults\";\r\nimport { EShapeDeserializer } from \"./shape/e-shape-deserializer\";\r\n\r\nexport class DDiagrams {\r\n\tstatic toSerialized( target: DDiagramSerializedSimple | DDiagramSerialized ): DDiagramSerialized {\r\n\t\tif( \"data\" in target ) {\r\n\t\t\tconst result: DDiagramSerialized = JSON.parse( target.data );\r\n\t\t\tresult.id = target.id;\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic newLayer(\r\n\t\tserialized: DDiagramSerialized,\r\n\t\tcontainer: DDiagramLayerContainer\r\n\t): Promise<EShape[]> {\r\n\t\t// Layers\r\n\t\tconst pflayers = serialized.layers;\r\n\t\tfor( let i = 0, imax = pflayers.length; i < imax; ++i ) {\r\n\t\t\tcontainer.create( pflayers[ i ][ 0 ] || \"\" );\r\n\t\t}\r\n\r\n\t\t// Activate the first later if it exists\r\n\t\tif( 0 < container.size() ) {\r\n\t\t\tcontainer.active = container.children[ 0 ];\r\n\t\t}\r\n\r\n\t\t// Items\r\n\t\tconst pfresources = serialized.resources;\r\n\t\tconst pfitems = serialized.items;\r\n\t\tconst shapePromises = EShapeDeserializer.deserializeAll( pfitems, pfresources );\r\n\t\tif( shapePromises != null ) {\r\n\t\t\treturn shapePromises.then(( shapes: EShape[] ): EShape[] => {\r\n\t\t\t\tconst layers = container.children;\r\n\t\t\t\tfor( let i = 0, imax = shapes.length; i < imax; ++i ) {\r\n\t\t\t\t\tconst pfitem = pfitems[ i ];\r\n\t\t\t\t\tconst shape = shapes[ i ];\r\n\t\t\t\t\tconst layer = layers[ pfitem[ 16 ] ];\r\n\t\t\t\t\tif( layer != null ) {\r\n\t\t\t\t\t\tshape.attach( layer );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn shapes;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve([]);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic applyBackground(\r\n\t\tserialized: DDiagramSerialized,\r\n\t\tcanvas: DBase,\r\n\t\tcanvasContainer: DBase\r\n\t): void {\r\n\t\tconst background = serialized.background;\r\n\t\tconst backgroundColor = ( background && background.color != null ? background.color : 0xffffff );\r\n\t\tconst backgroundAlpha = ( background && background.alpha != null ? background.alpha : 1.0 );\r\n\t\tif( EShapeDefaults.IS_EDIT_MODE ) {\r\n\t\t\tconst canvasBackground = canvas.background;\r\n\t\t\tcanvasBackground.color = backgroundColor;\r\n\t\t\tcanvasBackground.alpha = backgroundAlpha;\r\n\t\t} else {\r\n\t\t\tconst canvasContainerBackground = canvasContainer.background;\r\n\t\t\tcanvasContainerBackground.color = backgroundColor;\r\n\t\t\tcanvasContainerBackground.alpha = backgroundAlpha;\r\n\t\t}\r\n\t}\r\n}\r\n"]}