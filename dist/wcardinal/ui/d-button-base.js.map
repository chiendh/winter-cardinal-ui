{"version":3,"file":"d-button-base.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-button-base.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { interaction } from \"pixi.js\";\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBaseStates } from \"./d-base-states\";\r\nimport { DButtonGroup } from \"./d-button-group\";\r\nimport { DImageBase, DImageBaseOnOptions, DImageBaseOptions, DThemeImageBase } from \"./d-image-base\";\r\nimport { UtilKeyboardEvent } from \"./util/util-keyboard-event\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\n\r\n/**\r\n * Mappings of event names and handlers.\r\n */\r\nexport interface DButtonBaseOnOptions<VALUE> extends DImageBaseOnOptions<VALUE> {\r\n\t/**\r\n\t * Called when the button is activated.\r\n\t *\r\n\t * @param self an activated button\r\n\t */\r\n\tactive?: ( self: any ) => void;\r\n\r\n\t/**\r\n\t * Called when the button is inactivated.\r\n\t *\r\n\t * @param self an inactivated button\r\n\t */\r\n\tinactive?: ( self: any ) => void;\r\n}\r\n\r\n/**\r\n * Base button options.\r\n */\r\nexport interface DButtonBaseOptions<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeButtonBase = DThemeButtonBase\r\n> extends DImageBaseOptions<VALUE, THEME> {\r\n\t/**\r\n\t * True to turn a toggle mode on.\r\n\t */\r\n\ttoggle?: boolean;\r\n\r\n\t/**\r\n\t * A button group.\r\n\t */\r\n\tgroup?: DButtonGroup;\r\n\r\n\t/**\r\n\t * Mappings of event names and handlers.\r\n\t */\r\n\ton?: DButtonBaseOnOptions<VALUE>;\r\n}\r\n\r\n/**\r\n * A base button theme.\r\n */\r\nexport interface DThemeButtonBase extends DThemeImageBase {\r\n\t/**\r\n\t * Returns true to turn a toggle mode on.\r\n\t */\r\n\tisToggle(): boolean;\r\n}\r\n\r\n// Option parser\r\nconst isToggle = <VALUE, THEME extends DThemeButtonBase>(\r\n\ttheme: DThemeButtonBase, options: DButtonBaseOptions<VALUE, THEME> | undefined\r\n): boolean => {\r\n\tif( options != null && options.toggle != null ) {\r\n\t\treturn options.toggle;\r\n\t}\r\n\treturn theme.isToggle();\r\n};\r\n\r\nexport class DButtonBase<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeButtonBase = DThemeButtonBase,\r\n\tOPTIONS extends DButtonBaseOptions<VALUE, THEME> = DButtonBaseOptions<VALUE, THEME>\r\n> extends DImageBase<VALUE, THEME, OPTIONS> {\r\n\tprotected _isToggle!: boolean;\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tthis.buttonMode = true;\r\n\t\tthis._isToggle = isToggle( this.theme, options );\r\n\r\n\t\t// Event handlers\r\n\t\tthis.initOnClick( options );\r\n\t\tif( ! this._isToggle ) {\r\n\t\t\tthis.initOnPress( options );\r\n\t\t}\r\n\r\n\t\t// Group\r\n\t\tconst group = options && options.group;\r\n\t\tif( group ) {\r\n\t\t\tgroup.add( this );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onShortcut( e: KeyboardEvent ): void {\r\n\t\tsuper.onShortcut( e );\r\n\t\tthis.onClick( e );\r\n\t}\r\n\r\n\tisToggle(): boolean {\r\n\t\treturn this._isToggle;\r\n\t}\r\n\r\n\tprotected initOnClick( options?: OPTIONS ): void {\r\n\t\tUtilPointerEvent.onClick( this, ( e: interaction.InteractionEvent ): void => {\r\n\t\t\tthis.onClick( e );\r\n\t\t});\r\n\t}\r\n\r\n\tprotected initOnPress( options?: OPTIONS ): void {\r\n\t\tlet interactionManager: interaction.InteractionManager | null = null;\r\n\r\n\t\tconst onUp = (): void => {\r\n\t\t\tthis.setPressed( false );\r\n\t\t\tif( interactionManager != null ) {\r\n\t\t\t\tinteractionManager.off( UtilPointerEvent.up, onUp );\r\n\t\t\t\tinteractionManager = null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.on( UtilPointerEvent.down, (): void => {\r\n\t\t\tthis.setPressed( true );\r\n\t\t\tconst layer = DApplications.getLayer( this );\r\n\t\t\tif( layer ) {\r\n\t\t\t\tinteractionManager = layer.renderer.plugins.interaction;\r\n\t\t\t\tinteractionManager.on( UtilPointerEvent.up, onUp );\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected onStateChange( newState: number, oldState: number ): void {\r\n\t\tsuper.onStateChange( newState, oldState );\r\n\t\tthis.buttonMode = DBaseStates.isActionable( newState );\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DButton\";\r\n\t}\r\n\r\n\tonClick( e?: interaction.InteractionEvent | KeyboardEvent | MouseEvent | TouchEvent ): void {\r\n\t\tif( this.isActionable() ) {\r\n\t\t\tif( this.isToggle() ) {\r\n\t\t\t\tthis.onToggleStart();\r\n\t\t\t\tthis.onToggleEnd();\r\n\t\t\t} else {\r\n\t\t\t\tthis.onActivate( e );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onActivate( e?: interaction.InteractionEvent | KeyboardEvent | MouseEvent | TouchEvent ): void {\r\n\t\tthis.emit( \"active\", this );\r\n\t}\r\n\r\n\ttoggle(): void {\r\n\t\tif( this.isActionable() ) {\r\n\t\t\tif( this.isToggle() ) {\r\n\t\t\t\tthis.onToggleStart();\r\n\t\t\t\tthis.onToggleEnd();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onToggleStart(): void {\r\n\t\tthis.setActive( ! this.isActive() );\r\n\t}\r\n\r\n\tprotected onToggleEnd(): void {\r\n\t\tthis.emit( this.isActive() ? \"active\" : \"inactive\", this );\r\n\t}\r\n\r\n\tprotected onActivateKeyDown( e: KeyboardEvent ): void {\r\n\t\tif( this.isActionable() ) {\r\n\t\t\tif( this.isToggle() ) {\r\n\t\t\t\tthis.onToggleStart();\r\n\t\t\t} else {\r\n\t\t\t\tthis.setPressed( true );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onActivateKeyUp( e: KeyboardEvent ): void {\r\n\t\tif( this.isActionable() ) {\r\n\t\t\tif( this.isToggle() ) {\r\n\t\t\t\tthis.onToggleEnd();\r\n\t\t\t} else {\r\n\t\t\t\tif( this.isPressed() ) {\r\n\t\t\t\t\tthis.onActivate( e );\r\n\t\t\t\t}\r\n\t\t\t\tthis.setPressed( false );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyDown( e: KeyboardEvent ): boolean {\r\n\t\tif( UtilKeyboardEvent.isActivateKey( e ) ) {\r\n\t\t\tthis.onActivateKeyDown( e );\r\n\t\t}\r\n\r\n\t\treturn super.onKeyDown( e );\r\n\t}\r\n\r\n\tonKeyUp( e: KeyboardEvent ): boolean {\r\n\t\tif( UtilKeyboardEvent.isActivateKey( e ) ) {\r\n\t\t\tthis.onActivateKeyUp( e );\r\n\t\t}\r\n\r\n\t\treturn super.onKeyUp( e );\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\t// Group\r\n\t\tconst options = this._options;\r\n\t\tif( options != null && options.group != null ) {\r\n\t\t\toptions.group.remove( this );\r\n\t\t}\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n"]}