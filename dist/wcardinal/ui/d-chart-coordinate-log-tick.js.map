{"version":3,"file":"d-chart-coordinate-log-tick.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-coordinate-log-tick.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DChartCoordinate } from \"./d-chart-coordinate\";\r\n\r\nexport interface DThemeChartCoordinateLogTick {\r\n\ttoStepScale( scale: number ): number;\r\n}\r\n\r\nexport class DChartCoordinateLogTick {\r\n\tprotected _theme: DThemeChartCoordinateLogTick;\r\n\r\n\tconstructor( theme: DThemeChartCoordinateLogTick ) {\r\n\t\tthis._theme = theme;\r\n\t}\r\n\r\n\tprotected calcStepMajor( domainMin: number, domainMax: number, count: number ): number {\r\n\t\tif( 0 < count ) {\r\n\t\t\tconst span = Math.abs( domainMax - domainMin ) / count;\r\n\t\t\tconst power = Math.floor( Math.log( span ) / Math.LN10 );\r\n\t\t\tconst base = Math.pow( 10, power );\r\n\t\t\treturn this._theme.toStepScale( span / base ) * base;\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tprotected calcStepMinor( step: number, minorCount: number ): number {\r\n\t\tif( 0 <= step ) {\r\n\t\t\treturn step / ( minorCount + 1 );\r\n\t\t} else {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected calcTickMinorPositions(\r\n\t\tstep: number, count: number, majorPosition: number,\r\n\t\trangeMin: number, rangeMax: number,\r\n\t\tiresult: number, result: Float64Array\r\n\t): void {\r\n\t\tfor( let i = 0; i < count; i += 1 ) {\r\n\t\t\tconst minorPosition = majorPosition + (i + 1) * step;\r\n\t\t\tif( rangeMin <= minorPosition && minorPosition <= rangeMax ) {\r\n\t\t\t\tresult[ iresult++ ] = minorPosition;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcalculate(\r\n\t\tdomainFrom: number, domainTo: number,\r\n\t\tmajorCount: number,\r\n\t\tminorCountPerMajor: number,\r\n\t\tminorCount: number,\r\n\t\tmajorResult: Float64Array,\r\n\t\tminorResult: Float64Array,\r\n\t\tcoordinate: DChartCoordinate\r\n\t): void {\r\n\t\tif( majorCount <= 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst transform = coordinate.transform;\r\n\r\n\t\tconst domainFromMapped = coordinate.map( domainFrom );\r\n\t\tconst domainToMapped = coordinate.map( domainTo );\r\n\r\n\t\tconst domainMinMapped = Math.min( domainFromMapped, domainToMapped );\r\n\t\tconst domainMaxMapped = Math.max( domainFromMapped, domainToMapped );\r\n\r\n\t\tconst majorStepMapped = this.calcStepMajor( domainMinMapped, domainMaxMapped, majorCount );\r\n\t\tif( majorStepMapped <= 0 ) {\r\n\t\t\tconst domainMin = Math.min( domainFrom, domainTo );\r\n\t\t\tmajorResult[ 0 ] = domainMin;\r\n\t\t\tmajorResult[ 1 ] = transform.map( coordinate.map( domainMin ) );\r\n\t\t\tmajorResult[ 2 ] = 0;\r\n\t\t\tfor( let i = 1; i < majorCount; ++i ) {\r\n\t\t\t\tconst imajorResult = i * 3;\r\n\t\t\t\tmajorResult[ imajorResult + 0 ] = NaN;\r\n\t\t\t\tmajorResult[ imajorResult + 1 ] = NaN;\r\n\t\t\t\tmajorResult[ imajorResult + 2 ] = NaN;\r\n\t\t\t}\r\n\t\t\tfor( let i = 0; i < minorCount; ++i ) {\r\n\t\t\t\tconst iminorResult = i * 3;\r\n\t\t\t\tminorResult[ iminorResult + 0 ] = NaN;\r\n\t\t\t\tminorResult[ iminorResult + 1 ] = NaN;\r\n\t\t\t\tminorResult[ iminorResult + 2 ] = NaN;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Major tick start position\r\n\t\tconst idomainStartMapped = Math.floor( domainMinMapped / majorStepMapped ) - 1;\r\n\t\tconst idomainEndMapped = Math.ceil( domainMaxMapped / majorStepMapped ) + 1;\r\n\r\n\t\t// Major / minor tick positions\r\n\t\tconst minorStepMapped = this.calcStepMinor( majorStepMapped, minorCountPerMajor );\r\n\t\tlet imajor = 0;\r\n\t\tlet iminor = 0;\r\n\t\tfor( let i = idomainStartMapped; i <= idomainEndMapped; ++i ) {\r\n\t\t\tconst majorPositionMapped = i * majorStepMapped;\r\n\t\t\tif( imajor < majorCount ) {\r\n\t\t\t\tif( domainMinMapped <= majorPositionMapped && majorPositionMapped <= domainMaxMapped ) {\r\n\t\t\t\t\tconst majorPosition = coordinate.unmap( majorPositionMapped );\r\n\t\t\t\t\tconst majorProjectedPosition = transform.map( majorPositionMapped );\r\n\t\t\t\t\tconst majorStep = coordinate.unmap( majorPositionMapped - 1 );\r\n\t\t\t\t\tconst imajorResult = imajor * 3;\r\n\t\t\t\t\tmajorResult[ imajorResult + 0 ] = majorPosition;\r\n\t\t\t\t\tmajorResult[ imajorResult + 1 ] = majorProjectedPosition;\r\n\t\t\t\t\tmajorResult[ imajorResult + 2 ] = majorStep;\r\n\t\t\t\t\timajor += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor( let j = 0; j < minorCountPerMajor; j += 1 ) {\r\n\t\t\t\tif( iminor < minorCount ) {\r\n\t\t\t\t\tconst minorPositionMapped = majorPositionMapped + (j + 1) * minorStepMapped;\r\n\t\t\t\t\tif( domainMinMapped <= minorPositionMapped && minorPositionMapped <= domainMaxMapped ) {\r\n\t\t\t\t\t\tconst minorPosition = coordinate.unmap( minorPositionMapped );\r\n\t\t\t\t\t\tconst minorProjectedPosition = transform.map( minorPositionMapped );\r\n\t\t\t\t\t\tconst minorStep = coordinate.unmap( minorPositionMapped - 1 );\r\n\t\t\t\t\t\tconst iminorResult = iminor * 3;\r\n\t\t\t\t\t\tminorResult[ iminorResult + 0 ] = minorPosition;\r\n\t\t\t\t\t\tminorResult[ iminorResult + 1 ] = minorProjectedPosition;\r\n\t\t\t\t\t\tminorResult[ iminorResult + 2 ] = minorStep;\r\n\t\t\t\t\t\timinor += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor( let i = imajor; i < majorCount; ++i ) {\r\n\t\t\tconst imajorResult = i * 3;\r\n\t\t\tmajorResult[ imajorResult + 0 ] = NaN;\r\n\t\t\tmajorResult[ imajorResult + 1 ] = NaN;\r\n\t\t\tmajorResult[ imajorResult + 2 ] = NaN;\r\n\t\t}\r\n\t\tfor( let i = iminor; i < minorCount; ++i ) {\r\n\t\t\tconst iminorResult = i * 3;\r\n\t\t\tminorResult[ iminorResult + 0 ] = NaN;\r\n\t\t\tminorResult[ iminorResult + 1 ] = NaN;\r\n\t\t\tminorResult[ iminorResult + 2 ] = NaN;\r\n\t\t}\r\n\t}\r\n}\r\n"]}