{"version":3,"file":"d-map-tile-pyramid-impl.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-map-tile-pyramid-impl.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Point, Renderer, utils } from \"pixi.js\";\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBase } from \"./d-base\";\r\nimport { DMapCoordinate } from \"./d-map-coordinate\";\r\nimport { DMapTileMapping } from \"./d-map-tile-mapping\";\r\nimport { DMapTileMappingInternal } from \"./d-map-tile-mapping-internal\";\r\nimport { DMapTilePlane } from \"./d-map-tile-plane\";\r\nimport { DMapTilePyramid, DMapTilePyramidOptions } from \"./d-map-tile-pyramid\";\r\nimport { DMapTileUrlBuilder } from \"./d-map-tile-url-builder\";\r\n\r\nexport class DMapTilePyramidImpl extends utils.EventEmitter implements DMapTilePyramid {\r\n\tprotected static WORK_LONLAT: Point = new Point();\r\n\r\n\tprotected readonly _canvas: DBase;\r\n\tprotected readonly _builder: DMapTileUrlBuilder;\r\n\tprotected readonly _planes: Array<DMapTilePlane | undefined>;\r\n\tprotected _z: number;\r\n\tprotected _tz: number;\r\n\tprotected _minZ: number;\r\n\tprotected _maxZ: number;\r\n\tprotected _mapping: DMapTileMapping;\r\n\tprotected _mappingInternal: DMapTileMappingInternal;\r\n\tprotected _coordinate: DMapCoordinate;\r\n\tprotected _onLoadedBound: () => void;\r\n\tprotected _fitBound: () => void;\r\n\tprotected _fitBoundTimeout: number | undefined;\r\n\tprotected _fitThrottledBound: () => void;\r\n\tprotected _fitThrottle: number;\r\n\r\n\tconstructor( options: DMapTilePyramidOptions ) {\r\n\t\tsuper();\r\n\t\tconst canvas = this._canvas = options.canvas;\r\n\t\tthis._builder = options.builder;\r\n\t\tconst mappingLonLat = this._mapping = options.mapping;\r\n\t\tconst coordinate = this._coordinate = options.coordinate;\r\n\t\tthis._mappingInternal = this.toMapping( canvas, mappingLonLat, coordinate );\r\n\t\tthis._z = NaN;\r\n\t\tthis._tz = NaN;\r\n\t\tthis._minZ = options.plane.min;\r\n\t\tthis._maxZ = options.plane.max;\r\n\t\tthis._planes = [];\r\n\t\tthis._onLoadedBound = (): void => {\r\n\t\t\tthis.onLoaded();\r\n\t\t};\r\n\t\tthis._fitBound = (): void => {\r\n\t\t\tthis._fitBoundTimeout = undefined;\r\n\t\t\tthis.fit();\r\n\t\t};\r\n\t\tthis._fitThrottle = options.plane.throttle;\r\n\t\tconst fitThrottledBound = this._fitThrottledBound = (): void => {\r\n\t\t\tthis.fitThrottled();\r\n\t\t};\r\n\t\tcanvas.on( \"scale\", fitThrottledBound );\r\n\t\tcanvas.on( \"move\", fitThrottledBound );\r\n\t\tcanvas.appendRenderable( this, true );\r\n\t}\r\n\r\n\tget coordinate(): DMapCoordinate {\r\n\t\treturn this._coordinate;\r\n\t}\r\n\r\n\tprotected fitThrottled(): void {\r\n\t\tif( this._fitBoundTimeout == null ) {\r\n\t\t\tthis._fitBoundTimeout = window.setTimeout( this._fitBound, this._fitThrottle );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toMapping( canvas: DBase, mapping: DMapTileMapping, coordinate: DMapCoordinate ): DMapTileMappingInternal {\r\n\t\tconst work = DMapTilePyramidImpl.WORK_LONLAT;\r\n\t\tconst tileSize = coordinate.getTileSize();\r\n\r\n\t\twork.set( mapping.from.lon, mapping.from.lat );\r\n\t\tcoordinate.lonLatToPixels( work, 0, tileSize, work );\r\n\t\tconst x0 = work.x;\r\n\t\tconst y0 = work.y;\r\n\r\n\t\twork.set( mapping.to.lon, mapping.to.lat );\r\n\t\tcoordinate.lonLatToPixels( work, 0, tileSize, work );\r\n\t\tconst x1 = work.x;\r\n\t\tconst y1 = work.y;\r\n\r\n\t\tconst dx = Math.abs(x1 - x0);\r\n\t\tconst dy = Math.abs(y1 - y0);\r\n\t\tconst dmin = 0.0000001;\r\n\t\tlet scale = 1;\r\n\t\tif( dmin < dx ) {\r\n\t\t\tif( dmin < dy ) {\r\n\t\t\t\tscale = Math.max( canvas.width / dx, canvas.height / dy );\r\n\t\t\t} else {\r\n\t\t\t\tscale = canvas.width / dx;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( dmin < dy ) {\r\n\t\t\t\tscale = canvas.height / dy;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tscale,\r\n\t\t\tx: 0.5 * (x1 + x0) / tileSize,\r\n\t\t\ty: 0.5 * (y1 + y0) / tileSize\r\n\t\t};\r\n\t}\r\n\r\n\tget mapping(): DMapTileMapping {\r\n\t\treturn this._mapping;\r\n\t}\r\n\r\n\tset mapping( mapping: DMapTileMapping ) {\r\n\t\tconst oldMapping = this._mappingInternal;\r\n\t\tconst newMapping = this.toMapping( this._canvas, mapping, this._coordinate );\r\n\t\tconst threshold = 0.0000001;\r\n\t\tif(\r\n\t\t\tthreshold < Math.abs(oldMapping.scale - newMapping.scale) ||\r\n\t\t\tthreshold < Math.abs(oldMapping.x - newMapping.x) ||\r\n\t\t\tthreshold < Math.abs(oldMapping.y - newMapping.y)\r\n\t\t) {\r\n\t\t\tthis._mappingInternal = newMapping;\r\n\r\n\t\t\tconst planes = this._planes;\r\n\t\t\tfor( let i = 0, imax = planes.length; i < imax; ++i ) {\r\n\t\t\t\tconst plane = planes[ i ];\r\n\t\t\t\tif( plane ) {\r\n\t\t\t\t\tplane.mapping = newMapping;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tDApplications.update( this._canvas );\r\n\r\n\t\t\tthis._fitThrottledBound();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected newPlane( tz: number ): DMapTilePlane {\r\n\t\treturn new DMapTilePlane(\r\n\t\t\tthis._canvas,\r\n\t\t\tthis._builder,\r\n\t\t\ttz,\r\n\t\t\tthis._mappingInternal,\r\n\t\t\tthis._coordinate,\r\n\t\t\tthis._onLoadedBound\r\n\t\t);\r\n\t}\r\n\r\n\trender( renderer: Renderer ): void {\r\n\t\tconst tz = this._tz;\r\n\t\tconst planes = this._planes;\r\n\t\tfor( let i = 0; i < tz; ++i ) {\r\n\t\t\tconst plane = planes[ i ];\r\n\t\t\tif( plane != null ) {\r\n\t\t\t\tplane.render( renderer );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor( let i = planes.length - 1; tz < i; --i ) {\r\n\t\t\tconst plane = planes[ i ];\r\n\t\t\tif( plane != null ) {\r\n\t\t\t\tplane.render( renderer );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst planeTz = planes[ tz ];\r\n\t\tif( planeTz != null ) {\r\n\t\t\tplaneTz.render( renderer );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toTileZ( tz: number ): number {\r\n\t\treturn Math.min( this._maxZ, Math.max( this._minZ, Math.floor( tz ) ) );\r\n\t}\r\n\r\n\tupdateTransform(): void {\r\n\t\t// DO NOTHING\r\n\t}\r\n\r\n\tprotected toZ( scale: number ): number {\r\n\t\treturn Math.log( this._mappingInternal.scale * scale ) / Math.log( 2 );\r\n\t}\r\n\r\n\tmove( scale: number, lon0: number, lat0: number, lon1: number, lat1: number ): this {\r\n\t\tconst planes = this._planes;\r\n\t\tconst z = this.toZ( scale );\r\n\t\tif( this._z !== z ) {\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\tconst tz = this.toTileZ( z );\r\n\t\t\tif( this._tz !== tz ) {\r\n\t\t\t\tthis._tz = tz;\r\n\r\n\t\t\t\tlet newPlane = planes[ tz ];\r\n\t\t\t\tif( newPlane == null ) {\r\n\t\t\t\t\tnewPlane = this.newPlane( tz );\r\n\t\t\t\t\tplanes[ tz ] = newPlane;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst plane = planes[ this._tz ];\r\n\t\tif( plane != null ) {\r\n\t\t\tplane.move( lon0, lat0, lon1, lat1 );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tfit(): this {\r\n\t\tconst canvas = this._canvas;\r\n\t\tif( canvas != null ) {\r\n\t\t\tconst container = canvas.parent;\r\n\t\t\tif( container != null ) {\r\n\t\t\t\tconst scale = canvas.scale;\r\n\t\t\t\tconst scaleX = scale.x;\r\n\t\t\t\tconst scaleY = scale.y;\r\n\t\t\t\tconst x = canvas.x;\r\n\t\t\t\tconst y = canvas.y;\r\n\t\t\t\tconst coordinate = this._coordinate;\r\n\t\t\t\tconst mapping = this._mappingInternal;\r\n\t\t\t\tconst tileSize = coordinate.getTileSize() * mapping.scale;\r\n\t\t\t\tconst x0 = mapping.x * tileSize - (x / scaleX + 0.5 * canvas.width);\r\n\t\t\t\tconst x1 = x0 + container.width / scaleX;\r\n\t\t\t\tconst y0 = mapping.y * tileSize - (y / scaleY + 0.5 * canvas.height);\r\n\t\t\t\tconst y1 = y0 + container.height / scaleY;\r\n\r\n\t\t\t\tconst work = DMapTilePyramidImpl.WORK_LONLAT;\r\n\t\t\t\twork.set( x0, y0 );\r\n\t\t\t\tcoordinate.pixelsToLonLat( work, 0, tileSize, work );\r\n\t\t\t\tconst lon0 = work.x;\r\n\t\t\t\tconst lat0 = work.y;\r\n\r\n\t\t\t\twork.set( x1, y1 );\r\n\t\t\t\tcoordinate.pixelsToLonLat( work, 0, tileSize, work );\r\n\t\t\t\tconst lon1 = work.x;\r\n\t\t\t\tconst lat1 = work.y;\r\n\r\n\t\t\t\tthis.move( scaleX, lon0, lat0, lon1, lat1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprotected destroyPlanesBefore( tz: number, planes: Array<DMapTilePlane | undefined> ): void {\r\n\t\tfor( let i = 0; i < tz; ++i ) {\r\n\t\t\tconst plane = planes[ i ];\r\n\t\t\tif( plane ) {\r\n\t\t\t\tplane.destroy();\r\n\t\t\t\tplanes[ i ] = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected destroyPlanesAfter( tz: number, planes: Array<DMapTilePlane | undefined> ): void {\r\n\t\tfor( let i = tz + 1, imax = planes.length; i < imax; ++i ) {\r\n\t\t\tconst plane = planes[ i ];\r\n\t\t\tif( plane ) {\r\n\t\t\t\tplane.destroy();\r\n\t\t\t\tplanes[ i ] = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected cleanup(): void {\r\n\t\tconst tz = this._tz;\r\n\t\tconst planes = this._planes;\r\n\t\tconst planeTz = planes[ tz ];\r\n\t\tif( planeTz && planeTz.loaded ) {\r\n\t\t\tthis.destroyPlanesBefore( tz, planes );\r\n\t\t\tthis.destroyPlanesAfter( tz, planes );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor( let i = tz + 1, imax = planes.length; i < imax; ++i ) {\r\n\t\t\tconst plane = planes[ i ];\r\n\t\t\tif( plane && plane.loaded ) {\r\n\t\t\t\tthis.destroyPlanesBefore( tz, planes );\r\n\t\t\t\tthis.destroyPlanesAfter( i, planes );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor( let i = tz - 1; 0 <= i; --i ) {\r\n\t\t\tconst plane = planes[ i ];\r\n\t\t\tif( plane && plane.loaded ) {\r\n\t\t\t\tthis.destroyPlanesBefore( i, planes );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onLoaded(): void {\r\n\t\tthis.cleanup();\r\n\t\tDApplications.update( this._canvas );\r\n\t}\r\n\r\n\tdestroy(): this {\r\n\t\tconst planes = this._planes;\r\n\t\tfor( let i = 0, imax = planes.length; i < imax; ++i ) {\r\n\t\t\tconst plane = planes[ i ];\r\n\t\t\tif( plane ) {\r\n\t\t\t\tplane.destroy();\r\n\t\t\t\tplanes[ i ] = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst canvas = this._canvas;\r\n\t\tconst fitThrottledBound = this._fitThrottledBound;\r\n\t\tcanvas.off( \"scale\", fitThrottledBound );\r\n\t\tcanvas.off( \"move\", fitThrottledBound );\r\n\t\tcanvas.removeRenderable( this, true );\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n"]}