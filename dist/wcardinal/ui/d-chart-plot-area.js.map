{"version":3,"file":"d-chart-plot-area.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-plot-area.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { interaction, Point, Rectangle, Renderer } from \"pixi.js\";\r\nimport { DAnimationTimings } from \"./d-animation-timings\";\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBase, DBaseOptions, DThemeBase } from \"./d-base\";\r\nimport { DBaseOverflowMask } from \"./d-base-overflow-mask\";\r\nimport { DChart } from \"./d-chart\";\r\nimport { DChartAxisContainer, DChartAxisContainerOptions } from \"./d-chart-axis-container\";\r\nimport { DChartAxisContainerImpl } from \"./d-chart-axis-container-impl\";\r\nimport { DChartCoordinateContainer, DChartCoordinateContainerOptions } from \"./d-chart-coordinate-container\";\r\nimport { DChartCoordinateContainerImpl } from \"./d-chart-coordinate-container-impl\";\r\nimport { DChartPlotAreaContainer } from \"./d-chart-plot-area-container\";\r\nimport { DChartSeriesContainer, DChartSeriesContainerOptions } from \"./d-chart-series-container\";\r\nimport { DChartSeriesContainerImpl } from \"./d-chart-series-container-impl\";\r\nimport { DView, DViewOptions } from \"./d-view\";\r\nimport { DViewImpl } from \"./d-view-impl\";\r\nimport { UtilWheelEventDeltas } from \"./util/util-wheel-event\";\r\n\r\nexport interface DChartPlotAreaOptions<\r\n\tTHEME extends DThemeChartPlotArea = DThemeChartPlotArea\r\n> extends DBaseOptions<THEME> {\r\n\tmask?: boolean;\r\n\tcoordinate?: DChartCoordinateContainerOptions;\r\n\tseries?: DChartSeriesContainerOptions;\r\n\taxis?: DChartAxisContainerOptions;\r\n\tview?: DViewOptions;\r\n}\r\n\r\nexport interface DThemeChartPlotArea extends DThemeBase {\r\n\tisOverflowMaskEnabled(): boolean;\r\n}\r\n\r\nexport class DChartPlotArea<\r\n\tTHEME extends DThemeChartPlotArea = DThemeChartPlotArea,\r\n\tOPTIONS extends DChartPlotAreaOptions<THEME> = DChartPlotAreaOptions<THEME>\r\n> extends DBase<THEME, OPTIONS> {\r\n\tprotected _chart: DChart;\r\n\tprotected _container!: DChartPlotAreaContainer;\r\n\tprotected _series!: DChartSeriesContainerImpl;\r\n\tprotected _coordinate!: DChartCoordinateContainer;\r\n\tprotected _axis!: DChartAxisContainerImpl;\r\n\tprotected _view!: DViewImpl;\r\n\tprotected _isViewDirty!: boolean;\r\n\tprotected _isBoundsInContainerDirty!: boolean;\r\n\tprotected _boundsInContainer!: Rectangle;\r\n\tprotected _overflowMask!: DBaseOverflowMask | null;\r\n\tprotected _workPoint!: Point;\r\n\tprotected _blendStartTime: number;\r\n\tprotected _blendDuration: number;\r\n\tprotected _blendTimeout: number | null;\r\n\tprotected _onBlendBound: () => void;\r\n\r\n\tconstructor( chart: DChart, options?: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t\tthis._chart = chart;\r\n\t\tthis._blendStartTime = 0;\r\n\t\tthis._blendDuration = 1000;\r\n\t\tthis._blendTimeout = null;\r\n\t\tthis._onBlendBound = () => {\r\n\t\t\tthis.onBlend();\r\n\t\t};\r\n\t}\r\n\r\n\tprotected init( options?: OPTIONS ): void {\r\n\t\tsuper.init( options );\r\n\r\n\t\tconst container = new DChartPlotAreaContainer( (): void => {\r\n\t\t\tthis._isViewDirty = true;\r\n\t\t\tthis._isBoundsInContainerDirty = true;\r\n\t\t\tDApplications.update( this );\r\n\t\t});\r\n\t\tthis._container = container;\r\n\t\tthis._coordinate = new DChartCoordinateContainerImpl( this, options && options.coordinate );\r\n\t\tconst series = new DChartSeriesContainerImpl( this, options && options.series );\r\n\t\tthis._series = series;\r\n\t\tconst axis = new DChartAxisContainerImpl( this, options && options.axis );\r\n\t\tthis._axis = axis;\r\n\t\tthis._isViewDirty = true;\r\n\t\tthis._isBoundsInContainerDirty = true;\r\n\t\tthis._boundsInContainer = new Rectangle();\r\n\t\tthis._workPoint = new Point();\r\n\r\n\t\tthis.addChild( container );\r\n\t\tthis.addChild( axis.container );\r\n\r\n\t\tthis._view = new DViewImpl( this, () => container, options && options.view );\r\n\r\n\t\tconst selection = series.selection;\r\n\t\tif( selection ) {\r\n\t\t\tselection.bind( series );\r\n\t\t}\r\n\r\n\t\t// Overflow mask\r\n\t\tthis._overflowMask = null;\r\n\t\tif( options && options.mask != null ? options.mask :\r\n\t\t\tthis.theme.isOverflowMaskEnabled() ) {\r\n\t\t\tthis._container.mask = this.getOrCreateOverflowMask();\r\n\t\t}\r\n\t}\r\n\r\n\tonResize( newWidth: number, newHeight: number, oldWidth: number, oldHeight: number ): void {\r\n\t\tthis._isViewDirty = true;\r\n\t\tthis._isBoundsInContainerDirty = true;\r\n\t\tsuper.onResize( newWidth, newHeight, oldWidth, oldHeight );\r\n\t}\r\n\r\n\tprotected getOrCreateOverflowMask(): DBaseOverflowMask {\r\n\t\tif( this._overflowMask == null ) {\r\n\t\t\tthis._overflowMask = new DBaseOverflowMask( this );\r\n\t\t\tthis.addReflowable( this._overflowMask );\r\n\t\t\tthis.toDirty();\r\n\t\t}\r\n\t\treturn this._overflowMask;\r\n\t}\r\n\r\n\tget coordinate(): DChartCoordinateContainer {\r\n\t\treturn this._coordinate;\r\n\t}\r\n\r\n\tget chart(): DChart {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\tget series(): DChartSeriesContainer {\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\tget container(): DChartPlotAreaContainer {\r\n\t\treturn this._container;\r\n\t}\r\n\r\n\tget axis(): DChartAxisContainer {\r\n\t\treturn this._axis;\r\n\t}\r\n\r\n\tget view(): DView {\r\n\t\treturn this._view;\r\n\t}\r\n\r\n\tonWheel( e: WheelEvent, deltas: UtilWheelEventDeltas, global: Point ): boolean {\r\n\t\tconst vresult = this._view.onWheel( e, deltas, global );\r\n\t\tconst sresult = super.onWheel( e, deltas, global );\r\n\t\treturn vresult || sresult;\r\n\t}\r\n\r\n\tonDblClick( e: MouseEvent | TouchEvent, interactionManager: interaction.InteractionManager ): boolean {\r\n\t\tconst vresult = this._view.onDblClick( e, interactionManager );\r\n\t\tconst sresult = super.onDblClick( e, interactionManager );\r\n\t\treturn vresult || sresult;\r\n\t}\r\n\r\n\tprotected onDown( e: interaction.InteractionEvent ): void {\r\n\t\tthis._view.onDown( e );\r\n\t\tsuper.onDown( e );\r\n\t}\r\n\r\n\trender( renderer: Renderer ): void {\r\n\t\tif( this._isViewDirty ) {\r\n\t\t\tthis._isViewDirty = false;\r\n\r\n\t\t\tthis._axis.update();\r\n\r\n\t\t\tconst selection = this._series.selection;\r\n\t\t\tif( selection ) {\r\n\t\t\t\tselection.update();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.render( renderer );\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tthis._container.destroy();\r\n\t\tthis._series.destroy();\r\n\t\tthis._axis.destroy();\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DChartPlotArea\";\r\n\t}\r\n\r\n\tgetBoundsInContainer(): Rectangle {\r\n\t\tconst result = this._boundsInContainer;\r\n\t\tif( this._isBoundsInContainerDirty ) {\r\n\t\t\tthis._isBoundsInContainerDirty = false;\r\n\r\n\t\t\tconst container = this.container;\r\n\t\t\tcontainer.updateTransform();\r\n\t\t\tconst transform = container.transform.localTransform;\r\n\r\n\t\t\tconst work = this._workPoint;\r\n\r\n\t\t\twork.set( 0, 0 );\r\n\t\t\ttransform.applyInverse( work, work );\r\n\t\t\tresult.x = work.x;\r\n\t\t\tresult.y = work.y;\r\n\r\n\t\t\twork.set( this.width, this.height );\r\n\t\t\ttransform.applyInverse( work, work );\r\n\t\t\tresult.width = work.x - result.x;\r\n\t\t\tresult.height = work.y - result.y;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfit( duration?: number, domainFrom?: number, domainTo?: number, rangeFrom?: number, rangeTo?: number ): this {\r\n\t\tconst coordinate = this._coordinate;\r\n\t\tconst axis = this._axis;\r\n\t\tconst series = this._series;\r\n\t\tif( duration != null && duration <= 0 ) {\r\n\t\t\tcoordinate.fit( domainFrom, domainTo, rangeFrom, rangeTo );\r\n\t\t\taxis.update();\r\n\t\t\tseries.update();\r\n\t\t} else {\r\n\t\t\tthis._blendDuration = duration != null ? duration : 200;\r\n\t\t\tthis._blendStartTime = Date.now();\r\n\t\t\tcoordinate.mark( domainFrom, domainTo, rangeFrom, rangeTo );\r\n\t\t\tconst blendTimeout = this._blendTimeout;\r\n\t\t\tif( blendTimeout != null ) {\r\n\t\t\t\twindow.clearTimeout( blendTimeout );\r\n\t\t\t}\r\n\t\t\tthis._blendTimeout = window.setTimeout( this._onBlendBound, 0 );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprotected onBlend(): void {\r\n\t\tconst now = Date.now();\r\n\t\tlet ratio = (now - this._blendStartTime) / this._blendDuration;\r\n\t\tif( ratio < 1 ) {\r\n\t\t\tthis._blendTimeout = window.setTimeout( this._onBlendBound, 0 );\r\n\t\t} else {\r\n\t\t\tthis._blendTimeout = null;\r\n\t\t\tratio = 1;\r\n\t\t}\r\n\t\tthis._coordinate.blend( DAnimationTimings.ELASTIC( ratio ) );\r\n\t\tthis._axis.update();\r\n\t\tthis._series.update();\r\n\t}\r\n}\r\n"]}