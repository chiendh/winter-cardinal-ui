{"version":3,"file":"d-picker-color-and-alpha.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-picker-color-and-alpha.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAIH;IAKC,8BACC,aAA6B,EAC7B,aAAwC,EACxC,aAAwC;QAExC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACrC,CAAC;IAED,sBAAI,uCAAK;aAAT;YACC,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QAClC,CAAC;aAED,UAAW,KAAa;YACvB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,KAAK,KAAK,EAAG;gBACzC,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;gBACrC,IAAI,QAAQ,IAAI,IAAI,EAAG;oBACtB,QAAQ,CAAE,KAAK,CAAE,CAAC;iBAClB;aACD;QACF,CAAC;;;OATA;IAWD,sBAAI,uCAAK;aAAT;YACC,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QAClC,CAAC;aAED,UAAW,KAAa;YACvB,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,KAAK,KAAK,EAAG;gBACzC,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;gBACrC,IAAI,QAAQ,IAAI,IAAI,EAAG;oBACtB,QAAQ,CAAE,KAAK,CAAE,CAAC;iBAClB;aACD;QACF,CAAC;;;OATA;IAUF,2BAAC;AAAD,CAAC,AAxCD,IAwCC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DColorAndAlpha } from \"./d-color\";\r\n\r\nexport class DPickerColorAndAlpha implements DColorAndAlpha {\r\n\tprotected _colorAndAlpha: DColorAndAlpha;\r\n\tprotected _onColorChange: ( color: number ) => void;\r\n\tprotected _onAlphaChange: ( alpha: number ) => void;\r\n\r\n\tconstructor(\r\n\t\tcolorAndAlpha: DColorAndAlpha,\r\n\t\tonColorChange: ( color: number ) => void,\r\n\t\tonAlphaChange: ( alpha: number ) => void\r\n\t) {\r\n\t\tthis._colorAndAlpha = colorAndAlpha;\r\n\t\tthis._onColorChange = onColorChange;\r\n\t\tthis._onAlphaChange = onAlphaChange;\r\n\t}\r\n\r\n\tget color() {\r\n\t\treturn this._colorAndAlpha.color;\r\n\t}\r\n\r\n\tset color( color: number ) {\r\n\t\tif( this._colorAndAlpha.color !== color ) {\r\n\t\t\tconst callback = this._onColorChange;\r\n\t\t\tif( callback != null ) {\r\n\t\t\t\tcallback( color );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget alpha() {\r\n\t\treturn this._colorAndAlpha.alpha;\r\n\t}\r\n\r\n\tset alpha( alpha: number ) {\r\n\t\tif( this._colorAndAlpha.alpha !== alpha ) {\r\n\t\t\tconst callback = this._onAlphaChange;\r\n\t\t\tif( callback != null ) {\r\n\t\t\t\tcallback( alpha );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}