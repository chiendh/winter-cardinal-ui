{"version":3,"file":"d-scroll-bar.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-scroll-bar.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,KAAK,EAA4B,MAAM,UAAU,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAW5C;IAAyC,8BAAyC;IAAlF;;IA4DA,CAAC;IAvDU,yBAAI,GAAd,UAAgB,OAA2B;QAC1C,iBAAM,IAAI,YAAE,OAAO,CAAE,CAAC;QAEtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAE,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAE,CAAC;QAC5F,IAAI,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAE,UAAU,CAAC,WAAW,EAAE,IAAI,CAAE,CAAC;IAC/C,CAAC;IAED,sBAAI,6BAAK;aAAT;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;;;OAAA;IAIS,4BAAO,GAAjB;QACC,OAAO,YAAY,CAAC;IACrB,CAAC;IAED,8BAAS,GAAT,UAAW,KAAa,EAAE,GAAW,EAAE,IAAY;QAClD,IAAI,IAAI,GAAG,CAAC,EAAG;YACd,KAAK,GAAG,CAAC,CAAC;YACV,GAAG,GAAG,CAAC,CAAC;SACR;aAAM;YACN,KAAK,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,KAAK,GAAG,IAAI,CAAE,CAAE,CAAC;YACnD,GAAG,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,GAAG,GAAG,IAAI,CAAE,CAAE,CAAC;SACnD;QACD,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAG;YAChD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,cAAc,EAAE,CAAC;SACtB;IACF,CAAC;IAED,oCAAe,GAAf;QACC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,6BAAQ,GAAR,UAAU,QAAgB,EAAE,SAAiB,EAAE,QAAgB,EAAE,SAAiB;QACjF,iBAAM,QAAQ,YAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAE,CAAC;QAC3D,IAAI,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAED,mCAAc,GAAd;QACC,aAAa;IACd,CAAC;IAED,mCAAc,GAAd;QACC,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAED,iCAAY,GAAZ;QACC,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IACF,iBAAC;AAAD,CAAC,AA5DD,CAAyC,KAAK,GA4D7C","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBase, DBaseOptions, DThemeBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DScrollBarThumb, DScrollBarThumbOptions } from \"./d-scroll-bar-thumb\";\r\n\r\nexport interface DScrollBarOptions extends DBaseOptions<DThemeScrollBar> {\r\n\tthumb?: DScrollBarThumbOptions;\r\n}\r\n\r\nexport interface DThemeScrollBar extends DThemeBase {\r\n\r\n}\r\n\r\nexport abstract class DScrollBar extends DBase<DThemeScrollBar, DScrollBarOptions> {\r\n\tprotected _start!: number;\r\n\tprotected _end!: number;\r\n\tprotected _thumb!: DScrollBarThumb;\r\n\r\n\tprotected init( options?: DScrollBarOptions ): void {\r\n\t\tsuper.init( options );\r\n\r\n\t\tthis._start = 0;\r\n\t\tthis._end = 1;\r\n\t\tconst thumb = this._thumb = this.createThumb( options != null ? options.thumb : undefined );\r\n\t\tthis.addChild( thumb );\r\n\t\tthis.setState( DBaseState.UNFOCUSABLE, true );\r\n\t}\r\n\r\n\tget thumb(): DScrollBarThumb {\r\n\t\treturn this._thumb;\r\n\t}\r\n\r\n\tprotected abstract createThumb( options?: DScrollBarThumbOptions ): DScrollBarThumb;\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DScrollBar\";\r\n\t}\r\n\r\n\tsetRegion( start: number, end: number, size: number ): void {\r\n\t\tif( size < 1 ) {\r\n\t\t\tstart = 0;\r\n\t\t\tend = 1;\r\n\t\t} else {\r\n\t\t\tstart = Math.max( 0, Math.min( 1, start / size ) );\r\n\t\t\tend = Math.max( start, Math.min( 1, end / size ) );\r\n\t\t}\r\n\t\tif( this._start !== start || this._end !== end ) {\r\n\t\t\tthis._start = start;\r\n\t\t\tthis._end = end;\r\n\t\t\tthis.onRegionChange();\r\n\t\t}\r\n\t}\r\n\r\n\tisRegionVisible(): boolean {\r\n\t\treturn 0 < this._start || this._end < 1;\r\n\t}\r\n\r\n\tonResize( newWidth: number, newHeight: number, oldWidth: number, oldHeight: number ): void {\r\n\t\tsuper.onResize( newWidth, newHeight, oldWidth, oldHeight );\r\n\t\tthis.onRegionChange();\r\n\t}\r\n\r\n\tonRegionChange(): void {\r\n\t\t// DO NOTHING\r\n\t}\r\n\r\n\tgetRegionStart(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\tgetRegionEnd(): number {\r\n\t\treturn this._end;\r\n\t}\r\n}\r\n"]}