{"version":3,"file":"d-list-selection.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-list-selection.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Container, utils } from \"pixi.js\";\r\nimport { DBase } from \"./d-base\";\r\n\r\nexport enum DListSelectionMode {\r\n\tNONE,\r\n\tSINGLE,\r\n\tMULTIPLE\r\n}\r\n\r\nexport interface DListSelectionOnOptions {\r\n\t[ name: string ]: Function;\r\n}\r\n\r\nexport interface DListSelectionOptions {\r\n\tmode?: DListSelectionMode;\r\n\ton?: DListSelectionOnOptions;\r\n}\r\n\r\nexport class DListSelection extends utils.EventEmitter {\r\n\tprotected _content: Container;\r\n\tprotected _isDirty: boolean;\r\n\tprotected _indices: number[];\r\n\tprotected _mode: DListSelectionMode;\r\n\r\n\tconstructor( content: Container, options?: DListSelectionOptions ) {\r\n\t\tsuper();\r\n\r\n\t\tthis._content = content;\r\n\t\tthis._isDirty = false;\r\n\t\tthis._indices = [];\r\n\t\tthis._mode = ( options && options.mode != null ? options.mode : DListSelectionMode.SINGLE );\r\n\r\n\t\t// Events\r\n\t\tconst on = options && options.on;\r\n\t\tif( on ) {\r\n\t\t\tfor( const name in on ) {\r\n\t\t\t\tthis.on( name, on[ name ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoDirty() {\r\n\t\tthis._isDirty = true;\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tif( this._isDirty ) {\r\n\t\t\tthis._isDirty = false;\r\n\t\t\tconst indices = this._indices;\r\n\t\t\tindices.length = 0;\r\n\t\t\tconst content = this._content;\r\n\t\t\tconst children = content.children;\r\n\t\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tif( child instanceof DBase ) {\r\n\t\t\t\t\tif( child.isActive() ) {\r\n\t\t\t\t\t\tindices.push( i );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsize() {\r\n\t\tthis.update();\r\n\t\treturn this._indices.length;\r\n\t}\r\n\r\n\tisEmpty(): boolean {\r\n\t\treturn this.size() <= 0;\r\n\t}\r\n\r\n\tfirst<T>(): T | null {\r\n\t\treturn this.get( 0 );\r\n\t}\r\n\r\n\tget<T>( index: number ): T | null {\r\n\t\tthis.update();\r\n\t\tconst indices = this._indices;\r\n\t\tif( 0 <= index && index < indices.length ) {\r\n\t\t\tconst content = this._content;\r\n\t\t\tconst child = content.children[ indices[ index ] ];\r\n\t\t\tif( child != null ) {\r\n\t\t\t\treturn child as any;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetIndex( index: number ): number | null {\r\n\t\tthis.update();\r\n\t\tconst indices = this._indices;\r\n\t\tif( 0 <= index && index < indices.length ) {\r\n\t\t\treturn indices[ index ];\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tclear(): void {\r\n\t\tthis.update();\r\n\t\tconst indices = this._indices;\r\n\t\tif( 0 < indices.length ) {\r\n\t\t\tconst content = this._content;\r\n\t\t\tconst children = content.children;\r\n\t\t\tfor( let i = 0, imax = indices.length; i < imax; ++i ) {\r\n\t\t\t\tconst child = children[ indices[ i ] ];\r\n\t\t\t\tif( child instanceof DBase ) {\r\n\t\t\t\t\tchild.setActive( false );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tindices.length = 0;\r\n\t\t\tthis.emit( \"change\", this );\r\n\t\t}\r\n\t}\r\n\r\n\tadd<T extends DBase<any, any>>( target: T ) {\r\n\t\tconst mode = this._mode;\r\n\t\tconst content = this._content;\r\n\t\tif( mode === DListSelectionMode.SINGLE ) {\r\n\t\t\tif( ! target.isActive() ) {\r\n\t\t\t\tthis.update();\r\n\r\n\t\t\t\t// Remove the existing\r\n\t\t\t\tconst indices = this._indices;\r\n\t\t\t\tconst children = content.children;\r\n\t\t\t\tfor( let i = 0, imax = indices.length; i < imax; ++i ) {\r\n\t\t\t\t\tconst child = children[ indices[ i ] ];\r\n\t\t\t\t\tif( child instanceof DBase ) {\r\n\t\t\t\t\t\tchild.setActive( false );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tindices.length = 0;\r\n\r\n\t\t\t\t// Add a new child\r\n\t\t\t\tindices.push( content.getChildIndex( target ) );\r\n\t\t\t\ttarget.setActive( true );\r\n\r\n\t\t\t\t// Event\r\n\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t}\r\n\t\t} else if( mode === DListSelectionMode.MULTIPLE ) {\r\n\t\t\tif( ! target.isActive() ) {\r\n\t\t\t\tif( this._isDirty ) {\r\n\t\t\t\t\ttarget.setActive( true );\r\n\t\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Find an insertion position\r\n\t\t\t\t\tconst indices = this._indices;\r\n\t\t\t\t\tconst targetIndex = content.getChildIndex( target );\r\n\t\t\t\t\tfor( let i = 0, imax = indices.length; i < imax; ++i ) {\r\n\t\t\t\t\t\tconst index = indices[ i ];\r\n\t\t\t\t\t\tif( targetIndex === index ) {\r\n\t\t\t\t\t\t\ttarget.setActive( true );\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t} else if( targetIndex < index ) {\r\n\t\t\t\t\t\t\tindices.splice( i, 0, targetIndex );\r\n\t\t\t\t\t\t\ttarget.setActive( true );\r\n\t\t\t\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push\r\n\t\t\t\t\tindices.push( targetIndex );\r\n\t\t\t\t\ttarget.setActive( true );\r\n\t\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremove<T extends DBase<any, any>>( target: T ) {\r\n\t\tif( ! target.isActive() ) {\r\n\t\t\tif( this._isDirty ) {\r\n\t\t\t\ttarget.setActive( false );\r\n\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t} else {\r\n\t\t\t\tconst indices = this._indices;\r\n\t\t\t\tconst content = this._content;\r\n\t\t\t\tconst targetIndex = content.getChildIndex( target );\r\n\t\t\t\tfor( let i = 0, imax = indices.length; i < imax; ++i ) {\r\n\t\t\t\t\tconst index = indices[ i ];\r\n\t\t\t\t\tif( targetIndex === index ) {\r\n\t\t\t\t\t\tindices.splice( i, 1 );\r\n\t\t\t\t\t\ttarget.setActive( false );\r\n\t\t\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}