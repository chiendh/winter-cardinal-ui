{"version":3,"file":"d-application-layer-options.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-application-layer-options.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DApplicationPadding } from \"./d-application-padding\";\r\nimport { DPadding, DPaddingLike } from \"./d-padding\";\r\nimport { isNumber } from \"./util/is-number\";\r\n\r\n/**\r\n * PixiJS options\r\n */\r\ninterface PixiApplicationOptions {\r\n\twidth: number;\r\n\theight: number;\r\n\tautoStart: boolean;\r\n\tbackgroundColor: number;\r\n\ttransparent: boolean;\r\n\tresolution: number;\r\n\tantialias: boolean;\r\n}\r\n\r\ninterface DApplicationLayerBackgroundOptions {\r\n\tcolor?: number | null;\r\n}\r\n\r\ninterface DApplicationLayerOptionsOptions {\r\n\troot: HTMLElement;\r\n\tpadding?: number | DPaddingLike;\r\n\twidth?: number;\r\n\theight?: number;\r\n\tbackground?: DApplicationLayerBackgroundOptions;\r\n\tresolution: number;\r\n\tantialias?: boolean;\r\n\r\n\t/**\r\n\t * Sets to true if a layer is a overlay layer.\r\n\t */\r\n\toverlay: boolean;\r\n}\r\n\r\n/**\r\n * DApplicationLayer options\r\n */\r\nexport class DApplicationLayerOptions {\r\n\tprivate _root: HTMLElement;\r\n\tprivate _pixi: PixiApplicationOptions;\r\n\tprivate _padding: DPadding;\r\n\tprivate _overlay: boolean;\r\n\r\n\tconstructor( options: DApplicationLayerOptionsOptions ) {\r\n\t\t// Root\r\n\t\tconst root = this._root = options.root;\r\n\r\n\t\t// Overlay mode or not\r\n\t\tthis._overlay = options.overlay;\r\n\r\n\t\t// Padding\r\n\t\tconst padding = options && options.padding;\r\n\t\tif( isNumber( padding ) ) {\r\n\t\t\tthis._padding = new DApplicationPadding( padding, padding, padding, padding );\r\n\t\t} else if( padding != null ) {\r\n\t\t\tthis._padding = new DApplicationPadding(\r\n\t\t\t\tpadding.top || 0,\r\n\t\t\t\tpadding.right || 0,\r\n\t\t\t\tpadding.bottom || 0,\r\n\t\t\t\tpadding.left || 0\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis._padding = new DApplicationPadding( 6, 6, 6, 6 );\r\n\t\t}\r\n\r\n\t\t// Width & height\r\n\t\tlet width = 100;\r\n\t\tlet height = 100;\r\n\t\tif( options ) {\r\n\t\t\tif( options.width != null ) {\r\n\t\t\t\twidth = options.width;\r\n\t\t\t\tif( options.height != null ) {\r\n\t\t\t\t\theight = options.height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\theight = root.getBoundingClientRect().height;\r\n\t\t\t\t}\r\n\t\t\t} else if( options.height != null ) {\r\n\t\t\t\twidth = root.getBoundingClientRect().width;\r\n\t\t\t\theight = options.height;\r\n\t\t\t} else {\r\n\t\t\t\tconst bbox = root.getBoundingClientRect();\r\n\t\t\t\twidth = bbox.width;\r\n\t\t\t\theight = bbox.height;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst bbox = root.getBoundingClientRect();\r\n\t\t\twidth = bbox.width;\r\n\t\t\theight = bbox.height;\r\n\t\t}\r\n\r\n\t\t// Background color\r\n\t\tconst background = options && options.background;\r\n\t\tlet backgroundColor = 0;\r\n\t\tlet transparent = true;\r\n\t\tif( background != null ) {\r\n\t\t\tconst color = background.color;\r\n\t\t\tif( color != null ) {\r\n\t\t\t\tbackgroundColor = color;\r\n\t\t\t\ttransparent = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Resolution\r\n\t\tconst resolution = options.resolution;\r\n\r\n\t\t// Antialias\r\n\t\tconst antialias = ( options && options.antialias != null ? options.antialias : false );\r\n\r\n\t\t// Pixi\r\n\t\tthis._pixi = {\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tautoStart: false,\r\n\t\t\tbackgroundColor,\r\n\t\t\ttransparent,\r\n\t\t\tresolution,\r\n\t\t\tantialias\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a root element.\r\n\t * `HTMLCanvasElement` and other DOM elements are created in this element.\r\n\t * The default root element is `document.body`.\r\n\t */\r\n\tgetRootElement(): HTMLElement {\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a root element and updates the canvas width and height\r\n\t * if `updateWidthAndHeight` is not false.\r\n\t *\r\n\t * @param root new root element\r\n\t * @param updateWidthAndHeight false to preserve the canvas width / height\r\n\t */\r\n\tsetRootElement( root: HTMLElement, updateWidthAndHeight?: boolean ): this {\r\n\t\tif( this._root !== root ) {\r\n\t\t\tthis._root = root;\r\n\t\t\tif( updateWidthAndHeight !== false ) {\r\n\t\t\t\tconst bbox = root.getBoundingClientRect();\r\n\t\t\t\tconst pixi = this._pixi;\r\n\t\t\t\tpixi.width = bbox.width;\r\n\t\t\t\tpixi.height = bbox.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a canvas width.\r\n\t */\r\n\tgetWidth(): number {\r\n\t\treturn this._pixi.width;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a canvas width.\r\n\t *\r\n\t * @param width new canvas width\r\n\t */\r\n\tsetWidth( width: number ): this {\r\n\t\tthis._pixi.width = width;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a canvas height.\r\n\t */\r\n\tgetHeight(): number {\r\n\t\treturn this._pixi.height;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a canvas height.\r\n\t *\r\n\t * @param height new canvas height\r\n\t */\r\n\tsetHeight( height: number ): this {\r\n\t\tthis._pixi.height = height;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns padding sizes.\r\n\t * The default padding size is 6.\r\n\t */\r\n\tgetPadding(): DPadding {\r\n\t\treturn this._padding;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets padding sizes.\r\n\t *\r\n\t * @param left new left padding\r\n\t * @param top new top padding\r\n\t * @param right new right padding\r\n\t * @param bottom new bottom padding\r\n\t * @asse getPadding\r\n\t */\r\n\tsetPadding( left: number, top: number, right: number, bottom: number ): this {\r\n\t\tconst padding = this._padding;\r\n\t\tpadding.left = left;\r\n\t\tpadding.top = top;\r\n\t\tpadding.right = right;\r\n\t\tpadding.bottom = bottom;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a background color.\r\n\t */\r\n\tgetBackgroundColor(): number {\r\n\t\treturn this._pixi.backgroundColor;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a background color.\r\n\t *\r\n\t * @param color new background color\r\n\t */\r\n\tsetBackgroundColor( color: number ): this {\r\n\t\tthis._pixi.backgroundColor = color;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an antialias setting.\r\n\t * The default antialias setting is false.\r\n\t */\r\n\tgetAntialias(): boolean {\r\n\t\treturn this._pixi.antialias;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets an antialias setting.\r\n\t *\r\n\t * @param antialias new antialias setting\r\n\t */\r\n\tsetAntialias( antialias: boolean ): this {\r\n\t\tthis._pixi.antialias = antialias;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if a layer is supposed to be an overlay layer.\r\n\t */\r\n\tisOverlay(): boolean {\r\n\t\treturn this._overlay;\r\n\t}\r\n\r\n\tgetPixiApplicationOptions(): PixiApplicationOptions {\r\n\t\treturn this._pixi;\r\n\t}\r\n}\r\n"]}