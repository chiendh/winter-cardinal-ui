{"version":3,"file":"d-menu-sided.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-menu-sided.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAIH,OAAO,EAAa,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAE3D,OAAO,EAAE,iBAAiB,EAA4B,MAAM,wBAAwB,CAAC;AACrF,OAAO,EAAE,mBAAmB,EAA8B,MAAM,0BAA0B,CAAC;AAC3F,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,KAAK,EAA4B,MAAM,UAAU,CAAC;AAgB3D;IAKU,8BAAsC;IALhD;;IAsEA,CAAC;IA7DU,yBAAI,GAAd,UAAgB,OAAiB;QAChC,iBAAM,IAAI,YAAE,OAAO,CAAE,CAAC;QAEtB,IAAM,OAAO,GAAG,IAAI,YAAY,CAAE,IAAI,CAAE,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,OAAO,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;QAEpB,IAAM,KAAK,GAAG,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC;QACvC,IAAI,KAAK,IAAI,IAAI,EAAG;YACnB,IAAM,MAAM,GAAG,CAAE,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC;YAC9E,IAAI,CAAC,QAAQ,CAAE,KAAK,EAAE,MAAM,CAAE,CAAC;SAC/B;QAED,IAAM,SAAS,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,CAAE,SAAS,YAAY,mBAAmB,CAAC,CAAC;YAC7D,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAE,SAAS,CAAE,CAAE,CAAC;IAC/C,CAAC;IAES,iCAAY,GAAtB,UAAwB,OAAoC;QAC3D,OAAO,IAAI,mBAAmB,CAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAE,CAAC;IAC1D,CAAC;IAES,oCAAe,GAAzB;QACC,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,IAAI,SAAS,IAAI,IAAI,EAAG;YACvB,SAAS,CAAC,OAAO,EAAE,CAAC;SACpB;QACD,iBAAM,eAAe,WAAE,CAAC;IACzB,CAAC;IAES,6BAAQ,GAAlB,UAAoB,KAA0D,EAAE,MAAe;QAC9F,WAAW,CAAC,QAAQ,CAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC;IACrD,CAAC;IAES,+BAAU,GAApB,UAAsB,OAAyB;QAC9C,OAAO,IAAI,iBAAiB,CAAE,OAAO,CAAE,CAAC;IACzC,CAAC;IAED,sBAAI,iCAAS;aAAb;YACC,OAAO,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;;;OAAA;IAED,+BAAU,GAAV;QACC,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,iCAAY,GAAZ;QACC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,yBAAI,GAAJ;QACC,aAAa;IACd,CAAC;IAED,0BAAK,GAAL;QACC,aAAa;IACd,CAAC;IAES,4BAAO,GAAjB;QACC,OAAO,YAAY,CAAC;IACrB,CAAC;IACF,iBAAC;AAAD,CAAC,AAtED,CAKU,KAAK,GAiEd","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DisplayObject } from \"pixi.js\";\r\nimport { DBase, DBaseOptions } from \"./d-base\";\r\nimport { Closeable, DMenuContext } from \"./d-menu-context\";\r\nimport { DMenuItemOptionsUnion } from \"./d-menu-item-options-union\";\r\nimport { DMenuSidedContent, DMenuSidedContentOptions } from \"./d-menu-sided-content\";\r\nimport { DMenuSidedSelection, DMenuSidedSelectionOptions } from \"./d-menu-sided-selection\";\r\nimport { DMenuSideds } from \"./d-menu-sideds\";\r\nimport { DPane, DPaneOptions, DThemePane } from \"./d-pane\";\r\n\r\nexport interface DMenuSidedOptions<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeMenuSided = DThemeMenuSided,\r\n\tCONTENT_OPTIONS extends DBaseOptions = DMenuSidedContentOptions\r\n> extends DPaneOptions<THEME, CONTENT_OPTIONS> {\r\n\titems?: Array<DMenuItemOptionsUnion<VALUE> | DisplayObject>;\r\n\tsticky?: boolean;\r\n\tselection?: DMenuSidedSelectionOptions | DMenuSidedSelection;\r\n}\r\n\r\nexport interface DThemeMenuSided extends DThemePane {\r\n\r\n}\r\n\r\nexport class DMenuSided<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeMenuSided = DThemeMenuSided,\r\n\tCONTENT_OPTIONS extends DMenuSidedContentOptions = DMenuSidedContentOptions,\r\n\tOPTIONS extends DMenuSidedOptions<VALUE, THEME, CONTENT_OPTIONS> = DMenuSidedOptions<VALUE, THEME, CONTENT_OPTIONS>\r\n> extends DPane<THEME, CONTENT_OPTIONS, OPTIONS> {\r\n\tprotected _context!: DMenuContext | null;\r\n\tprotected _selection!: DMenuSidedSelection;\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tconst context = new DMenuContext( this );\r\n\t\tthis._context = context;\r\n\t\tcontext.add( this );\r\n\r\n\t\tconst items = options && options.items;\r\n\t\tif( items != null ) {\r\n\t\t\tconst sticky = ( options && options.sticky != null ? options.sticky : false );\r\n\t\t\tthis.newItems( items, sticky );\r\n\t\t}\r\n\r\n\t\tconst selection = options && options.selection;\r\n\t\tthis._selection = ( selection instanceof DMenuSidedSelection ?\r\n\t\t\tselection : this.newSelection( selection ) );\r\n\t}\r\n\r\n\tprotected newSelection( options?: DMenuSidedSelectionOptions ): DMenuSidedSelection {\r\n\t\treturn new DMenuSidedSelection( this._content, options );\r\n\t}\r\n\r\n\tprotected onChildrenDirty(): void {\r\n\t\tconst selection = this._selection;\r\n\t\tif( selection != null ) {\r\n\t\t\tselection.toDirty();\r\n\t\t}\r\n\t\tsuper.onChildrenDirty();\r\n\t}\r\n\r\n\tprotected newItems( items: Array<DMenuItemOptionsUnion<VALUE> | DisplayObject>, sticky: boolean ): void {\r\n\t\tDMenuSideds.newItems( this.content, items, sticky );\r\n\t}\r\n\r\n\tprotected newContent( options?: CONTENT_OPTIONS ): DBase {\r\n\t\treturn new DMenuSidedContent( options );\r\n\t}\r\n\r\n\tget selection(): DMenuSidedSelection {\r\n\t\treturn this._selection;\r\n\t}\r\n\r\n\tgetContext(): DMenuContext | null {\r\n\t\treturn this._context;\r\n\t}\r\n\r\n\tgetCloseable(): Closeable | null {\r\n\t\treturn this;\r\n\t}\r\n\r\n\topen(): void {\r\n\t\t// DO NOTHING\r\n\t}\r\n\r\n\tclose(): void {\r\n\t\t// DO NOTHING\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DMenuSided\";\r\n\t}\r\n}\r\n"]}