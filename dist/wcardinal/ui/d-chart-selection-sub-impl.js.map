{"version":3,"file":"d-chart-selection-sub-impl.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-selection-sub-impl.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Point, utils } from \"pixi.js\";\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DChartCoordinate } from \"./d-chart-coordinate\";\r\nimport { DChartSelectionPoint } from \"./d-chart-selection\";\r\nimport { DChartSelectionGridlineContainer } from \"./d-chart-selection-gridline-container\";\r\nimport { DChartSelectionGridlineContainerImpl } from \"./d-chart-selection-gridline-container-impl\";\r\nimport { DChartSelectionMarker } from \"./d-chart-selection-marker\";\r\nimport { DChartSelectionSub, DChartSelectionSubOptions } from \"./d-chart-selection-sub\";\r\nimport { DChartSeries, DChartSeriesHitResult } from \"./d-chart-series\";\r\nimport { DChartSeriesContainer } from \"./d-chart-series-container\";\r\nimport { EShape } from \"./shape/e-shape\";\r\n\r\nexport class DChartSelectionSubImpl extends utils.EventEmitter implements DChartSelectionSub {\r\n\tprotected _container: DChartSeriesContainer | null;\r\n\tprotected _isEnabled: boolean;\r\n\tprotected _series: DChartSeries | null;\r\n\tprotected _coordinateX: DChartCoordinate | null;\r\n\tprotected _coordinateY: DChartCoordinate | null;\r\n\tprotected _position: Point;\r\n\tprotected _point: DChartSelectionPoint;\r\n\tprotected _work: Point;\r\n\tprotected _gridline: DChartSelectionGridlineContainer;\r\n\tprotected _marker: DChartSelectionMarker;\r\n\tprotected _state: DBaseState;\r\n\r\n\tconstructor( options: DChartSelectionSubOptions ) {\r\n\t\tsuper();\r\n\r\n\t\tthis._container = null;\r\n\t\tthis._series = null;\r\n\t\tthis._isEnabled = ( options.enable != null ? options.enable : true );\r\n\t\tthis._gridline = new DChartSelectionGridlineContainerImpl( options.gridline );\r\n\t\tthis._marker = new DChartSelectionMarker( options.marker );\r\n\t\tthis._state = ( options.state != null ? options.state : DBaseState.HOVERED );\r\n\t\tthis._coordinateX = null;\r\n\t\tthis._coordinateY = null;\r\n\t\tthis._position = new Point();\r\n\t\tthis._point = ( options.point != null ? options.point : DChartSelectionPoint.CLOSER );\r\n\t\tthis._work = new Point();\r\n\r\n\t\t// Events\r\n\t\tconst on = options.on;\r\n\t\tif( on ) {\r\n\t\t\tfor( const name in on ) {\r\n\t\t\t\tconst handler = on[ name ];\r\n\t\t\t\tif( handler ) {\r\n\t\t\t\t\tthis.on( name, handler );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbind( container: DChartSeriesContainer ): void {\r\n\t\tif( this._isEnabled ) {\r\n\t\t\tthis._container = container;\r\n\t\t\tthis._gridline.bind( container );\r\n\t\t\tthis._marker.bind( container );\r\n\t\t}\r\n\t}\r\n\r\n\tunbind(): void {\r\n\t\tthis._marker.unbind();\r\n\t\tthis._gridline.unbind();\r\n\t\tthis._container = null;\r\n\t\tthis._coordinateX = null;\r\n\t\tthis._coordinateY = null;\r\n\t}\r\n\r\n\tget series(): DChartSeries | null {\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\tget position(): Point {\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tget gridline(): DChartSelectionGridlineContainer {\r\n\t\treturn this._gridline;\r\n\t}\r\n\r\n\tget marker(): DChartSelectionMarker {\r\n\t\treturn this._marker;\r\n\t}\r\n\r\n\tset( series: DChartSeries, result: DChartSeriesHitResult | DChartSelectionSub ): void {\r\n\t\tconst container = this._container;\r\n\t\tconst coordinateX = this._coordinateX = series.coordinate.x;\r\n\t\tconst coordinateY = this._coordinateY = series.coordinate.y;\r\n\t\tif( container && coordinateX && coordinateY ) {\r\n\t\t\tconst transform = container.plotArea.container.localTransform;\r\n\t\t\tconst position = this._position;\r\n\t\t\tconst work = this._work;\r\n\t\t\tif( result instanceof DChartSeriesHitResult ) {\r\n\t\t\t\tlet x = result.x;\r\n\t\t\t\tlet y = result.y;\r\n\t\t\t\tswitch( this._point ) {\r\n\t\t\t\tcase DChartSelectionPoint.PREVIOUS:\r\n\t\t\t\t\tx = result.p0x;\r\n\t\t\t\t\ty = result.p0y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DChartSelectionPoint.NEXT:\r\n\t\t\t\t\tx = result.p1x;\r\n\t\t\t\t\ty = result.p1y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase DChartSelectionPoint.CLOSER:\r\n\t\t\t\t\tif( Math.abs( result.p0x - result.x ) < Math.abs( result.p1x - result.x ) ) {\r\n\t\t\t\t\t\tx = result.p0x;\r\n\t\t\t\t\t\ty = result.p0y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tx = result.p1x;\r\n\t\t\t\t\t\ty = result.p1y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\twork.set( x, y );\r\n\t\t\t\ttransform.apply( work, work );\r\n\t\t\t\tposition.set(\r\n\t\t\t\t\tcoordinateX.unmap( coordinateX.transform.unmap( x ) ),\r\n\t\t\t\t\tcoordinateY.unmap( coordinateY.transform.unmap( y ) )\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tposition.copyFrom( result.position );\r\n\t\t\t\twork.set(\r\n\t\t\t\t\tcoordinateX.transform.map( coordinateX.map( position.x ) ),\r\n\t\t\t\t\tcoordinateY.transform.map( coordinateY.map( position.y ) )\r\n\t\t\t\t);\r\n\t\t\t\ttransform.apply( work, work );\r\n\t\t\t}\r\n\r\n\t\t\tthis._gridline.set( container, work, series );\r\n\t\t\tthis._marker.set( container, work, series );\r\n\r\n\t\t\tDApplications.update( container.plotArea );\r\n\t\t}\r\n\r\n\t\tconst oldSeries = this._series;\r\n\t\tif( oldSeries !== series ) {\r\n\t\t\tconst state = this._state;\r\n\t\t\tif( oldSeries ) {\r\n\t\t\t\toldSeries.setState( state, false );\r\n\t\t\t}\r\n\r\n\t\t\tthis._series = series;\r\n\t\t\tseries.setState( state, true );\r\n\t\t}\r\n\r\n\t\tthis.emit( \"change\", this );\r\n\t}\r\n\r\n\tprotected setStyle( this: unknown, shape: EShape, series: DChartSeries ): void {\r\n\t\tconst seriesShape = series.shape;\r\n\t\tif( seriesShape ) {\r\n\t\t\tshape.stroke.color = seriesShape.stroke.color;\r\n\t\t}\r\n\t}\r\n\r\n\tunset(): void {\r\n\t\tconst series = this._series;\r\n\t\tif( series ) {\r\n\t\t\tthis._series = null;\r\n\t\t\tthis._coordinateX = null;\r\n\t\t\tthis._coordinateY = null;\r\n\r\n\t\t\tseries.setState( this._state, false );\r\n\r\n\t\t\tthis._gridline.unset();\r\n\t\t\tthis._marker.unset();\r\n\r\n\t\t\tthis.emit( \"change\", this );\r\n\t\t}\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tconst container = this._container;\r\n\t\tconst coordinateX = this._coordinateX;\r\n\t\tconst coordinateY = this._coordinateY;\r\n\t\tif( container && coordinateX && coordinateY ) {\r\n\t\t\tconst position = this._position;\r\n\t\t\tconst work = this._work;\r\n\t\t\twork.set(\r\n\t\t\t\tcoordinateX.transform.map( coordinateX.map( position.x ) ),\r\n\t\t\t\tcoordinateY.transform.map( coordinateY.map( position.y ) )\r\n\t\t\t);\r\n\t\t\tcontainer.plotArea.container.localTransform.apply( work, work );\r\n\r\n\t\t\tthis._gridline.update( container, work );\r\n\t\t\tthis._marker.update( container, work );\r\n\t\t}\r\n\t}\r\n}\r\n"]}