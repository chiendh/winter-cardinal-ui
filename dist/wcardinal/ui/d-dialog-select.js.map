{"version":3,"file":"d-dialog-select.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-dialog-select.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBase } from \"./d-base\";\r\nimport { DDialogCommand, DDialogCommandOptions, DThemeDialogCommand } from \"./d-dialog-command\";\r\nimport { DDialogSelectList } from \"./d-dialog-select-list\";\r\nimport { DDialogSelectListItem } from \"./d-dialog-select-list-item\";\r\nimport { DDialogSelectSearh } from \"./d-dialog-select-search\";\r\nimport { DInputText } from \"./d-input-text\";\r\nimport { DLayoutVertical } from \"./d-layout-vertical\";\r\nimport { DListItem } from \"./d-list-item\";\r\nimport { DListSelection } from \"./d-list-selection\";\r\nimport { DNote, DNoteOptions } from \"./d-note\";\r\nimport { UtilTransition } from \"./util/util-transition\";\r\n\r\nexport interface DDialogSelectSearch<SEARCH_RESULT> {\r\n\tcreate( args: [ string ] ): void;\r\n\ton( event: \"success\", handler: ( e: unknown, searchResults: SEARCH_RESULT[] ) => void ): void;\r\n\ton( event: \"change\", handler: () => void ): void;\r\n\tisDone(): boolean;\r\n\tgetResult(): SEARCH_RESULT[] | null;\r\n}\r\n\r\nexport type DDialogSelectSearchFunction<SEARCH_RESULT> = ( word: string ) => Promise<SEARCH_RESULT[]>;\r\n\r\nexport interface DDialogSelectController<SEARCH_RESULT> {\r\n\tsearch: DDialogSelectSearch<SEARCH_RESULT> | DDialogSelectSearchFunction<SEARCH_RESULT>;\r\n}\r\n\r\nexport interface DDialogSelectNoteOptions {\r\n\tnoItems?: DNoteOptions;\r\n\tsearching?: DNoteOptions;\r\n}\r\n\r\nexport type DDialogSelectItemTextFormatter<SEARCH_RESULT> = ( result: SEARCH_RESULT, caller: any ) => string;\r\n\r\nexport interface DDialogSelectItemTextOptions<SEARCH_RESULT> {\r\n\tformatter?: DDialogSelectItemTextFormatter<SEARCH_RESULT>;\r\n}\r\n\r\nexport interface DDialogSelectItemOptions<SEARCH_RESULT> {\r\n\ttext?: DDialogSelectItemTextOptions<SEARCH_RESULT>;\r\n}\r\n\r\nexport interface DDialogSelectOptions<\r\n\tSEARCH_RESULT,\r\n\tTHEME extends DThemeDialogSelect = DThemeDialogSelect\r\n> extends DDialogCommandOptions<THEME> {\r\n\tcontroller?: DDialogSelectController<SEARCH_RESULT>;\r\n\titem?: DDialogSelectItemOptions<SEARCH_RESULT>;\r\n\tnote?: DDialogSelectNoteOptions;\r\n}\r\n\r\nexport interface DThemeDialogSelect extends DThemeDialogCommand {\r\n\tgetItemTextFormatter(): DDialogSelectItemTextFormatter<any>;\r\n\tgetNoteNoItemsText(): string;\r\n\tgetNoteSearchingText(): string;\r\n}\r\n\r\n// Helper\r\nconst toItemTextFormatter = <SEARCH_RESULT>(\r\n\ttheme: DThemeDialogSelect, options?: DDialogSelectOptions<SEARCH_RESULT, any>\r\n): DDialogSelectItemTextFormatter<SEARCH_RESULT> => {\r\n\tif( options ) {\r\n\t\tconst item = options.item;\r\n\t\tif( item ) {\r\n\t\t\tconst text = item.text;\r\n\t\t\tif( text ) {\r\n\t\t\t\treturn text.formatter || theme.getItemTextFormatter();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn theme.getItemTextFormatter();\r\n};\r\n\r\nconst toNoteOptions = ( options: DNoteOptions | undefined, parent: DBase, text: string ): DNoteOptions => {\r\n\tif( options != null ) {\r\n\t\tif( options.parent == null ) {\r\n\t\t\toptions.parent = parent;\r\n\t\t}\r\n\t\tif( options.text == null ) {\r\n\t\t\toptions.text = {\r\n\t\t\t\tvalue: text\r\n\t\t\t};\r\n\t\t} else if( options.text.value == null ) {\r\n\t\t\toptions.text.value = text;\r\n\t\t}\r\n\t\treturn options;\r\n\t}\r\n\treturn {\r\n\t\tparent,\r\n\t\ttext: {\r\n\t\t\tvalue: text\r\n\t\t}\r\n\t};\r\n};\r\n\r\nconst toNoteNoItemsOptions = (\r\n\ttheme: DThemeDialogSelect, options: DDialogSelectOptions<any> | undefined, parent: DBase\r\n): DNoteOptions => {\r\n\tconst note = options && options.note;\r\n\treturn toNoteOptions(\r\n\t\tnote && note.noItems,\r\n\t\tparent,\r\n\t\ttheme.getNoteNoItemsText()\r\n\t);\r\n};\r\n\r\nconst toNoteSearchingOptions = (\r\n\ttheme: DThemeDialogSelect, options: DDialogSelectOptions<any> | undefined, parent: DBase\r\n): DNoteOptions => {\r\n\tconst note = options && options.note;\r\n\treturn toNoteOptions(\r\n\t\tnote && note.noItems,\r\n\t\tparent,\r\n\t\ttheme.getNoteSearchingText()\r\n\t);\r\n};\r\n\r\nconst toSearch = <SEARCH_RESULT>(\r\n\tcontroller?: DDialogSelectController<SEARCH_RESULT>\r\n): DDialogSelectSearch<SEARCH_RESULT> => {\r\n\tif( controller ) {\r\n\t\tconst search = controller.search;\r\n\t\tif( \"create\" in search ) {\r\n\t\t\treturn search;\r\n\t\t} else {\r\n\t\t\treturn new DDialogSelectSearh( search );\r\n\t\t}\r\n\t} else {\r\n\t\treturn new DDialogSelectSearh();\r\n\t}\r\n};\r\n\r\nexport class DDialogSelect<\r\n\tSEARCH_RESULT extends unknown = unknown,\r\n\tTHEME extends DThemeDialogSelect = DThemeDialogSelect,\r\n\tOPTIONS extends DDialogSelectOptions<SEARCH_RESULT, THEME> = DDialogSelectOptions<SEARCH_RESULT, THEME>\r\n> extends DDialogCommand<THEME, OPTIONS> {\r\n\tprotected _value!: SEARCH_RESULT | null;\r\n\tprotected _input!: DInputText;\r\n\tprotected _list!: DDialogSelectList;\r\n\tprotected _noteNoItems!: DNote;\r\n\tprotected _noteSearching!: DNote;\r\n\tprotected _itemTextFormatter!: DDialogSelectItemTextFormatter<SEARCH_RESULT>;\r\n\tprotected _search!: DDialogSelectSearch<SEARCH_RESULT>;\r\n\r\n\tprotected onInit( layout: DLayoutVertical, options?: OPTIONS ) {\r\n\t\tthis._value = null;\r\n\t\tconst theme = this.theme;\r\n\t\tthis._itemTextFormatter = toItemTextFormatter( theme, options );\r\n\r\n\t\t// Search box\r\n\t\tthis._input = new DInputText({\r\n\t\t\tparent: layout,\r\n\t\t\twidth: \"padding\"\r\n\t\t});\r\n\r\n\t\t// List\r\n\t\tconst list = this._list = new DDialogSelectList({\r\n\t\t\tparent: layout,\r\n\t\t\twidth: \"padding\",\r\n\t\t\tselection: {\r\n\t\t\t\ton: {\r\n\t\t\t\t\tchange: ( selection: DListSelection ): void => {\r\n\t\t\t\t\t\tconst item: DListItem<SEARCH_RESULT> | null = selection.first();\r\n\t\t\t\t\t\tif( item != null ) {\r\n\t\t\t\t\t\t\tthis._value = item.value;\r\n\t\t\t\t\t\t\tthis.onOk();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Text No Items\r\n\t\tconst noteNoItems = new DNote( toNoteNoItemsOptions( theme, options, list ) );\r\n\t\tthis._noteNoItems = noteNoItems;\r\n\r\n\t\t// Text Searching\r\n\t\tconst noteSearching = new DNote( toNoteSearchingOptions( theme, options, list ) );\r\n\t\tthis._noteSearching = noteSearching;\r\n\r\n\t\t// Controller binding\r\n\t\tconst search = toSearch( options && options.controller );\r\n\t\tthis._search = search;\r\n\t\tthis._input.on( \"input\", ( value: string ): void => {\r\n\t\t\tsearch.create([ value ]);\r\n\t\t});\r\n\r\n\t\tsearch.on( \"success\", ( e: unknown, results: SEARCH_RESULT[] ): void => {\r\n\t\t\tthis.onSearched( results );\r\n\t\t});\r\n\r\n\t\t// Visibility\r\n\t\tconst transition = new UtilTransition();\r\n\t\tsearch.on( \"change\", (): void => {\r\n\t\t\tif( search.isDone() ) {\r\n\t\t\t\tconst result = search.getResult();\r\n\t\t\t\tif( result != null && 0 < result.length ) {\r\n\t\t\t\t\ttransition.hide();\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttransition.show( noteNoItems );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttransition.show( noteSearching );\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected onSearched( results: SEARCH_RESULT[] ): void {\r\n\t\tconst list = this._list;\r\n\t\tconst itemTextFormatter = this._itemTextFormatter;\r\n\t\tconst content = list.content;\r\n\t\tconst children = content.children;\r\n\r\n\t\t// Update the existing children\r\n\t\tconst childrenLength = children.length;\r\n\t\tconst searchResultsLength = results.length;\r\n\t\tconst minLength = Math.min( childrenLength, searchResultsLength );\r\n\t\tfor( let i = 0, imax = minLength; i < imax; ++i ) {\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tconst result = results[ i ];\r\n\t\t\tif( child instanceof DListItem ) {\r\n\t\t\t\tchild.text = itemTextFormatter( result, this );\r\n\t\t\t\tchild.value = result;\r\n\t\t\t} else {\r\n\t\t\t\tcontent.removeChildAt( i );\r\n\t\t\t\tchild.destroy();\r\n\t\t\t\tconst newChild = this.newItem( result, itemTextFormatter( result, this ) );\r\n\t\t\t\tcontent.addChildAt( newChild, i );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Insert new children\r\n\t\tfor( let i = minLength, imax = searchResultsLength; i < imax; ++i ) {\r\n\t\t\tconst result = results[ i ];\r\n\t\t\tconst newChild = this.newItem( result, itemTextFormatter( result, this ) );\r\n\t\t\tcontent.addChild( newChild );\r\n\t\t}\r\n\r\n\t\t// Remove unused children\r\n\t\tfor( let i = childrenLength - 1; minLength <= i; --i ) {\r\n\t\t\tchildren[ i ].destroy();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected newItem( result: SEARCH_RESULT, label: string ): DDialogSelectListItem<SEARCH_RESULT> {\r\n\t\treturn new DDialogSelectListItem<SEARCH_RESULT>({\r\n\t\t\tvalue: result,\r\n\t\t\ttext: {\r\n\t\t\t\tvalue: label\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tget value() {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DDialogSelect\";\r\n\t}\r\n\r\n\tprotected onOpen() {\r\n\t\tsuper.onOpen();\r\n\t\tthis._list.selection.clear();\r\n\t\tthis._search.create([ this._input.value ]);\r\n\t}\r\n\tprotected onOk() {\r\n\t\tthis.emit( \"select\", this._value, this );\r\n\t\tsuper.onOk();\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis._input.destroy();\r\n\t\tthis._noteNoItems.destroy();\r\n\t\tthis._noteSearching.destroy();\r\n\t\tthis._list.destroy();\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n"]}