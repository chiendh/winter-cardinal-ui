{"version":3,"file":"d-chart-region-impl-observable.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-region-impl-observable.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEtC;IAKC,oCAAa,IAAY,EAAE,EAAU,EAAE,QAAoB;QAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,sBAAI,4CAAI;aAAR;YACC,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;aAED,UAAU,IAAY;YACrB,IAAI,CAAC,GAAG,CAAE,IAAI,EAAE,SAAS,CAAE,CAAC;QAC7B,CAAC;;;OAJA;IAMD,sBAAI,0CAAE;aAAN;YACC,OAAO,IAAI,CAAC,GAAG,CAAC;QACjB,CAAC;aAED,UAAQ,EAAU;YACjB,IAAI,CAAC,GAAG,CAAE,SAAS,EAAE,EAAE,CAAE,CAAC;QAC3B,CAAC;;;OAJA;IAMD,wCAAG,GAAH,UAAK,IAAa,EAAE,EAAW;QAC9B,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAG;YACzC,IAAI,CAAE,KAAK,CAAE,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,KAAK,CAAC,IAAI,CAAC,EAAG;gBAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,SAAS,GAAG,IAAI,CAAC;aACjB;SACD;QAED,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,EAAG;YACnC,IAAI,CAAE,KAAK,CAAE,IAAI,CAAC,GAAG,CAAE,IAAI,CAAE,KAAK,CAAC,EAAE,CAAC,EAAG;gBACxC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;gBACd,SAAS,GAAG,IAAI,CAAC;aACjB;SACD;QAED,IAAI,SAAS,EAAG;YACf,IAAI,CAAC,SAAS,EAAE,CAAC;SACjB;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,wCAAG,GAAH,UAAK,IAAY,EAAE,EAAU;QAC5B,IAAI,OAA2B,CAAC;QAChC,IAAI,CAAE,KAAK,CAAE,IAAI,CAAE,EAAG;YACrB,OAAO,GAAG,CAAE,KAAK,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC,CAAC;gBAC/B,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE,CAClC,CAAC;SACF;QAED,IAAI,KAAyB,CAAC;QAC9B,IAAI,CAAE,KAAK,CAAE,EAAE,CAAE,EAAG;YACnB,KAAK,GAAG,CAAE,KAAK,CAAE,IAAI,CAAC,EAAE,CAAE,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAE,CAC5B,CAAC;SACF;QAED,OAAO,IAAI,CAAC,GAAG,CAAE,OAAO,EAAE,KAAK,CAAE,CAAC;IACnC,CAAC;IAED,0CAAK,GAAL;QACC,OAAO,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;IAC7B,CAAC;IACF,iCAAC;AAAD,CAAC,AAvED,IAuEC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DChartRegion } from \"./d-chart-region\";\r\nimport { isNaN } from \"./util/is-nan\";\r\n\r\nexport class DChartRegionImplObservable implements DChartRegion {\r\n\tprotected _from: number;\r\n\tprotected _to: number;\r\n\tprotected _onChange: () => void;\r\n\r\n\tconstructor( from: number, to: number, onChange: () => void ) {\r\n\t\tthis._from = from;\r\n\t\tthis._to = to;\r\n\t\tthis._onChange = onChange;\r\n\t}\r\n\r\n\tget from(): number {\r\n\t\treturn this._from;\r\n\t}\r\n\r\n\tset from( from: number ) {\r\n\t\tthis.set( from, undefined );\r\n\t}\r\n\r\n\tget to(): number {\r\n\t\treturn this._to;\r\n\t}\r\n\r\n\tset to( to: number ) {\r\n\t\tthis.set( undefined, to );\r\n\t}\r\n\r\n\tset( from?: number, to?: number ): this {\r\n\t\tlet isChanged = false;\r\n\r\n\t\tif( from != null && this._from !== from ) {\r\n\t\t\tif( ! isNaN( this._from ) || ! isNaN(from) ) {\r\n\t\t\t\tthis._from = from;\r\n\t\t\t\tisChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( to != null && this._to !== to ) {\r\n\t\t\tif( ! isNaN( this._to ) || ! isNaN(to) ) {\r\n\t\t\t\tthis._to = to;\r\n\t\t\t\tisChanged = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( isChanged ) {\r\n\t\t\tthis._onChange();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tadd( from: number, to: number ): this {\r\n\t\tlet newFrom: number | undefined;\r\n\t\tif( ! isNaN( from ) ) {\r\n\t\t\tnewFrom = ( isNaN( this.from ) ?\r\n\t\t\t\tfrom : Math.min( this.from, from )\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tlet newTo: number | undefined;\r\n\t\tif( ! isNaN( to ) ) {\r\n\t\t\tnewTo = ( isNaN( this.to ) ?\r\n\t\t\t\tto : Math.max( this.to, to )\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this.set( newFrom, newTo );\r\n\t}\r\n\r\n\tclear(): this {\r\n\t\treturn this.set( NaN, NaN );\r\n\t}\r\n}\r\n"]}