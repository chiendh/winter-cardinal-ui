{"version":3,"file":"d-tree.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-tree.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAKH,OAAO,EAAE,KAAK,EAA4B,MAAM,UAAU,CAAC;AAC3D,OAAO,EAAkB,SAAS,EAAoB,MAAM,eAAe,CAAC;AAC5E,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAElC,MAAM,CAAN,IAAY,sBAGX;AAHD,WAAY,sBAAsB;IACjC,uEAAM,CAAA;IACN,qEAAK,CAAA;AACN,CAAC,EAHW,sBAAsB,KAAtB,sBAAsB,QAGjC;AAyBD;IAIU,yBAAuC;IAJjD;;IA6aA,CAAC;IA7ZU,oBAAI,GAAd,UAAgB,OAAkB;QAAlC,iBAyBC;QAxBA,iBAAM,IAAI,YAAE,OAAO,CAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,EAAE,CAAC;QACvC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhB,IAAM,SAAS,GAAmB,OAAO,CAAC,WAAW,EAAE,CAAC,GAAG,CAAE,WAAW,CAAE,CAAC;QAC3E,IAAI,CAAC,WAAW,GAAG,MAAM,CAAE,SAAS,CAAC,SAAS,EAAE,CAAE,CAAC;QAEnD,IAAI,CAAC,MAAM,GAAG,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAE,CAAC;QAExC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAE,MAAM,EAAE;YACzB,KAAI,CAAC,MAAM,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAE,QAAQ,EAAE;YAC3B,KAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;YAC/B,KAAI,CAAC,MAAM,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAES,sBAAM,GAAhB;QAAA,iBAmDC;QAlDA,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAM,KAAK,GAAG,OAAO,CAAC,QAAuB,CAAE;QAC/C,2BAA2B;QAC3B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;QACrE,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAM,oBAAoB,GAAG,CAAE,CAAC,GAAG,QAAQ,CAAE,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,CAAE,CAAE,CAAC,GAAG,QAAQ,CAAE,GAAG,IAAI,CAAC,WAAW,CAAE,GAAG,CAAC,CAAC;QAEvD,IAAM,kBAAkB,GAAG,CAAE,MAAM,GAAG,QAAQ,CAAE,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC/G,IAAI,CAAC,KAAK,CAAE,CAAE,MAAM,GAAG,QAAQ,CAAE,GAAG,IAAI,CAAC,WAAW,CAAE,GAAG,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;QAElC,qDAAqD;QACrD,IAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAE,oBAAoB,EAAE,kBAAkB,CAAE,CAAC;QAErG,IAAK,KAAK,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,EAAG;oCACnC,CAAC;gBACV,IAAM,WAAW,GAAG,gBAAgB,CAAE,CAAC,CAAE,CAAC;gBAC1C,IAAM,QAAQ,GAAG,IAAI,SAAS,CAAE,WAAW,CAAE,CAAC;gBAC9C,OAAO,CAAC,QAAQ,CAAE,QAAQ,CAAE,CAAC;gBAC7B,2BAA2B;gBAC3B,QAAQ,CAAC,EAAE,CAAE,QAAQ,EAAE,UAAE,CAA+B;oBACvD,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE,EAAG;wBACxB,KAAI,CAAC,QAAQ,CAAE,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAE,CAAC;qBAC1C;gBACF,CAAC,CAAC,CAAC;gBACH,2BAA2B;gBAC3B,QAAQ,CAAC,EAAE,CAAE,QAAQ,EAAE;oBACtB,IAAI,QAAQ,CAAC,QAAQ,EAAE,EAAG;wBACzB,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE,EAAG;4BACxB,KAAI,CAAC,MAAM,CAAE,QAAQ,CAAC,UAAU,EAAE,CAAE,CAAC;yBACrC;qBACD;gBACF,CAAC,CAAC,CAAC;;YAjBJ,KAAM,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE;wBAAlD,CAAC;aAkBV;SAED;aAAM,IAAK,KAAK,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,EAAG;YACpD,KAAM,IAAI,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;gBAC9D,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAC;aAClB;SACD;QACD,KAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;YACnD,KAAK,CAAE,CAAC,CAAE,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC,MAAM,CAAE,gBAAgB,CAAE,CAAC,CAAE,EACpD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAE,gBAAgB,CAAE,CAAC,CAAE,CAAC,OAAO,CAAE,CAAE,CAAC;YAC7D,IAAI,KAAK,CAAE,CAAC,CAAE,CAAC,QAAQ,EAAE,EAAG;gBAC3B,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAC;aAClB;SACD;IACF,CAAC;IAES,sBAAM,GAAhB,UAAkB,SAAmB;QACpC,4BAA4B;QAC5B,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,iBAAiB;QACjB,IAAI,CAAC,UAAU,CAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,SAAS,CAAE,CAAC;QACnD,IAAI,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAOD,sBAAI,wBAAK;QALT;;;;WAIG;aACH;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;;;OAAA;IAED;;;;;OAKG;IACI,sBAAM,GAAb,UAAe,IAAsB;QACnC,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;QAClD,IAAI,WAAW,EAAG;YACjB,WAAW,CAAC,QAAQ,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC;YAC7C,IAAI,CAAC,MAAM,EAAE,CAAC;SACd;IACH,CAAC;IAED;;;;OAIG;IACI,sBAAM,GAAb,UAAe,IAAsB;QACpC,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;QAClD,IAAI,WAAW,EAAG;YACjB,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,MAAM,EAAE,CAAC;SACd;IACF,CAAC;IAED;;;;OAIG;IACI,wBAAQ,GAAf,UAAiB,IAAsB;QACtC,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;QAClD,IAAI,WAAW,EAAG;YACjB,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;SACd;IACF,CAAC;IAED;;OAEG;IACI,yBAAS,GAAhB;QACC,IAAI,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACI,2BAAW,GAAlB;QACC,IAAI,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC;IACtB,CAAC;IAED;;;;;;OAMG;IACI,2BAAW,GAAlB,UAAoB,IAAsB;QACzC,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;QAClD,OAAO,WAAW,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC7C,CAAC;IAED;;;;;;OAMG;IACI,0BAAU,GAAjB,UAAmB,IAAsB;QACxC,IAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;QAClD,OAAO,WAAW,IAAI,WAAW,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAED;;OAEG;IACI,qBAAK,GAAZ;QACC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAED;;;;OAIG;IACI,sBAAM,GAAb,UAAe,IAAsB;QACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAED;;;;;;;OAOG;IACI,mBAAG,GAAV,UAAY,IAAsB,EAAE,MAAyB;QAC5D,IAAI,MAAM,EAAG;YACZ,IAAI,MAAM,CAAC,QAAQ,EAAG;gBACrB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;aAC7B;iBAAM;gBACN,MAAM,CAAC,QAAQ,GAAG,CAAE,IAAI,CAAE,CAAC;aAC3B;SACD;aAAM;YACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;SACzB;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAED;;;;;OAKG;IACI,yBAAS,GAAhB,UAAkB,IAAsB,EAAE,OAAyB;QAClE,IAAI,CAAC,eAAe,GAAG;YACtB,IAAI,MAAA;YACJ,OAAO,SAAA;YACP,OAAO,EAAE,sBAAsB,CAAC,MAAM;SACtC,CAAC;QACF,IAAI,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAED;;;;;OAKG;IACI,wBAAQ,GAAf,UAAiB,IAAsB,EAAE,OAAyB;QACjE,IAAI,CAAC,eAAe,GAAG;YACtB,IAAI,MAAA;YACJ,OAAO,SAAA;YACP,OAAO,EAAE,sBAAsB,CAAC,KAAK;SACrC,CAAC;QACF,IAAI,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAED;;;;;OAKG;IACI,oBAAI,GAAX,UAAa,QAA6C;QACzD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACK,uBAAO,GAAf,UAAgB,KAAyB,EAAE,QAA6C;QACvF,KAAmB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;YAArB,IAAM,IAAI,cAAA;YACd,IAAG,CAAC,QAAQ,CAAE,IAAI,CAAC,EAAE;gBACpB,OAAO;aACP;iBAAM,IAAI,IAAI,CAAC,QAAQ,EAAG;gBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;aACtC;SACD;IACF,CAAC;IAMD,sBAAI,4BAAS;QAJb;;;WAGG;aACH;YACC,OAAO,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;;;OAAA;IAEO,0BAAU,GAAlB,UACC,iBAA0C,EAC1C,KAAyB,EACzB,KAAa,EACb,SAAmB;QAGnB,KAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;YACxC,IAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;YACxB,qBAAqB;YACrB,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,EAAG;gBAC/B,gCAAgC;gBAChC,KAAK,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,CAAC,EAAE,CAAC;gBACJ,IAAK,iBAAiB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAG;oBAC9C,iBAAiB,CAAC,QAAQ,GAAI,KAAK,CAAC;iBACpC;gBACD,SAAS;aACT;YACD,kBAAkB;YAClB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,KAAK,IAAI,CAAC,eAAe,CAAC,OAAO,EAAG;gBACnE,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,KAAK,sBAAsB,CAAC,KAAK,EAAG;oBACnE,KAAK,CAAC,MAAM,CAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,CAAC;oBACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;iBAC5B;qBAAM,IAAK,IAAI,CAAC,eAAe,CAAC,OAAO,KAAK,sBAAsB,CAAC,MAAM,EAAG;oBAC5E,KAAK,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAE,CAAC;oBAChD,CAAC,EAAE,CAAC;oBACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,SAAS;iBACT;aACD;YAED,IAAM,QAAQ,GAAY,IAAI,CAAC,QAAQ,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;YACxE,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YAExC,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;YACjD,IAAI,aAAa,GAAG,KAAK,CAAC;YAC1B,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;YAChD,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,6CAA6C;YACnE,IAAI,SAAS,IAAI,IAAI,EAAG;gBACvB,QAAQ,GAAG,SAAS,CAAC;aACrB;iBAAM,IAAK,WAAW,EAAG;gBACzB,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;aAChC;YAED,IAAI,WAAW,IAAI,IAAI,EAAG;gBACzB,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC;gBAC3B,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;gBACxB,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC5B,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAChC,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAChC,WAAW,CAAC,KAAK,GAAG,SAAS,CAAC;gBAC9B,aAAa,GAAG,IAAI,CAAC;aACrB;iBAAM;gBACN,WAAW,GAAG;oBACb,OAAO,EAAE,IAAI;oBACb,IAAI,MAAA;oBACJ,KAAK,OAAA;oBACL,CAAC,EAAE,IAAI,CAAC,MAAM;oBACd,QAAQ,UAAA;oBACR,QAAQ,UAAA;oBACR,KAAK,EAAE,SAAS;iBAChB,CAAC;aACF;YAED;;;cAGE;YACF,IAAK,iBAAiB,IAAI,IAAI;gBAC7B,CAAE,iBAAiB;oBAClB,iBAAiB,CAAC,QAAQ;oBAC1B,iBAAiB,CAAC,QAAQ,CAAE,EAAG;gBAChC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;gBAC9C,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC;aAChC;iBAAM;gBACN,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;aAC7B;YACD,IAAK,CAAC,aAAa,EAAG;gBACrB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,IAAI,EAAE,WAAW,CAAE,CAAC;aAC3C;YACD,IAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAG;gBAC5B,IAAI,CAAC,UAAU,CAAE,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,EAAE,SAAS,CAAE,CAAC;aACpE;SACD;IACF,CAAC;IAES,wBAAQ,GAAlB,UAAoB,IAAsB,EAAE,CAA+B;QAA3E,iBAiCC;;QAhCA,oCAAoC;QACpC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAG;YAClC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;YAChC,sCAAsC;SACrC;aAAM,IAAK,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAG;YAC3C,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC;YACxE,IAAI,aAAa,EAAG;gBACnB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBACxB,IAAM,UAAU,GAAG,MAAM,OAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAE,IAAI,CAAE,0CAAE,CAAC,CAAE,CAAC;gBAC9D,IAAM,cAAc,GAAG,MAAM,OAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAG,aAAa,CAAE,0CAAE,CAAC,CAAE,CAAC;gBAC5E,IAAM,MAAI,GAAG,UAAU,GAAG,cAAc,CAAC,CAAC;oBACzC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;oBACnC,UAAU,CAAC;gBACZ,IAAM,MAAI,GAAG,UAAU,GAAG,cAAc,CAAC,CAAC;oBACzC,UAAU,CAAC,CAAC;oBACZ,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;gBAEnC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAE,UAAE,WAAW;oBAC7C,IAAI,WAAW,CAAC,CAAC,IAAI,MAAI,IAAI,WAAW,CAAC,CAAC,IAAI,MAAI,IAAI,WAAW,CAAC,QAAQ,EAAE;wBAC3E,KAAI,CAAC,UAAU,CAAC,GAAG,CAAE,WAAW,CAAC,OAAO,CAAE,CAAC;qBAC3C;oBACD,OAAO,WAAW,CAAC,CAAC,GAAG,MAAI,CAAC;gBAC7B,CAAC,CAAE,CAAC;gBACJ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;aAErC;YACF,gBAAgB;SACf;aAAM;YACN,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;SAC5B;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAED;;OAEG;IACI,iCAAiB,GAAxB;QAAA,iBAKC;QAJA,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAuB,CAAC;QACpD,KAAK,CAAC,OAAO,CAAE,UAAE,IAAI;YACpB,IAAI,CAAC,iBAAiB,CAAE,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAE,IAAI,CAAC,UAAU,EAAE,CAAE,CAAE,CAAC;QACzE,CAAC,CAAC,CAAC;IACJ,CAAC;IAES,uBAAO,GAAjB;QACC,OAAO,OAAO,CAAC;IAChB,CAAC;IACF,YAAC;AAAD,CAAC,AA7aD,CAIU,KAAK,GAyad","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DisplayObject, interaction, Texture } from \"pixi.js\";\r\nimport { DBaseOptions } from \"./d-base\";\r\nimport { DContentOptions } from \"./d-content\";\r\nimport { DPane, DPaneOptions, DThemePane } from \"./d-pane\";\r\nimport { DThemeTreeItem, DTreeItem, DTreeItemOptions } from \"./d-tree-item\";\r\nimport { DTreeSelection } from \"./d-tree-selection\";\r\nimport { DThemes } from \"./theme\";\r\n\r\nexport enum DTreeAddedItemPosition {\r\n\tBEFORE,\r\n\tAFTER\r\n}\r\n\r\nexport interface DTreeOptions<\r\n\tTHEME extends DThemeTree = DThemeTree,\r\n\tCONTENT_OPTIONS extends DBaseOptions = DContentOptions\r\n> extends DPaneOptions <THEME, CONTENT_OPTIONS> {\r\n\tvalue: DTreeItemRawData[];\r\n}\r\n\r\nexport interface DThemeTree extends DThemePane {\r\n\r\n}\r\n\r\nexport interface DTreeItemRawData {\r\n\ttext: string;\r\n\timage?: DisplayObject | Texture | null;\r\n\tchildren: DTreeItemRawData[];\r\n}\r\n\r\nexport interface DTreeAddedItemOptions {\r\n\titem: DTreeItemRawData;\r\n\tsibling: DTreeItemRawData;\r\n\tpositon: DTreeAddedItemPosition;\r\n}\r\n\r\nexport class DTree<\r\n\tTHEME extends DThemeTree = DThemeTree,\r\n\tCONTENT_OPTIONS extends DBaseOptions = DContentOptions,\r\n\tOPTIONS extends DTreeOptions <THEME, CONTENT_OPTIONS> = DTreeOptions <THEME, CONTENT_OPTIONS>\r\n> extends DPane <THEME, CONTENT_OPTIONS, OPTIONS> {\r\n\tprotected _itemOptions!: WeakMap<DTreeItemRawData, DTreeItemOptions>;\r\n\tprotected _itemOptionsShowable!: DTreeItemOptions[];\r\n\tprotected _selection!: DTreeSelection;\r\n\tprotected _value!: DTreeItemRawData[];\r\n\tprotected _itemIndexMappedStart!: number;\r\n\tprotected _itemIndexMappedEnd!: number;\r\n\tprivate _itemY!: number;\r\n\tprivate _itemHeight!: number;\r\n\tprivate _removeItem!: DTreeItemRawData | null;\r\n\tprivate _addItemOptions!: DTreeAddedItemOptions | null;\r\n\r\n\tprotected init( options ?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\t\tthis._itemOptions = new WeakMap();\r\n\t\tthis._selection = new DTreeSelection();\r\n\t\tthis._itemOptionsShowable = [];\r\n\t\tthis._itemIndexMappedStart = 0;\r\n\t\tthis._itemIndexMappedEnd = 0;\r\n\t\tthis._itemY = 0;\r\n\r\n\t\tconst itemTheme: DThemeTreeItem = DThemes.getInstance().get( \"DTreeItem\" );\r\n\t\tthis._itemHeight = Number( itemTheme.getHeight() );\r\n\r\n\t\tthis._value = options && options.value ? options.value : [];\r\n\t\tthis.updateData( null, this._value, 0 );\r\n\r\n\t\tthis._content.on( \"move\", (): void => {\r\n\t\t\tthis.update();\r\n\t\t});\r\n\r\n\t\tthis._content.on( \"resize\", (): void => {\r\n\t\t\tthis._content.removeChildren();\r\n\t\t\tthis.update();\r\n\t\t});\r\n\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tprotected update() {\r\n\t\tconst content = this._content;\r\n\t\tconst items = content.children as DTreeItem[] ;\r\n\t\t// calculate content height\r\n\t\tcontent.height = this._itemOptionsShowable.length * this._itemHeight;\r\n\t\tconst contentY = content.position.y;\r\n\t\tconst height = this.height;\r\n\t\tconst itemIndexMappedStart = ( 0 - contentY ) / this._itemHeight - 2 < 0 ?\r\n\t\t\t0 :\r\n\t\t\tMath.floor( ( 0 - contentY ) / this._itemHeight ) - 2;\r\n\r\n\t\tconst itemIndexMappedEnd = ( height - contentY ) / this._itemHeight + 2 < this._itemOptionsShowable.length - 1 ?\r\n\t\t\tMath.floor( ( height - contentY ) / this._itemHeight ) + 2 :\r\n\t\t\tthis._itemOptionsShowable.length;\r\n\r\n\t\t// get items options are shown in Dpane content frame\r\n\t\tconst itemOptionsShown = this._itemOptionsShowable.slice( itemIndexMappedStart, itemIndexMappedEnd );\r\n\r\n\t\tif ( items.length < itemOptionsShown.length ) {\r\n\t\t\tfor ( let i = items.length; i < itemOptionsShown.length; i++ ) {\r\n\t\t\t\tconst itemOptions = itemOptionsShown[ i ];\r\n\t\t\t\tconst treeItem = new DTreeItem( itemOptions );\r\n\t\t\t\tcontent.addChild( treeItem );\r\n\t\t\t\t// listen select item event\r\n\t\t\t\ttreeItem.on( \"select\", ( e: interaction.InteractionEvent ): void => {\r\n\t\t\t\t\tif( !this.isDisabled() ) {\r\n\t\t\t\t\t\tthis.onSelect( treeItem.getRawData(), e );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// listen toggle item event\r\n\t\t\t\ttreeItem.on( \"toggle\", (): void => {\r\n\t\t\t\t\tif( treeItem.isParent() ) {\r\n\t\t\t\t\t\tif( !this.isDisabled() ) {\r\n\t\t\t\t\t\t\tthis.toggle( treeItem.getRawData() );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} else if ( items.length > itemOptionsShown.length ) {\r\n\t\t\tfor ( let i = itemOptionsShown.length; i < items.length; i++ ) {\r\n\t\t\t\titems[ i ].hide();\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor ( let i = 0; i < itemOptionsShown.length; i++ ) {\r\n\t\t\titems[ i ] = items[ i ].update( itemOptionsShown[ i ],\r\n\t\t\t\tthis._selection.contains( itemOptionsShown[ i ].rawData ) );\r\n\t\t\tif( items[ i ].isHidden() ) {\r\n\t\t\t\titems[ i ].show();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected reload( expandAll?: boolean ) {\r\n\t\t// reset data of tree widget\r\n\t\tthis._itemOptionsShowable.length = 0;\r\n\t\tthis._itemY = 0;\r\n\t\t// re-render tree\r\n\t\tthis.updateData( null, this._value, 0, expandAll );\r\n\t\tthis.update();\r\n\t}\r\n\r\n\t/**\r\n\t * Getter method to access raw data.\r\n\t *\r\n\t * @returns raw data.\r\n\t */\r\n\tget value() {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle an tree parent item,\r\n\t * Expand an collapsed tree item or collapse an expanded item.\r\n\t *\r\n\t * @param item Reference data of item want to toggle in “value” array.\r\n\t */\r\n\tpublic toggle( item: DTreeItemRawData ) {\r\n\t\t\tconst itemOptions = this._itemOptions.get( item );\r\n\t\t\tif( itemOptions ) {\r\n\t\t\t\titemOptions.expanded = !itemOptions.expanded;\r\n\t\t\t\tthis.reload();\r\n\t\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Expand a collapsed tree item.\r\n\t *\r\n\t * @param item Reference data of item want to expand in “value” array.\r\n\t */\r\n\tpublic expand( item: DTreeItemRawData ) {\r\n\t\tconst itemOptions = this._itemOptions.get( item );\r\n\t\tif( itemOptions ) {\r\n\t\t\titemOptions.expanded = true;\r\n\t\t\tthis.reload();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Collapse an expanded tree item.\r\n\t *\r\n\t * @param item Reference data of item want to collapse in “value” array.\r\n\t */\r\n\tpublic collapse( item: DTreeItemRawData ) {\r\n\t\tconst itemOptions = this._itemOptions.get( item );\r\n\t\tif( itemOptions ) {\r\n\t\t\titemOptions.expanded = false;\r\n\t\t\tthis.reload();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Expand all tree item.\r\n\t */\r\n\tpublic expandAll() {\r\n\t\tthis.reload( true );\r\n\t}\r\n\r\n\t/**\r\n\t * Collapse all tree item.\r\n\t */\r\n\tpublic collapseAll() {\r\n\t\tthis.reload( false );\r\n\t}\r\n\r\n\t/**\r\n\t * Check if an item is collapsed.\r\n\t *\r\n\t * @param item Reference data of item want to check in “value” array.\r\n\t *\r\n\t * @returns collapse status of the item.\r\n\t */\r\n\tpublic isCollapsed( item: DTreeItemRawData ) {\r\n\t\tconst itemOptions = this._itemOptions.get( item );\r\n\t\treturn itemOptions && !itemOptions.expanded;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if an item is expanded.\r\n\t *\r\n\t * @param item Reference data of item want to check in “value” array.\r\n\t *\r\n\t * @returns expand status of the item.\r\n\t */\r\n\tpublic isExpanded( item: DTreeItemRawData ) {\r\n\t\tconst itemOptions = this._itemOptions.get( item );\r\n\t\treturn itemOptions && itemOptions.expanded;\r\n\t}\r\n\r\n\t/**\r\n\t * Clear all tree item.\r\n\t */\r\n\tpublic clear() {\r\n\t\tthis._value = [];\r\n\t\tthis.reload();\r\n\t}\r\n\r\n\t/**\r\n\t * Remove a tree item\r\n\t *\r\n\t * @param item Reference data of item want to remove in “value” array.\r\n\t */\r\n\tpublic remove( item: DTreeItemRawData ) {\r\n\t\tthis._removeItem = item;\r\n\t\tthis.reload();\r\n\t}\r\n\r\n\t/**\r\n\t * Add a tree item\r\n\t *\r\n\t * @param item data of new item want to add to tree.\r\n\t * @param parent Reference data of parent item will contain the adding item.\r\n\t * If the parent is undefined, the item will be added at the top level.\r\n\t * If the parent is not undefined, the item will be inserted as a child of the given parent item.\r\n\t */\r\n\tpublic add( item: DTreeItemRawData, parent?: DTreeItemRawData ) {\r\n\t\tif( parent ) {\r\n\t\t\tif( parent.children ) {\r\n\t\t\t\tparent.children.push( item );\r\n\t\t\t} else {\r\n\t\t\t\tparent.children = [ item ];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._value.push( item );\r\n\t\t}\r\n\t\tthis.reload();\r\n\t}\r\n\r\n\t/**\r\n\t * Add the given item will be inserted before the given sibling item.\r\n\t *\r\n\t * @param item data of new item want to add to tree.\r\n\t * @param sibling Reference data of parent item will be using like anchor to add new item.\r\n\t */\r\n\tpublic addBefore( item: DTreeItemRawData, sibling: DTreeItemRawData ) {\r\n\t\tthis._addItemOptions = {\r\n\t\t\titem,\r\n\t\t\tsibling,\r\n\t\t\tpositon: DTreeAddedItemPosition.BEFORE\r\n\t\t};\r\n\t\tthis.reload();\r\n\t}\r\n\r\n\t/**\r\n\t * Add the given item will be inserted after the given sibling item.\r\n\t *\r\n\t * @param item data of new item want to add to tree.\r\n\t * @param sibling Reference data of parent item will be using like anchor to add new item.\r\n\t */\r\n\tpublic addAfter( item: DTreeItemRawData, sibling: DTreeItemRawData ) {\r\n\t\tthis._addItemOptions = {\r\n\t\t\titem,\r\n\t\t\tsibling,\r\n\t\t\tpositon: DTreeAddedItemPosition.AFTER\r\n\t\t};\r\n\t\tthis.reload();\r\n\t}\r\n\r\n\t/**\r\n\t * Iterate over all the items.\r\n\t *\r\n\t * @param iteratee  boolean function. If the iteratee explicitly returns false, an iteration stops.\r\n\t * @param item data of browsed item.\r\n\t */\r\n\tpublic each( iteratee: (item: DTreeItemRawData) => boolean ): void {\r\n\t\tthis.inOrder(this._value, iteratee);\r\n\t}\r\n\r\n\t/**\r\n\t * The recursive function performs item browsing in the tree.\r\n\t */\r\n\tprivate inOrder(items: DTreeItemRawData[], iteratee: (item: DTreeItemRawData) => boolean) {\r\n\t\tfor (const item of items) {\r\n\t\t\tif(!iteratee (item)) {\r\n\t\t\t\treturn;\r\n\t\t\t} else if( item.children ) {\r\n\t\t\t\tthis.inOrder(item.children, iteratee);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get selection object.\r\n\t * @returns selection.\r\n\t */\r\n\tget selection() {\r\n\t\treturn this._selection;\r\n\t}\r\n\r\n\tprivate updateData(\r\n\t\tparentItemOptions: DTreeItemOptions | null,\r\n\t\titems: DTreeItemRawData[],\r\n\t\tlevel: number,\r\n\t\texpandAll?: boolean\r\n\t\t) {\r\n\r\n\t\tfor ( let i = 0; i < items.length; i++ ) {\r\n\t\t\tconst item = items[ i ];\r\n\t\t\t// handle remove item\r\n\t\t\tif( item === this._removeItem ) {\r\n\t\t\t\t// remove item from this._value.\r\n\t\t\t\titems.splice( i, 1 );\r\n\t\t\t\tthis._removeItem = null;\r\n\t\t\t\ti--;\r\n\t\t\t\tif ( parentItemOptions && items.length === 0 ) {\r\n\t\t\t\t\tparentItemOptions.isParent  = false;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// handle add item\r\n\t\t\tif( this._addItemOptions && item === this._addItemOptions.sibling ) {\r\n\t\t\t\tif( this._addItemOptions.positon === DTreeAddedItemPosition.AFTER ) {\r\n\t\t\t\t\titems.splice( i + 1, 0, this._addItemOptions.item );\r\n\t\t\t\t\tthis._addItemOptions = null;\r\n\t\t\t\t} else if ( this._addItemOptions.positon === DTreeAddedItemPosition.BEFORE ) {\r\n\t\t\t\t\titems.splice( i, 0, this._addItemOptions.item );\r\n\t\t\t\t\ti--;\r\n\t\t\t\t\tthis._addItemOptions = null;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst isParent: boolean = item.children && ( item.children.length > 0 );\r\n\t\t\tconst text = item.text ? item.text : \"\";\r\n\r\n\t\t\tconst itemImage = item.image ? item.image : null;\r\n\t\t\tlet isItemExisted = false;\r\n\t\t\tlet itemOptions = this._itemOptions.get( item );\r\n\t\t\tlet expanded = false; // set default expand status of item is false\r\n\t\t\tif( expandAll != null ) {\r\n\t\t\t\texpanded = expandAll;\r\n\t\t\t} else if ( itemOptions ) {\r\n\t\t\t\texpanded = itemOptions.expanded;\r\n\t\t\t}\r\n\r\n\t\t\tif( itemOptions != null ) {\r\n\t\t\t\titemOptions.rawData = item;\r\n\t\t\t\titemOptions.text = text;\r\n\t\t\t\titemOptions.y = this._itemY;\r\n\t\t\t\titemOptions.isParent = isParent;\r\n\t\t\t\titemOptions.expanded = expanded;\r\n\t\t\t\titemOptions.image = itemImage;\r\n\t\t\t\tisItemExisted = true;\r\n\t\t\t} else {\r\n\t\t\t\titemOptions = {\r\n\t\t\t\t\trawData: item,\r\n\t\t\t\t\ttext,\r\n\t\t\t\t\tlevel,\r\n\t\t\t\t\ty: this._itemY,\r\n\t\t\t\t\tisParent,\r\n\t\t\t\t\texpanded,\r\n\t\t\t\t\timage: itemImage\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t/* displayed items need to satisfy 1 of the 2 conditions:\r\n\t\t\t1. is root item\r\n\t\t\t2. the parent item is show and expand\r\n\t\t\t*/\r\n\t\t\tif ( parentItemOptions == null ||\r\n\t\t\t\t( parentItemOptions &&\r\n\t\t\t\t\tparentItemOptions.expanded &&\r\n\t\t\t\t\tparentItemOptions.showable ) ) {\r\n\t\t\t\titemOptions.showable = true;\r\n\t\t\t\tthis._itemOptionsShowable.push( itemOptions );\r\n\t\t\t\tthis._itemY += this._itemHeight;\r\n\t\t\t} else {\r\n\t\t\t\titemOptions.showable = false;\r\n\t\t\t}\r\n\t\t\tif ( !isItemExisted ) {\r\n\t\t\t\tthis._itemOptions.set( item, itemOptions );\r\n\t\t\t}\r\n\t\t\tif ( item && item.children ) {\r\n\t\t\t\tthis.updateData( itemOptions, item.children, level + 1, expandAll );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onSelect( item: DTreeItemRawData, e: interaction.InteractionEvent ) {\r\n\t\t// multi select by \"ctr\" key + click\r\n\t\tif( e.data.originalEvent.ctrlKey ) {\r\n\t\t\tthis._selection.toggle( item );\r\n\t\t// multi select by \"shift\" key + click\r\n\t\t} else if ( e.data.originalEvent.shiftKey ) {\r\n\t\t\tconst lastSelection = this._selection.get( this._selection.size() - 1 );\r\n\t\t\tif( lastSelection ) {\r\n\t\t\t\tthis._selection.clear();\r\n\t\t\t\tconst selectionY = Number( this._itemOptions.get( item )?.y );\r\n\t\t\t\tconst lastSelectionY = Number( this._itemOptions.get ( lastSelection )?.y );\r\n\t\t\t\tconst maxY = selectionY < lastSelectionY ?\r\n\t\t\t\t\tlastSelectionY - this._itemHeight :\r\n\t\t\t\t\tselectionY;\r\n\t\t\t\tconst minY = selectionY < lastSelectionY ?\r\n\t\t\t\t\tselectionY :\r\n\t\t\t\t\tlastSelectionY + this._itemHeight;\r\n\r\n\t\t\t\tthis._itemOptionsShowable.every( ( itemOptions ) => {\r\n\t\t\t\t\tif( itemOptions.y >= minY && itemOptions.y <= maxY && itemOptions.showable) {\r\n\t\t\t\t\t\tthis._selection.add( itemOptions.rawData );\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn itemOptions.y < maxY;\r\n\t\t\t\t} );\r\n\t\t\t\tthis._selection.add( lastSelection );\r\n\r\n\t\t\t}\r\n\t\t// single select\r\n\t\t} else {\r\n\t\t\tthis._selection.clear();\r\n\t\t\tthis._selection.add( item );\r\n\t\t}\r\n\t\tthis.updateActiveState();\r\n\t}\r\n\r\n\t/* update active state of all shown item.\r\n\t*\r\n\t**/\r\n\tpublic updateActiveState() {\r\n\t\tconst items = this._content.children as DTreeItem[];\r\n\t\titems.forEach( ( item ) => {\r\n\t\t\titem.updateActiveState( this._selection.contains( item.getRawData() ) );\r\n\t\t});\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTree\";\r\n\t}\r\n}\r\n"]}