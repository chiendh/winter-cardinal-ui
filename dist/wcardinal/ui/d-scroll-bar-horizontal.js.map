{"version":3,"file":"d-scroll-bar-horizontal.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-scroll-bar-horizontal.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAIH,OAAO,EAAE,UAAU,EAAqB,MAAM,gBAAgB,CAAC;AAE/D,OAAO,EAAE,yBAAyB,EAAE,MAAM,iCAAiC,CAAC;AAC5E,OAAO,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAE7D;IAA0C,wCAAU;IAApD;;IAgDA,CAAC;IA/CU,mCAAI,GAAd,UAAgB,OAA2B;QAA3C,iBA2BC;QA1BA,iBAAM,IAAI,YAAE,OAAO,CAAE,CAAC;QAEtB,IAAI,CAAC,EAAE,CAAE,gBAAgB,CAAC,IAAI,EAAE,UAAE,CAAmB;YACpD,IAAI,CAAC,CAAC,MAAM,KAAK,KAAI,EAAG;gBACvB,IAAM,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC;gBACzB,IAAI,CAAC,GAAG,KAAK,EAAG;oBACf,IAAM,IAAI,GAAG,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC;oBACrC,IAAM,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAE,KAAI,CAAE,CAAC;oBACjD,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,CAAE,CAAE,CAAC;oBACtF,IAAI,KAAI,CAAC,MAAM,KAAK,QAAQ,EAAG;wBAC9B,KAAI,CAAC,IAAI,CAAE,YAAY,EAAE,QAAQ,EAAE,KAAI,CAAE,CAAC;qBAC1C;iBACD;aACD;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAE,YAAY,EAAE,UAAE,CAAS;YACxC,IAAM,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,GAAG,KAAK,EAAG;gBACf,IAAM,IAAI,GAAG,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC;gBACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,GAAG,KAAK,CAAE,CAAE,CAAC;gBAChE,IAAI,KAAI,CAAC,MAAM,KAAK,QAAQ,EAAG;oBAC9B,KAAI,CAAC,IAAI,CAAE,YAAY,EAAE,QAAQ,EAAE,KAAI,CAAE,CAAC;iBAC1C;aACD;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAES,0CAAW,GAArB,UAAuB,OAAgC;QACtD,OAAO,IAAI,yBAAyB,CAAE,OAAO,CAAE,CAAC;IACjD,CAAC;IAED,6CAAc,GAAd;QACC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAE,KAAK,GAAG,GAAG,EAAE,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;QACzE,IAAM,KAAK,GAAG,KAAK,GAAG,gBAAgB,CAAC;QACvC,IAAM,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QACrC,IAAM,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,gBAAgB,GAAG,QAAQ,CAAC;QAEhE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAE,QAAQ,EAAE,CAAC,CAAE,CAAC;QAClC,KAAK,CAAC,MAAM,CAAE,OAAO,EAAE,MAAM,CAAE,CAAC;QAEhC,iBAAM,cAAc,WAAE,CAAC;IACxB,CAAC;IACF,2BAAC;AAAD,CAAC,AAhDD,CAA0C,UAAU,GAgDnD","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { interaction } from \"pixi.js\";\r\nimport InteractionEvent = interaction.InteractionEvent;\r\nimport { DScrollBar, DScrollBarOptions } from \"./d-scroll-bar\";\r\nimport { DScrollBarThumb, DScrollBarThumbOptions } from \"./d-scroll-bar-thumb\";\r\nimport { DScrollBarThumbHorizontal } from \"./d-scroll-bar-thumb-horizontal\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\n\r\nexport class DScrollBarHorizontal extends DScrollBar {\r\n\tprotected init( options?: DScrollBarOptions ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tthis.on( UtilPointerEvent.down, ( e: InteractionEvent ) => {\r\n\t\t\tif( e.target === this ) {\r\n\t\t\t\tconst width = this.width;\r\n\t\t\t\tif( 0 < width ) {\r\n\t\t\t\t\tconst size = this._end - this._start;\r\n\t\t\t\t\tconst position = e.data.getLocalPosition( this );\r\n\t\t\t\t\tconst newStart = Math.min( 1 - size, Math.max( 0, position.x / width - size * 0.5 ) );\r\n\t\t\t\t\tif( this._start !== newStart ) {\r\n\t\t\t\t\t\tthis.emit( \"regionmove\", newStart, this );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._thumb.on( \"regionmove\", ( x: number ) => {\r\n\t\t\tconst width = this.width;\r\n\t\t\tif( 0 < width ) {\r\n\t\t\t\tconst size = this._end - this._start;\r\n\t\t\t\tconst newStart = Math.min( 1 - size, Math.max( 0, x / width ) );\r\n\t\t\t\tif( this._start !== newStart ) {\r\n\t\t\t\t\tthis.emit( \"regionmove\", newStart, this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected createThumb( options?: DScrollBarThumbOptions ): DScrollBarThumb {\r\n\t\treturn new DScrollBarThumbHorizontal( options );\r\n\t}\r\n\r\n\tonRegionChange(): void {\r\n\t\tconst thumb = this._thumb;\r\n\t\tconst width = this.width;\r\n\t\tconst height = this.height;\r\n\t\tconst thumbMinimumSize = Math.min( width * 0.5, thumb.getMinimumSize() );\r\n\t\tconst space = width - thumbMinimumSize;\r\n\t\tconst barStart = space * this._start;\r\n\t\tconst barSize = space * this._end + thumbMinimumSize - barStart;\r\n\r\n\t\tthumb.position.set( barStart, 0 );\r\n\t\tthumb.resize( barSize, height );\r\n\r\n\t\tsuper.onRegionChange();\r\n\t}\r\n}\r\n"]}