{"version":3,"file":"dynamic-sdf-font-atlases.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/util/dynamic-sdf-font-atlases.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DynamicAtlas } from \"./dynamic-atlas\";\r\nimport { DynamicAtlasItemFontAtlas } from \"./dynamic-atlas-item-font-atlas\";\r\nimport { DynamicSDFFontAtlas } from \"./dynamic-sdf-font-atlas\";\r\n\r\nexport class DynamicSDFFontAtlases {\r\n\tprotected _atlases: { [ family: string ]: DynamicSDFFontAtlas };\r\n\r\n\tconstructor() {\r\n\t\tthis._atlases = {};\r\n\t}\r\n\r\n\tbegin(): void {\r\n\t\tconst atlases = this._atlases;\r\n\t\tfor( const family in atlases ) {\r\n\t\t\tconst atlas = atlases[ family ];\r\n\t\t\tatlas.begin();\r\n\t\t}\r\n\t}\r\n\r\n\tend(): void {\r\n\t\tconst atlases = this._atlases;\r\n\t\tfor( const family in atlases ) {\r\n\t\t\tconst atlas = atlases[ family ];\r\n\t\t\tif( 0 < atlas.length ) {\r\n\t\t\t\tatlas.addAscii();\r\n\t\t\t}\r\n\t\t\tatlas.end();\r\n\t\t\tif( atlas.length <= 0 ) {\r\n\t\t\t\tatlas.destroy();\r\n\t\t\t\tdelete atlases[ family ];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tadd( family: string, targets: string ) {\r\n\t\tconst atlas = this._atlases[ family ];\r\n\t\tif( atlas != null ) {\r\n\t\t\tatlas.add( targets );\r\n\t\t} else {\r\n\t\t\tconst newAtlas = new DynamicSDFFontAtlas( family );\r\n\t\t\tnewAtlas.add( targets );\r\n\t\t\tthis._atlases[ family ] = newAtlas;\r\n\t\t}\r\n\t}\r\n\r\n\tget( family: string ): DynamicSDFFontAtlas | null {\r\n\t\tconst atlas = this._atlases[ family ];\r\n\t\tif( atlas != null ) {\r\n\t\t\treturn atlas;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tupdate( baseAtlas: DynamicAtlas ): void {\r\n\t\tconst atlases = this._atlases;\r\n\t\tconst baseTexture = baseAtlas.getBaseTexture();\r\n\t\tfor( const family in atlases ) {\r\n\t\t\tconst atlas = atlases[ family ];\r\n\t\t\tif( atlas.update() ) {\r\n\t\t\t\tconst atlasId = atlas.id;\r\n\t\t\t\tconst item = baseAtlas.get( atlasId );\r\n\t\t\t\tif( item != null ) {\r\n\t\t\t\t\tconst width = atlas.width;\r\n\t\t\t\t\tconst height = atlas.height;\r\n\t\t\t\t\tconst resolution = baseTexture.resolution;\r\n\t\t\t\t\titem.frame.width = width;\r\n\t\t\t\t\titem.frame.height = height;\r\n\t\t\t\t\titem.width = width / resolution;\r\n\t\t\t\t\titem.height = height / resolution;\r\n\t\t\t\t\tbaseAtlas.toDirty();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbaseAtlas.set(\r\n\t\t\t\t\t\tatlasId,\r\n\t\t\t\t\t\tnew DynamicAtlasItemFontAtlas( atlas, baseTexture )\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tconst atlases = this._atlases;\r\n\t\tfor( const family in atlases ) {\r\n\t\t\tconst atlas = atlases[ family ];\r\n\t\t\tatlas.destroy();\r\n\t\t}\r\n\t\tthis._atlases = {};\r\n\t}\r\n}\r\n"]}