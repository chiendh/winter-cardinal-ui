{"version":3,"file":"dynamic-sdf-font-atlas.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/util/dynamic-sdf-font-atlas.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DThemes } from \"../theme/d-themes\";\r\nimport { ASCII_CHARACTERS } from \"./ascii\";\r\nimport { DynamicFontAtlasCharacter } from \"./dynamic-font-atlas-character\";\r\nimport { DynamicFontAtlasCharacters } from \"./dynamic-font-atlas-characters\";\r\nimport { DynamicSDFFontGenerator } from \"./dynamic-sdf-font-generator\";\r\nimport { UtilCharacterIterator } from \"./util-character-iterator\";\r\n\r\nexport interface DynamicSDFFontAtlasFont {\r\n\tfamily: string;\r\n\tsize: number;\r\n\titalic: boolean;\r\n}\r\n\r\nexport interface DynamicSDFFontAtlasJson {\r\n\twidth: number;\r\n\theight: number;\r\n\tfont: DynamicSDFFontAtlasFont;\r\n\tcharacters: DynamicFontAtlasCharacters;\r\n}\r\n\r\nexport class DynamicSDFFontAtlas {\r\n\tprotected static FONT_FAMILY_AUTO: string | null = null;\r\n\r\n\tprotected _id: string;\r\n\tprotected _generator: DynamicSDFFontGenerator | null;\r\n\tprotected _canvas: HTMLCanvasElement | null;\r\n\tprotected _font: DynamicSDFFontAtlasFont;\r\n\tprotected _characters: DynamicFontAtlasCharacters;\r\n\tprotected _length: number;\r\n\tprotected _width: number;\r\n\tprotected _height: number;\r\n\tprotected _isDirty: boolean;\r\n\r\n\tconstructor( fontFamily: string ) {\r\n\t\tthis._id = `font-atlas:${fontFamily}`;\r\n\t\tthis._generator = DynamicSDFFontGenerator.getInstance().init();\r\n\t\tthis._canvas = document.createElement( \"canvas\" );\r\n\t\tthis._font = {\r\n\t\t\tfamily: DynamicSDFFontAtlas.toFontFamily( fontFamily ),\r\n\t\t\tsize: 32,\r\n\t\t\titalic: false\r\n\t\t};\r\n\t\tthis._characters = {};\r\n\t\tthis._length = 0;\r\n\t\tthis._width = 1;\r\n\t\tthis._height = 1;\r\n\t\tthis._isDirty = true;\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tget font(): DynamicSDFFontAtlasFont {\r\n\t\treturn this._font;\r\n\t}\r\n\r\n\tset font( font: DynamicSDFFontAtlasFont ) {\r\n\t\tthis._font.family = font.family;\r\n\t\tthis._font.size = font.size;\r\n\t\tthis._font.italic = font.italic;\r\n\t}\r\n\r\n\tget width(): number {\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height(): number {\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tget canvas(): HTMLCanvasElement | null {\r\n\t\treturn this._canvas;\r\n\t}\r\n\r\n\tget generator(): DynamicSDFFontGenerator | null {\r\n\t\treturn this._generator;\r\n\t}\r\n\r\n\tget characters(): DynamicFontAtlasCharacters {\r\n\t\treturn this._characters;\r\n\t}\r\n\r\n\tbegin(): void {\r\n\t\tthis._length = 0;\r\n\t\tconst characters = this._characters;\r\n\t\tfor( const character in characters ) {\r\n\t\t\tcharacters[ character ].ref = 0;\r\n\t\t}\r\n\t}\r\n\r\n\tend(): void {\r\n\t\tconst characters = this._characters;\r\n\t\tfor( const character in characters ) {\r\n\t\t\tconst data = characters[ character ];\r\n\t\t\tif( data.ref <= 0 ) {\r\n\t\t\t\tdata.life -= 1;\r\n\t\t\t\tif( data.life <= 0 ) {\r\n\t\t\t\t\tdelete characters[ character ];\r\n\t\t\t\t\tthis._isDirty =  true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\taddAscii(): void {\r\n\t\tthis.add( ASCII_CHARACTERS );\r\n\t\tthis.addChar( \"...\" );\r\n\t}\r\n\r\n\taddChar( character: string ): void {\r\n\t\tconst characters = this._characters;\r\n\t\tif( character !== \"\\n\" ) {\r\n\t\t\tconst data = characters[ character ];\r\n\t\t\tif( data != null ) {\r\n\t\t\t\tif( data.ref <= 0 ) {\r\n\t\t\t\t\tthis._length += 1;\r\n\t\t\t\t}\r\n\t\t\t\tdata.ref += 1;\r\n\t\t\t} else {\r\n\t\t\t\tcharacters[ character ] = new DynamicFontAtlasCharacter( 0, 1, 1, false );\r\n\t\t\t\tthis._length += 1;\r\n\t\t\t\tthis._isDirty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tadd( characters: string ): void {\r\n\t\tconst iterator = UtilCharacterIterator.from( characters );\r\n\t\twhile( iterator.hasNext() ) {\r\n\t\t\tthis.addChar( iterator.next() );\r\n\t\t}\r\n\t}\r\n\r\n\tget( character: string ): DynamicFontAtlasCharacter | undefined {\r\n\t\treturn this._characters[ character ];\r\n\t}\r\n\r\n\tupdate(): boolean {\r\n\t\tif( this._isDirty ) {\r\n\t\t\tconst canvas = this._canvas;\r\n\t\t\tconst generator = this._generator;\r\n\t\t\tif( canvas != null && generator != null ) {\r\n\t\t\t\tconst context = canvas.getContext( \"2d\" );\r\n\t\t\t\tif( context != null ) {\r\n\t\t\t\t\tthis._isDirty = false;\r\n\r\n\t\t\t\t\tconst font = this._font;\r\n\t\t\t\t\tconst characters = this._characters;\r\n\t\t\t\t\tconst characterSize = font.size + 14;\r\n\t\t\t\t\tconst width = DynamicSDFFontAtlas.toPowerOf2( Math.ceil( Math.sqrt( this._length ) ) * characterSize );\r\n\t\t\t\t\tthis._width = width;\r\n\t\t\t\t\tconst fontStyle = (font.italic ? \"italic \" : \"\") + (font.size + \"px \") + font.family;\r\n\r\n\t\t\t\t\tcontext.font = fontStyle;\r\n\t\t\t\t\tcontext.textAlign = \"left\";\r\n\t\t\t\t\tcontext.textBaseline = \"middle\";\r\n\t\t\t\t\tcontext.lineWidth = 0;\r\n\t\t\t\t\tcontext.lineCap = \"round\";\r\n\t\t\t\t\tcontext.lineJoin = \"miter\";\r\n\t\t\t\t\tcontext.miterLimit = 0;\r\n\t\t\t\t\tcontext.fillStyle = \"#FFFFFF\";\r\n\r\n\t\t\t\t\tconst offsetX = 7;\r\n\t\t\t\t\tconst offsetY = ( characterSize >> 1 );\r\n\t\t\t\t\tlet x = 0;\r\n\t\t\t\t\tlet y = 0;\r\n\t\t\t\t\tfor( const character in characters ) {\r\n\t\t\t\t\t\tconst data = characters[ character ];\r\n\t\t\t\t\t\tconst advance = context.measureText( character ).width;\r\n\t\t\t\t\t\tconst characterWidth = Math.ceil( offsetX + advance + offsetX );\r\n\t\t\t\t\t\tconst characterHeight = characterSize;\r\n\t\t\t\t\t\tif( width <= x + characterWidth ) {\r\n\t\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\t\ty += characterSize;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata.x = x;\r\n\t\t\t\t\t\tdata.y = y;\r\n\t\t\t\t\t\tdata.width = characterWidth;\r\n\t\t\t\t\t\tdata.height = characterHeight;\r\n\t\t\t\t\t\tdata.advance = advance;\r\n\t\t\t\t\t\tdata.origin.x = x + offsetX;\r\n\t\t\t\t\t\tdata.origin.y = y + offsetY;\r\n\r\n\t\t\t\t\t\tx += characterWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst height = this._height = y + characterSize;\r\n\r\n\t\t\t\t\t// Make a input canvas\r\n\t\t\t\t\t// Here, we need to reset the context because\r\n\t\t\t\t\t// context settings will be lost when we set the width/height.\r\n\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\tcanvas.height = height;\r\n\t\t\t\t\tcontext.font = fontStyle;\r\n\t\t\t\t\tcontext.textAlign = \"left\";\r\n\t\t\t\t\tcontext.textBaseline = \"middle\";\r\n\t\t\t\t\tcontext.lineWidth = 0;\r\n\t\t\t\t\tcontext.lineCap = \"round\";\r\n\t\t\t\t\tcontext.lineJoin = \"miter\";\r\n\t\t\t\t\tcontext.miterLimit = 4;\r\n\t\t\t\t\tcontext.fillStyle = \"#FFFFFF\";\r\n\t\t\t\t\tcontext.clearRect( 0, 0, width, height );\r\n\t\t\t\t\tfor( const character in characters ) {\r\n\t\t\t\t\t\tconst data = characters[ character ];\r\n\t\t\t\t\t\tcontext.fillText( character, data.origin.x, data.origin.y );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Convert to SDF font texture\r\n\t\t\t\t\tgenerator.updateTexture( canvas );\r\n\t\t\t\t\tgenerator.render();\r\n\t\t\t\t\tgenerator.read( canvas );\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget length(): number {\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\ttoJson(): DynamicSDFFontAtlasJson {\r\n\t\treturn {\r\n\t\t\twidth: this._width,\r\n\t\t\theight: this._height,\r\n\t\t\tfont: this._font,\r\n\t\t\tcharacters: this._characters\r\n\t\t};\r\n\t}\r\n\r\n\ttoString(): string {\r\n\t\treturn JSON.stringify( this.toJson() );\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tconst generator = this._generator;\r\n\t\tif( generator != null ) {\r\n\t\t\tthis._generator = null;\r\n\t\t}\r\n\r\n\t\tconst canvas = this._canvas;\r\n\t\tif( canvas != null ) {\r\n\t\t\tthis._canvas = null;\r\n\t\t}\r\n\r\n\t\tconst characters = this._characters;\r\n\t\tfor( const character in characters ) {\r\n\t\t\tdelete characters[ character ];\r\n\t\t}\r\n\t}\r\n\r\n\tstatic toFontFamily( fontFamily: string ) {\r\n\t\treturn ( fontFamily === \"auto\" ?\r\n\t\t\tDynamicSDFFontAtlas.getAutoFontFamily() :\r\n\t\t\tfontFamily\r\n\t\t);\r\n\t}\r\n\r\n\tstatic toPowerOf2( size: number ): number {\r\n\t\tlet result = 32;\r\n\t\twhile( result < size ) {\r\n\t\t\tresult <<= 1;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic getAutoFontFamily(): string {\r\n\t\tif( DynamicSDFFontAtlas.FONT_FAMILY_AUTO == null ) {\r\n\t\t\tDynamicSDFFontAtlas.FONT_FAMILY_AUTO = (DThemes.getInstance().get( \"DBase\" ) as any).getFontFamilly() as string;\r\n\t\t}\r\n\t\treturn DynamicSDFFontAtlas.FONT_FAMILY_AUTO;\r\n\t}\r\n}\r\n"]}