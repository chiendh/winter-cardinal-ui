{"version":3,"file":"dynamic-font-atlas.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/util/dynamic-font-atlas.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { MIPMAP_MODES, SCALE_MODES, Texture } from \"pixi.js\";\r\nimport { ASCII_CHARACTERS } from \"./ascii\";\r\nimport { DynamicFontAtlasCharacter } from \"./dynamic-font-atlas-character\";\r\nimport { DynamicFontAtlasCharacters } from \"./dynamic-font-atlas-characters\";\r\nimport { DynamicFontAtlasFont } from \"./dynamic-font-atlas-font\";\r\nimport { UtilCharacterIterator } from \"./util-character-iterator\";\r\n\r\nconst PADDING = 3;\r\n\r\nexport class DynamicFontAtlas {\r\n\tprotected _id: string;\r\n\tprotected _canvas: HTMLCanvasElement | null;\r\n\tprotected _context: CanvasRenderingContext2D | null;\r\n\tprotected _font: DynamicFontAtlasFont;\r\n\tprotected _characters: DynamicFontAtlasCharacters;\r\n\tprotected _length: number;\r\n\tprotected _unrefCount: number;\r\n\tprotected _width: number;\r\n\tprotected _height: number;\r\n\tprotected _revision: number;\r\n\tprotected _revisionUpdated: number;\r\n\tprotected _texture: Texture;\r\n\r\n\tconstructor( fontId: string, fontSize: number, fontColor: number, resolution: number ) {\r\n\t\tthis._id = fontId;\r\n\t\tthis._canvas = document.createElement( \"canvas\" );\r\n\t\tthis._context = null;\r\n\t\tthis._font = new DynamicFontAtlasFont( fontId, fontSize, fontColor, PADDING );\r\n\t\tthis._characters = {};\r\n\t\tthis._length = 0;\r\n\t\tthis._unrefCount = 0;\r\n\t\tthis._width = 1;\r\n\t\tthis._height = 1;\r\n\t\tthis._revision = 0;\r\n\t\tthis._revisionUpdated = 0;\r\n\t\tthis._texture = Texture.from( this._canvas, {\r\n\t\t\tmipmap: MIPMAP_MODES.OFF,\r\n\t\t\tresolution,\r\n\t\t\tscaleMode: SCALE_MODES.NEAREST\r\n\t\t});\r\n\r\n\t\tthis.add( ASCII_CHARACTERS, true );\r\n\t\tthis.add_( \"...\", this._characters, true );\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tget font(): DynamicFontAtlasFont {\r\n\t\treturn this._font;\r\n\t}\r\n\r\n\tget width(): number {\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height(): number {\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tget canvas(): HTMLCanvasElement | null {\r\n\t\treturn this._canvas;\r\n\t}\r\n\r\n\tget characters(): DynamicFontAtlasCharacters {\r\n\t\treturn this._characters;\r\n\t}\r\n\r\n\tget texture(): Texture {\r\n\t\treturn this._texture;\r\n\t}\r\n\r\n\tprotected add_( character: string, characters: DynamicFontAtlasCharacters, reserved?: boolean ): void {\r\n\t\tif( character !== \"\\n\" ) {\r\n\t\t\tconst data = characters[ character ];\r\n\t\t\tif( data != null ) {\r\n\t\t\t\tif( ! data.reserved ) {\r\n\t\t\t\t\tif( data.ref === 0 ) {\r\n\t\t\t\t\t\tthis._unrefCount -= 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdata.ref += 1;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst advance = this.getAdvance( character );\r\n\t\t\t\tconst width = Math.ceil( PADDING + advance + PADDING );\r\n\t\t\t\tconst height = this.font.height;\r\n\t\t\t\tcharacters[ character ] = new DynamicFontAtlasCharacter( advance, width, height, !! reserved );\r\n\t\t\t\tthis._length += 1;\r\n\t\t\t\tthis._revision += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected remove_( character: string, characters: DynamicFontAtlasCharacters ): void {\r\n\t\tif( character !== \"\\n\" ) {\r\n\t\t\tconst data = characters[ character ];\r\n\t\t\tif( data != null ) {\r\n\t\t\t\tif( ! data.reserved && 0 < data.ref ) {\r\n\t\t\t\t\tdata.ref -= 1;\r\n\t\t\t\t\tif( data.ref === 0 ) {\r\n\t\t\t\t\t\tthis._unrefCount += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected cleanup_(): void {\r\n\t\tif( (this._length >> 1) <= this._unrefCount ) {\r\n\t\t\tconst characters = this._characters;\r\n\t\t\tfor( const character in characters ) {\r\n\t\t\t\tif( characters[ character ].ref <= 0 ) {\r\n\t\t\t\t\tdelete characters[ character ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._length -= this._unrefCount;\r\n\t\t\tthis._revision += 1;\r\n\t\t\tthis._unrefCount = 0;\r\n\t\t}\r\n\t}\r\n\r\n\tadd( targets: string, reserved?: boolean ): void {\r\n\t\tconst characters = this._characters;\r\n\t\tconst iterator = UtilCharacterIterator.from( targets );\r\n\t\twhile( iterator.hasNext() ) {\r\n\t\t\tthis.add_( iterator.next(), characters, reserved );\r\n\t\t}\r\n\t}\r\n\r\n\tremove( targets: string ): void {\r\n\t\tconst characters = this._characters;\r\n\t\tconst iterator = UtilCharacterIterator.from( targets );\r\n\t\twhile( iterator.hasNext() ) {\r\n\t\t\tthis.remove_( iterator.next(), characters );\r\n\t\t}\r\n\t}\r\n\r\n\tget( character: string ): DynamicFontAtlasCharacter | undefined {\r\n\t\treturn this._characters[ character ];\r\n\t}\r\n\r\n\tgetAdvance( target: string ): number {\r\n\t\tconst context = this.getContext();\r\n\t\tif( context != null ) {\r\n\t\t\treturn context.measureText( target ).width;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tgetContext(): CanvasRenderingContext2D | null {\r\n\t\tlet context = this._context;\r\n\t\tif( context == null ) {\r\n\t\t\tconst canvas = this._canvas;\r\n\t\t\tif( canvas != null ) {\r\n\t\t\t\tcontext = this._context = canvas.getContext( \"2d\", { alpha: true } );\r\n\t\t\t\tif( context == null ) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst font = this._font;\r\n\t\tif( context.font !== font.id ) {\r\n\t\t\tcontext.font = font.id;\r\n\t\t\tfont.id = context.font;\r\n\t\t\tcontext.textAlign = \"left\";\r\n\t\t\tcontext.textBaseline = \"alphabetic\";\r\n\t\t\tcontext.lineWidth = 0;\r\n\t\t\tcontext.lineCap = \"round\";\r\n\t\t\tcontext.lineJoin = \"miter\";\r\n\t\t\tcontext.miterLimit = 0;\r\n\t\t\tcontext.fillStyle = font.color;\r\n\t\t\tcontext.strokeStyle = \"#0000ff\";\r\n\t\t}\r\n\t\treturn context;\r\n\t}\r\n\r\n\tupdate(): boolean {\r\n\t\tthis.cleanup_();\r\n\r\n\t\tif( this._revisionUpdated < this._revision ) {\r\n\t\t\tthis._revisionUpdated = this._revision;\r\n\r\n\t\t\tconst canvas = this._canvas;\r\n\t\t\tif( canvas != null ) {\r\n\t\t\t\tconst font = this._font;\r\n\t\t\t\tconst fontHeight = font.height;\r\n\t\t\t\tconst characters = this._characters;\r\n\t\t\t\tconst width = this._width = this.toPowerOf2( Math.ceil( Math.sqrt( this._length ) ) * fontHeight );\r\n\r\n\t\t\t\tconst offsetX = PADDING;\r\n\t\t\t\tconst offsetY = Math.round( (fontHeight - (font.ascent + font.descent)) * 0.5 + font.ascent );\r\n\t\t\t\tlet x = 0;\r\n\t\t\t\tlet y = 0;\r\n\t\t\t\tfor( const key in characters ) {\r\n\t\t\t\t\tconst character = characters[ key ];\r\n\t\t\t\t\tif( width <= x + character.width ) {\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty += fontHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcharacter.x = x;\r\n\t\t\t\t\tcharacter.y = y;\r\n\t\t\t\t\tcharacter.origin.x = x + offsetX;\r\n\t\t\t\t\tcharacter.origin.y = y + offsetY;\r\n\r\n\t\t\t\t\tx += character.width;\r\n\t\t\t\t}\r\n\t\t\t\tconst height = this._height = y + fontHeight;\r\n\r\n\t\t\t\t// Make a input canvas\r\n\t\t\t\t// Here, we need to reset the context because\r\n\t\t\t\t// context settings will be lost when we set the width/height.\r\n\t\t\t\tconst baseTexture = this._texture.baseTexture;\r\n\t\t\t\tconst resolution = baseTexture.resolution;\r\n\t\t\t\tconst realWidth = Math.ceil( width * resolution );\r\n\t\t\t\tconst realHeight = Math.ceil( height * resolution );\r\n\t\t\t\tcanvas.width = realWidth;\r\n\t\t\t\tcanvas.height = realHeight;\r\n\t\t\t\tconst context = this.getContext();\r\n\t\t\t\tif( context != null ) {\r\n\t\t\t\t\tcontext.save();\r\n\t\t\t\t\tcontext.scale( resolution, resolution );\r\n\t\t\t\t\tcontext.clearRect( 0, 0, width, height );\r\n\t\t\t\t\tfor( const key in characters ) {\r\n\t\t\t\t\t\tconst character = characters[ key ];\r\n\t\t\t\t\t\tcontext.fillText( key, character.origin.x, character.origin.y );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontext.restore();\r\n\t\t\t\t}\r\n\t\t\t\tbaseTexture.setRealSize( realWidth, realHeight );\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetRevision(): number {\r\n\t\treturn this._revision;\r\n\t}\r\n\r\n\tgetRevisionUpdate(): number {\r\n\t\treturn this._revisionUpdated;\r\n\t}\r\n\r\n\tget length(): number {\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tconst canvas = this._canvas;\r\n\t\tif( canvas != null ) {\r\n\t\t\tthis._canvas = null;\r\n\t\t}\r\n\r\n\t\tconst characters = this._characters;\r\n\t\tfor( const character in characters ) {\r\n\t\t\tdelete characters[ character ];\r\n\t\t}\r\n\t}\r\n\r\n\ttoPowerOf2( size: number ): number {\r\n\t\tlet result = 32;\r\n\t\twhile( result < size ) {\r\n\t\t\tresult <<= 1;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n"]}