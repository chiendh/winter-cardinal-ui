{"version":3,"file":"dynamic-atlas.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/util/dynamic-atlas.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { BaseTexture, MIPMAP_MODES, Texture } from \"pixi.js\";\r\nimport { DynamicAtlasItem } from \"./dynamic-atlas-item\";\r\nimport { DynamicAtlasItemEmpty } from \"./dynamic-atlas-item-empty\";\r\nimport { DynamicAtlasItemWhite } from \"./dynamic-atlas-item-white\";\r\n\r\nconst MAXIMUM_TEXTURE_SIZE = 4096;\r\n\r\nexport class DynamicAtlas {\r\n\tprotected static INSTANCE: DynamicAtlas | null;\r\n\r\n\tprotected _canvas: HTMLCanvasElement;\r\n\tprotected _sortedData: DynamicAtlasItem[];\r\n\tprotected _idToDatum: { [ id: string ]: DynamicAtlasItem };\r\n\tprotected _baseTexture: BaseTexture;\r\n\tprotected _isDirty: boolean;\r\n\tprotected _predefined: { [ id: string ]: DynamicAtlasItem };\r\n\r\n\tconstructor( resolution: number ) {\r\n\t\tconst canvas = this._canvas = document.createElement( \"canvas\" );\r\n\t\tcanvas.width = canvas.height = 256;\r\n\r\n\t\tconst baseTexture = this._baseTexture = BaseTexture.from( canvas, {\r\n\t\t\tmipmap: MIPMAP_MODES.OFF,\r\n\t\t\tresolution\r\n\t\t});\r\n\r\n\t\tthis._idToDatum = {};\r\n\t\tthis._sortedData = [];\r\n\t\tthis._predefined = {\r\n\t\t\tempty: new DynamicAtlasItemEmpty(\r\n\t\t\t\t\"empty\", 10, 10, 0, baseTexture\r\n\t\t\t),\r\n\t\t\twhite: new DynamicAtlasItemWhite(\r\n\t\t\t\t\"white\", 10, 10, 0, baseTexture\r\n\t\t\t)\r\n\t\t};\r\n\r\n\t\tthis._isDirty = true;\r\n\t}\r\n\r\n\tupdateFrames( width: number, data: DynamicAtlasItem[] ): number {\r\n\t\tconst padding = 4;\r\n\t\tlet x = padding;\r\n\t\tlet y = padding;\r\n\t\tlet maxRowHeight = 0;\r\n\t\tfor( let i = 0, imax = data.length; i < imax; ++i ) {\r\n\t\t\tconst datum = data[ i ];\r\n\t\t\tif( width < x + datum.frame.width + padding ) {\r\n\t\t\t\tx = padding;\r\n\t\t\t\ty += maxRowHeight + padding;\r\n\t\t\t\tmaxRowHeight = 0;\r\n\t\t\t}\r\n\t\t\tdatum.frame.x = x | 0;\r\n\t\t\tdatum.frame.y = y | 0;\r\n\t\t\tx += datum.frame.width + padding;\r\n\t\t\tmaxRowHeight = Math.max( maxRowHeight, datum.frame.height );\r\n\t\t}\r\n\r\n\t\tconst minHeight = y + maxRowHeight + padding;\r\n\t\tlet result = 256;\r\n\t\twhile( result < minHeight ) {\r\n\t\t\tresult <<= 1;\r\n\t\t}\r\n\t\treturn Math.min( MAXIMUM_TEXTURE_SIZE, result );\r\n\t}\r\n\r\n\trenderFrames( width: number, height: number, data: DynamicAtlasItem[] ): void {\r\n\t\tconst canvas = this._canvas;\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\t\tconst context = canvas.getContext( \"2d\" );\r\n\t\tif( context != null ) {\r\n\t\t\tfor( let i = 0, imax = data.length; i < imax; ++i ) {\r\n\t\t\t\tconst datum = data[ i ];\r\n\t\t\t\tdatum.render( context );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tapplyFrames( data: DynamicAtlasItem[] ): void {\r\n\t\tfor( let i = 0, imax = data.length; i < imax; ++i ) {\r\n\t\t\tconst datum = data[ i ];\r\n\t\t\tdatum.applyFrame();\r\n\t\t}\r\n\t}\r\n\r\n\tcalcCanvasWidth( data: DynamicAtlasItem[] ): number {\r\n\t\tlet result = 128;\r\n\t\tfor( let i = data.length - 1; 0 <= i; --i ) {\r\n\t\t\tconst datum = data[ i ];\r\n\t\t\tconst size = Math.max( datum.frame.width, datum.frame.height );\r\n\t\t\twhile( result < size ) {\r\n\t\t\t\tresult <<= 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Math.min( MAXIMUM_TEXTURE_SIZE, result << 1 );\r\n\t}\r\n\r\n\tcleanup( data: DynamicAtlasItem[] ): void {\r\n\t\tdata.sort( DynamicAtlas.ITEM_COMPARATOR );\r\n\t\tfor( let i = data.length - 1; 0 <= i; --i ) {\r\n\t\t\tconst datum = data[ i ];\r\n\t\t\tif( 0 < datum.ref ) {\r\n\t\t\t\tdata.length = i + 1;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdata.length = 0;\r\n\t}\r\n\r\n\tbegin(): void {\r\n\t\tconst data = this._sortedData;\r\n\t\tfor( let i = 0, imax = data.length; i < imax; ++i ) {\r\n\t\t\tconst datum = data[ i ];\r\n\t\t\tdatum.ref = 0;\r\n\t\t}\r\n\r\n\t\tthis._isDirty = false;\r\n\t}\r\n\r\n\tend(): void {\r\n\t\tconst idToDatum = this._idToDatum;\r\n\t\tconst data = this._sortedData;\r\n\t\tfor( let i = 0, imax = data.length; i < imax; ++i ) {\r\n\t\t\tconst datum = data[ i ];\r\n\t\t\tif( datum.ref <= 0 ) {\r\n\t\t\t\tif( !( datum.id in this._predefined ) ) {\r\n\t\t\t\t\tdatum.destroy();\r\n\t\t\t\t}\r\n\t\t\t\tdelete idToDatum[ datum.id ];\r\n\t\t\t\tthis._isDirty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trepack( forcibly?: boolean ): void {\r\n\t\tif( forcibly === true || this._isDirty ) {\r\n\t\t\tthis._isDirty = false;\r\n\t\t\tconst data = this._sortedData;\r\n\t\t\tthis.cleanup( data );\r\n\t\t\tconst canvasWidth = this.calcCanvasWidth( data );\r\n\t\t\tconst canvasHeight = this.updateFrames( canvasWidth, data );\r\n\t\t\tthis.renderFrames( canvasWidth, canvasHeight, data );\r\n\t\t\tthis._baseTexture.setRealSize( canvasWidth, canvasHeight );\r\n\t\t\tthis.applyFrames( data );\r\n\t\t}\r\n\t}\r\n\r\n\tget( id: string ): DynamicAtlasItem | null {\r\n\t\tconst idToDatum = this._idToDatum;\r\n\t\tconst datum =  idToDatum[ id ];\r\n\t\tif( datum != null ) {\r\n\t\t\tdatum.ref += 1;\r\n\t\t\treturn datum;\r\n\t\t} else {\r\n\t\t\tconst predefined = this._predefined[ id ];\r\n\t\t\tif( predefined != null ) {\r\n\t\t\t\tthis.set( id, predefined );\r\n\t\t\t\treturn predefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tset( id: string, item: DynamicAtlasItem ): DynamicAtlasItem | undefined {\r\n\t\tconst result = this._idToDatum[ id ];\r\n\t\titem.ref += 1;\r\n\t\tthis._idToDatum[ id ] = item;\r\n\t\tthis._sortedData.push( item );\r\n\t\tthis._isDirty = true;\r\n\t\treturn result;\r\n\t}\r\n\r\n\ttoDirty(): void {\r\n\t\tthis._isDirty = true;\r\n\t}\r\n\r\n\tgetDefaultTexture(): Texture {\r\n\t\treturn this.get( \"white\" )!.texture;\r\n\t}\r\n\r\n\tgetBaseTexture(): BaseTexture {\r\n\t\treturn this._baseTexture;\r\n\t}\r\n\r\n\trelease( id: string ): void {\r\n\t\tconst idToDatum = this._idToDatum;\r\n\t\tconst datum = idToDatum[ id ];\r\n\t\tif( datum != null ) {\r\n\t\t\tdatum.ref -= 1;\r\n\t\t\tif( datum.ref <= 0 ) {\r\n\t\t\t\tif( !( datum.id in this._predefined ) ) {\r\n\t\t\t\t\tdatum.destroy();\r\n\t\t\t\t}\r\n\t\t\t\tdelete idToDatum[ id ];\r\n\t\t\t\tthis._isDirty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstatic ITEM_COMPARATOR = ( a: DynamicAtlasItem, b: DynamicAtlasItem ): number => {\r\n\t\tif( a.ref <= 0 ) {\r\n\t\t\tif( b.ref <= 0 ) {\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\t\t\t\treturn +1;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( b.ref <= 0 ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( a.frame.height < b.frame.height ) {\r\n\t\t\treturn -1;\r\n\t\t} else if( b.frame.height < a.frame.height ) {\r\n\t\t\treturn +1;\r\n\t\t} else {\r\n\t\t\treturn a.frame.width - b.frame.width;\r\n\t\t}\r\n\t}\r\n}\r\n"]}