{"version":3,"file":"to-ceiling-index.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/util/to-ceiling-index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH;;;;;;;GAOG;AACH,MAAM,CAAC,IAAM,cAAc,GAAG,UAAK,KAAU,EAAE,KAAQ,EAAE,IAAY,EAAE,MAAc;IACpF,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAE,KAAK,CAAC,MAAM,GAAG,IAAI,CAAE,GAAG,CAAC,CAAC;IAE/C,OAAO,EAAE,IAAI,EAAE,EAAG;QACjB,IAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QACjC,IAAM,EAAE,GAAG,KAAK,CAAE,EAAE,GAAG,IAAI,GAAG,MAAM,CAAE,CAAC;QACvC,IAAI,KAAK,GAAG,EAAE,EAAG;YAChB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SACZ;aAAM,IAAI,EAAE,GAAG,KAAK,EAAG;YACvB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SACZ;aAAM;YACN,OAAO,EAAE,CAAC;SACV;KACD;IAED,OAAO,IAAI,CAAC,GAAG,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;AAC3B,CAAC,CAAC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\n/**\r\n * Returns a ceiling index of the given value.\r\n * The array must be sorted in an ascending order.\r\n *\r\n * @param array an array sorted in an ascending order\r\n * @param value a value to be searched\r\n * @returns a ceiling index of the given value\r\n */\r\nexport const toCeilingIndex = <V>( array: V[], value: V, size: number, offset: number ): number => {\r\n\tlet i0 = 0;\r\n\tlet i1 = Math.floor( array.length / size ) - 1;\r\n\r\n\twhile( i0 <= i1 ) {\r\n\t\tconst i2 = i0 + ((i1 - i0) >> 1);\r\n\t\tconst v2 = array[ i2 * size + offset ];\r\n\t\tif( value < v2 ) {\r\n\t\t\ti1 = i2 - 1;\r\n\t\t} else if( v2 < value ) {\r\n\t\t\ti0 = i2 + 1;\r\n\t\t} else {\r\n\t\t\treturn i2;\r\n\t\t}\r\n\t}\r\n\r\n\treturn Math.max( i0, i1 );\r\n};\r\n"]}