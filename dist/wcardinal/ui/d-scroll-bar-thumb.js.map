{"version":3,"file":"d-scroll-bar-thumb.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-scroll-bar-thumb.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,KAAK,EAA4B,MAAM,UAAU,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAU5C;IAA8C,mCAAmD;IAAjG;;IAgCA,CAAC;IA7BU,8BAAI,GAAd,UAAgB,OAAgC;QAAhD,iBAkBC;QAjBA,iBAAM,IAAI,YAAE,OAAO,CAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAE,UAAU,CAAC,WAAW,EAAE,IAAI,CAAE,CAAC;QAE9C,IAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,QAAQ,CAAC;YAC7B,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,KAAK;YACb,EAAE,EAAE;gBACH,KAAK,EAAE;oBACN,QAAQ,CAAC,QAAQ,CAAE,KAAI,CAAC,QAAQ,CAAE,CAAC;gBACpC,CAAC;gBACD,IAAI,EAAE,UAAE,EAAU,EAAE,EAAU;oBAC7B,QAAQ,CAAC,GAAG,CAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAE,CAAC;oBACjD,KAAI,CAAC,UAAU,CAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAE,CAAC;gBAC3C,CAAC;aACD;SACD,CAAC,CAAC;IACJ,CAAC;IAED,wCAAc,GAAd;QACC,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;IACpC,CAAC;IAES,iCAAO,GAAjB;QACC,OAAO,iBAAiB,CAAC;IAC1B,CAAC;IAGF,sBAAC;AAAD,CAAC,AAhCD,CAA8C,KAAK,GAgClD","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Point } from \"pixi.js\";\r\nimport { DBase, DBaseOptions, DThemeBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { UtilDrag } from \"./util/util-drag\";\r\n\r\nexport interface DScrollBarThumbOptions extends DBaseOptions<DThemeScrollBarThumb> {\r\n\r\n}\r\n\r\nexport interface DThemeScrollBarThumb extends DThemeBase {\r\n\tgetMinimumSize(): number;\r\n}\r\n\r\nexport abstract class DScrollBarThumb extends DBase<DThemeScrollBarThumb, DScrollBarThumbOptions> {\r\n\tprotected _dragUtil!: UtilDrag;\r\n\r\n\tprotected init( options?: DScrollBarThumbOptions ) {\r\n\t\tsuper.init( options );\r\n\t\tthis.setState( DBaseState.UNFOCUSABLE, true );\r\n\r\n\t\tconst position = new Point();\r\n\t\tthis._dragUtil = new UtilDrag({\r\n\t\t\ttarget: this,\r\n\t\t\teasing: false,\r\n\t\t\ton: {\r\n\t\t\t\tstart: (): void => {\r\n\t\t\t\t\tposition.copyFrom( this.position );\r\n\t\t\t\t},\r\n\t\t\t\tmove: ( dx: number, dy: number ): void => {\r\n\t\t\t\t\tposition.set( position.x + dx, position.y + dy );\r\n\t\t\t\t\tthis.onDragMove( position.x, position.y );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetMinimumSize(): number {\r\n\t\treturn this.theme.getMinimumSize();\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DScrollBarThumb\";\r\n\t}\r\n\r\n\tprotected abstract onDragMove( dx: number, dy: number ): void;\r\n}\r\n"]}