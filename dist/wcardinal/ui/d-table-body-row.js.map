{"version":3,"file":"d-table-body-row.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-body-row.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBase } from \"./d-base\";\r\nimport { DTableBodyCell } from \"./d-table-body-cell\";\r\nimport { DTableBodyCellActionDialog } from \"./d-table-body-cell-action-dialog\";\r\nimport { DTableBodyCellActionMenu } from \"./d-table-body-cell-action-menu\";\r\nimport { DTableBodyCellActionPromise } from \"./d-table-body-cell-action-promise\";\r\nimport { DTableBodyCellButton } from \"./d-table-body-cell-button\";\r\nimport { DTableBodyCellCheck } from \"./d-table-body-cell-check\";\r\nimport { DTableBodyCellColor } from \"./d-table-body-cell-color\";\r\nimport { DTableBodyCellDate } from \"./d-table-body-cell-date\";\r\nimport { DTableBodyCellDatetime } from \"./d-table-body-cell-datetime\";\r\nimport { DTableBodyCellIndex } from \"./d-table-body-cell-index\";\r\nimport { DTableBodyCellInputInteger } from \"./d-table-body-cell-input-integer\";\r\nimport { DTableBodyCellInputReal } from \"./d-table-body-cell-input-real\";\r\nimport { DTableBodyCellInputText } from \"./d-table-body-cell-input-text\";\r\nimport { DTableBodyCellInputTree } from \"./d-table-body-cell-input-tree\";\r\nimport { DTableBodyCellLink } from \"./d-table-body-cell-link\";\r\nimport { DTableBodyCellSelectDialog } from \"./d-table-body-cell-select-dialog\";\r\nimport { DTableBodyCellSelectMenu } from \"./d-table-body-cell-select-menu\";\r\nimport { DTableBodyCellSelectMultiple } from \"./d-table-body-cell-select-multiple\";\r\nimport { DTableBodyCellSelectPromise } from \"./d-table-body-cell-select-promise\";\r\nimport { DTableBodyCellText } from \"./d-table-body-cell-text\";\r\nimport { DTableBodyCellTime } from \"./d-table-body-cell-time\";\r\nimport { DTableBodyCellTree } from \"./d-table-body-cell-tree\";\r\nimport {\r\n\tDTableBodyCellOptionsMerged, DTableBodyCellOptionsUnion,\r\n\tDTableColumn, DTableColumnType\r\n} from \"./d-table-column\";\r\nimport { DTableRow, DTableRowOptions, DThemeTableRow } from \"./d-table-row\";\r\n\r\nexport interface DTableBodyRowOptions<\r\n\tROW,\r\n\tTHEME extends DThemeTableBodyRow = DThemeTableBodyRow\r\n> extends DTableRowOptions<ROW, DTableColumn<ROW>, THEME> {\r\n\theight?: number;\r\n\tcell?: Partial<DTableBodyCellOptionsMerged<ROW>>;\r\n}\r\n\r\nexport interface DThemeTableBodyRow extends DThemeTableRow {\r\n\r\n}\r\n\r\nconst isBodyCell = <T>( target: T ): target is T & DTableBodyCell<unknown> => {\r\n\treturn (target != null && \"set\" in target);\r\n};\r\n\r\ntype OnCellChange<ROW> = (\r\n\tnewValue: unknown, oldValue: unknown,\r\n\trow: ROW, rowIndex: number, columnIndex: number\r\n) => void;\r\n\r\nexport class DTableBodyRow<\r\n\tROW,\r\n\tTHEME extends DThemeTableBodyRow = DThemeTableBodyRow,\r\n\tOPTIONS extends DTableBodyRowOptions<ROW, THEME> = DTableBodyRowOptions<ROW, THEME>\r\n> extends DTableRow<ROW, DTableColumn<ROW>, THEME, OPTIONS> {\r\n\tprotected _row: ROW | undefined = undefined;\r\n\tprotected _onCellChangeBound!: OnCellChange<ROW>;\r\n\r\n\tconstructor( options: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t}\r\n\r\n\tprotected init( options: OPTIONS ) {\r\n\t\tthis._onCellChangeBound = ( newValue, oldValue, row, rowIndex, columnIndex ): void => {\r\n\t\t\tthis.emit( \"rowchange\", newValue, oldValue, row, rowIndex, columnIndex, this );\r\n\t\t};\r\n\t\tsuper.init( options );\r\n\t}\r\n\r\n\tprotected newCell(\r\n\t\tcolumn: DTableColumn<ROW>,\r\n\t\tcolumnIndex: number,\r\n\t\tcolumns: Array<DTableColumn<ROW>>,\r\n\t\toptions: OPTIONS\r\n\t): DBase {\r\n\t\tconst cellOptions = this.toCellOptions( column, columnIndex, options ) as any;\r\n\t\tif( column.editing.enable !== false ) {\r\n\t\t\tconst cell = this.newCellEditable( column, columnIndex, cellOptions );\r\n\t\t\tcell.on( \"cellchange\", this._onCellChangeBound );\r\n\t\t\treturn cell;\r\n\t\t} else {\r\n\t\t\tconst cell = this.newCellUnediable( column, columnIndex, cellOptions );\r\n\t\t\tif( column.type === DTableColumnType.TREE ) {\r\n\t\t\t\tcell.on( \"cellchange\", this._onCellChangeBound );\r\n\t\t\t} else {\r\n\t\t\t\tcell.setReadOnly( true );\r\n\t\t\t}\r\n\t\t\treturn cell;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected newCellEditable(\r\n\t\tcolumn: DTableColumn<ROW>,\r\n\t\tcolumnIndex: number,\r\n\t\toptions: any\r\n\t): DBase {\r\n\t\tswitch( column.type ) {\r\n\t\tcase DTableColumnType.INDEX:\r\n\t\t\treturn new DTableBodyCellIndex( options );\r\n\t\tcase DTableColumnType.TEXT:\r\n\t\t\treturn new DTableBodyCellInputText( options );\r\n\t\tcase DTableColumnType.TREE:\r\n\t\t\treturn new DTableBodyCellInputTree( options );\r\n\t\tcase DTableColumnType.INTEGER:\r\n\t\t\treturn new DTableBodyCellInputInteger( options );\r\n\t\tcase DTableColumnType.REAL:\r\n\t\t\treturn new DTableBodyCellInputReal( options );\r\n\t\tcase DTableColumnType.CHECK:\r\n\t\tcase DTableColumnType.CHECK_SINGLE:\r\n\t\t\treturn new DTableBodyCellCheck( options );\r\n\t\tcase DTableColumnType.COLOR:\r\n\t\t\treturn new DTableBodyCellColor( options );\r\n\t\tcase DTableColumnType.BUTTON:\r\n\t\t\treturn new DTableBodyCellButton( options );\r\n\t\tcase DTableColumnType.LINK:\r\n\t\t\treturn new DTableBodyCellLink( options );\r\n\t\tcase DTableColumnType.SELECT:\r\n\t\t\treturn this.newCellSelect( column, options );\r\n\t\tcase DTableColumnType.ACTION:\r\n\t\t\treturn this.newCellAction( column, options );\r\n\t\tcase DTableColumnType.DATE:\r\n\t\t\treturn new DTableBodyCellDate( options );\r\n\t\tcase DTableColumnType.DATETIME:\r\n\t\t\treturn new DTableBodyCellDatetime( options );\r\n\t\tcase DTableColumnType.TIME:\r\n\t\t\treturn new DTableBodyCellTime( options );\r\n\t\tdefault:\r\n\t\t\treturn new DTableBodyCellText( options );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected newCellUnediable(\r\n\t\tcolumn: DTableColumn<ROW>,\r\n\t\tcolumnIndex: number,\r\n\t\toptions: any\r\n\t): DBase {\r\n\t\tswitch( column.type ) {\r\n\t\tcase DTableColumnType.INDEX:\r\n\t\t\treturn new DTableBodyCellIndex( options );\r\n\t\tcase DTableColumnType.TEXT:\r\n\t\t\treturn new DTableBodyCellText( options );\r\n\t\tcase DTableColumnType.TREE:\r\n\t\t\treturn new DTableBodyCellTree( options );\r\n\t\tcase DTableColumnType.INTEGER:\r\n\t\t\treturn new DTableBodyCellText( options );\r\n\t\tcase DTableColumnType.REAL:\r\n\t\t\treturn new DTableBodyCellText( options );\r\n\t\tcase DTableColumnType.CHECK:\r\n\t\tcase DTableColumnType.CHECK_SINGLE:\r\n\t\t\treturn new DTableBodyCellCheck( options );\r\n\t\tcase DTableColumnType.COLOR:\r\n\t\t\treturn new DTableBodyCellColor( options );\r\n\t\tcase DTableColumnType.BUTTON:\r\n\t\t\treturn new DTableBodyCellButton( options );\r\n\t\tcase DTableColumnType.LINK:\r\n\t\t\treturn new DTableBodyCellLink( options );\r\n\t\tcase DTableColumnType.SELECT:\r\n\t\t\treturn this.newCellSelect( column, options );\r\n\t\tcase DTableColumnType.ACTION:\r\n\t\t\treturn this.newCellAction( column, options );\r\n\t\tcase DTableColumnType.DATE:\r\n\t\t\treturn new DTableBodyCellDate( options );\r\n\t\tcase DTableColumnType.DATETIME:\r\n\t\t\treturn new DTableBodyCellDatetime( options );\r\n\t\tcase DTableColumnType.TIME:\r\n\t\t\treturn new DTableBodyCellTime( options );\r\n\t\tdefault:\r\n\t\t\treturn new DTableBodyCellText( options );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected newCellSelect( column: DTableColumn<ROW>, options: any ): DBase {\r\n\t\tconst selecting = column.selecting;\r\n\t\tif( selecting.menu != null ) {\r\n\t\t\treturn new DTableBodyCellSelectMenu( options );\r\n\t\t} else if( selecting.multiple != null ) {\r\n\t\t\treturn new DTableBodyCellSelectMultiple( options );\r\n\t\t} else if( selecting.dialog != null ) {\r\n\t\t\treturn new DTableBodyCellSelectDialog( options );\r\n\t\t} else if( selecting.promise != null ) {\r\n\t\t\treturn new DTableBodyCellSelectPromise( options );\r\n\t\t} else {\r\n\t\t\treturn new DTableBodyCellText( options );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected newCellAction( column: DTableColumn<ROW>, options: any ): DBase {\r\n\t\tconst selecting = column.selecting;\r\n\t\tif( selecting.menu != null ) {\r\n\t\t\treturn new DTableBodyCellActionMenu( options );\r\n\t\t} else if( selecting.dialog != null ) {\r\n\t\t\treturn new DTableBodyCellActionDialog( options );\r\n\t\t} else if( selecting.promise != null ) {\r\n\t\t\treturn new DTableBodyCellActionPromise( options );\r\n\t\t} else {\r\n\t\t\treturn new DTableBodyCellText( options );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toCellOptions(\r\n\t\tcolumn: DTableColumn<ROW>,\r\n\t\tcolumnIndex: number,\r\n\t\toptions: OPTIONS\r\n\t): DTableBodyCellOptionsUnion<ROW> {\r\n\t\tlet result = (column.body || options.cell) as DTableBodyCellOptionsMerged<ROW> | undefined;\r\n\t\tif( result != null ) {\r\n\t\t\tresult.weight = column.weight;\r\n\t\t\tresult.width = column.width;\r\n\t\t\tconst text = result.text = result.text || {};\r\n\t\t\tconst align = text.align = text.align || {};\r\n\t\t\talign.horizontal = column.align;\r\n\t\t\ttext.formatter = column.formatter;\r\n\t\t\tresult.column = {\r\n\t\t\t\tindex: columnIndex,\r\n\t\t\t\tdata: column\r\n\t\t\t};\r\n\t\t\tif( column.selecting.menu ) {\r\n\t\t\t\tresult.menu = column.selecting.menu;\r\n\t\t\t}\r\n\t\t\tif( column.selecting.multiple ) {\r\n\t\t\t\tresult.menu = column.selecting.menu;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = {\r\n\t\t\t\tweight: column.weight,\r\n\t\t\t\twidth: column.width,\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tformatter: column.formatter,\r\n\t\t\t\t\talign: {\r\n\t\t\t\t\t\thorizontal: column.align\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tcolumn: {\r\n\t\t\t\t\tindex: columnIndex,\r\n\t\t\t\t\tdata: column\r\n\t\t\t\t},\r\n\t\t\t\tmenu: column.selecting.menu || column.selecting.multiple\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif( column.editing.enable !== false ) {\r\n\t\t\tconst editing = result.editing = result.editing || {};\r\n\t\t\tediting.formatter = editing.formatter || column.editing.formatter;\r\n\t\t\tediting.unformatter = editing.unformatter || column.editing.unformatter as any;\r\n\t\t\tediting.validator = editing.validator || column.editing.validator as any;\r\n\t\t}\r\n\r\n\t\tif( column.link ) {\r\n\t\t\tresult.link = column.link;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTableBodyRow\";\r\n\t}\r\n\r\n\tset( row: ROW, supplimental: unknown, rowIndex: number, forcibly?: boolean ): void {\r\n\t\tif( forcibly || this._row !== row ) {\r\n\t\t\tthis._row = row;\r\n\r\n\t\t\tconst cells = this.children;\r\n\t\t\tconst cellsLength = cells.length;\r\n\t\t\tconst columns = this._columns;\r\n\t\t\tconst columnsLength = columns.length;\r\n\t\t\tfor( let i = 0, imax = Math.min( columnsLength, cellsLength ); i < imax; ++i ) {\r\n\t\t\t\tconst cell = cells[ i ];\r\n\t\t\t\tconst column = columns[ i ];\r\n\t\t\t\tif( isBodyCell( cell ) ) {\r\n\t\t\t\t\tcell.set( column.getter( row, i ), row, supplimental, rowIndex, i, forcibly );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.emit( \"set\", row, rowIndex, this );\r\n\t\t}\r\n\t}\r\n\r\n\tunset(): void {\r\n\t\tif( this._row !== undefined ) {\r\n\t\t\tthis._row = undefined;\r\n\r\n\t\t\tconst cells = this.children;\r\n\t\t\tfor( let i = 0, imax = cells.length; i < imax; ++i ) {\r\n\t\t\t\tconst cell = cells[ i ];\r\n\t\t\t\tif( isBodyCell( cell ) ) {\r\n\t\t\t\t\tcell.unset();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.emit( \"unset\", this );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getContentPositionX(): number {\r\n\t\tconst parent = this.parent;\r\n\t\tif( parent ) {\r\n\t\t\tconst content = parent.parent;\r\n\t\t\tif( content ) {\r\n\t\t\t\treturn content.position.x;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n"]}