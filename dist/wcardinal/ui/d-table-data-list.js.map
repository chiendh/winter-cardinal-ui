{"version":3,"file":"d-table-data-list.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-data-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { utils } from \"pixi.js\";\r\nimport { DTableData, DTableDataMapped, DTableDataOptions, DTableDataParent } from \"./d-table-data\";\r\nimport { DTableDataFilter } from \"./d-table-data-filter\";\r\nimport { DTableDataFilterImpl } from \"./d-table-data-filter-impl\";\r\nimport { DTableDataListMapped } from \"./d-table-data-list-mapped\";\r\nimport { DTableDataSelection } from \"./d-table-data-selection\";\r\nimport { DTableDataSelectionImpl } from \"./d-table-data-selection-impl\";\r\nimport { DTableDataSorter } from \"./d-table-data-sorter\";\r\nimport { DTableDataSorterImpl } from \"./d-table-data-sorter-impl\";\r\n\r\nexport interface DTableDataListOptions<ROW> extends DTableDataOptions<ROW> {\r\n\trows?: ROW[];\r\n}\r\n\r\nexport class DTableDataList<ROW> extends utils.EventEmitter implements DTableData<ROW> {\r\n\tprotected _parent: DTableDataParent | null;\r\n\tprotected _rows: ROW[];\r\n\tprotected _filter: DTableDataFilterImpl<ROW>;\r\n\tprotected _sorter: DTableDataSorterImpl<ROW>;\r\n\tprotected _selection: DTableDataSelectionImpl<ROW>;\r\n\tprotected _mapped: DTableDataMapped<ROW>;\r\n\r\n\tconstructor( options?: DTableDataListOptions<ROW> ) {\r\n\t\tsuper();\r\n\r\n\t\tthis._parent = null;\r\n\t\tthis._mapped = new DTableDataListMapped<ROW>( this );\r\n\t\tthis._rows = this.toRows( options && options.rows );\r\n\t\tthis._selection = new DTableDataSelectionImpl<ROW>( this, options && options.selection );\r\n\t\tthis._filter = new DTableDataFilterImpl<ROW>( this );\r\n\t\tthis._sorter = new DTableDataSorterImpl<ROW>( this );\r\n\t\tif( options ) {\r\n\t\t\t// Filter\r\n\t\t\tconst filter = options.filter;\r\n\t\t\tif( filter ) {\r\n\t\t\t\tthis._filter.set( filter );\r\n\t\t\t}\r\n\r\n\t\t\t// Comparator\r\n\t\t\tconst comparator = options.comparator;\r\n\t\t\tif( comparator ) {\r\n\t\t\t\tthis._sorter.set( comparator );\r\n\t\t\t}\r\n\r\n\t\t\t// Events\r\n\t\t\tconst on = options.on;\r\n\t\t\tif( on ) {\r\n\t\t\t\tfor( const name in on ) {\r\n\t\t\t\t\tconst handler = on[ name ];\r\n\t\t\t\t\tif( handler ) {\r\n\t\t\t\t\t\tthis.on( name, handler );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbind( parent: DTableDataParent ): void {\r\n\t\tthis._parent = parent;\r\n\t}\r\n\r\n\tprotected toRows( row?: ROW[] ): ROW[] {\r\n\t\tconst result: ROW[] = [];\r\n\t\tif( row != null ) {\r\n\t\t\tfor( let i = 0, imax = row.length; i < imax; ++i ) {\r\n\t\t\t\tresult.push( row[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tget rows(): ROW[] {\r\n\t\treturn this._rows;\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tconst parent = this._parent;\r\n\t\tif( parent ) {\r\n\t\t\tparent.update();\r\n\t\t}\r\n\t}\r\n\r\n\tlock(): void {\r\n\t\tconst parent = this._parent;\r\n\t\tif( parent ) {\r\n\t\t\tparent.lock();\r\n\t\t}\r\n\t}\r\n\r\n\tunlock(): void {\r\n\t\tconst parent = this._parent;\r\n\t\tif( parent ) {\r\n\t\t\tparent.unlock( false );\r\n\t\t\tparent.update();\r\n\t\t}\r\n\t}\r\n\r\n\tsize(): number {\r\n\t\treturn this._rows.length;\r\n\t}\r\n\r\n\tclear(): void {\r\n\t\tconst rows = this._rows;\r\n\t\tif( 0 < rows.length ) {\r\n\t\t\trows.length = 0;\r\n\t\t\tthis.lock();\r\n\t\t\tthis._selection.clear();\r\n\t\t\tthis._sorter.toDirty();\r\n\t\t\tthis._filter.toDirty();\r\n\t\t\tthis.unlock();\r\n\t\t}\r\n\t}\r\n\r\n\tclearAndAdd( row: ROW ): void {\r\n\t\tconst rows = this._rows;\r\n\t\trows.length = 0;\r\n\t\trows.push( row );\r\n\t\tthis.lock();\r\n\t\tthis._selection.clear();\r\n\t\tthis._sorter.toDirty();\r\n\t\tthis._filter.toDirty();\r\n\t\tthis.unlock();\r\n\t}\r\n\r\n\tclearAndAddAll( newRows: ROW[] ): void {\r\n\t\tconst rows = this._rows;\r\n\t\trows.length = 0;\r\n\t\tfor( let i = 0, imax = newRows.length; i < imax; ++i ) {\r\n\t\t\trows.push( newRows[ i ] );\r\n\t\t}\r\n\t\tthis.lock();\r\n\t\tthis._selection.clear();\r\n\t\tthis._sorter.toDirty();\r\n\t\tthis._filter.toDirty();\r\n\t\tthis.unlock();\r\n\t}\r\n\r\n\tadd( row: ROW, index?: number ): void {\r\n\t\tconst rows = this._rows;\r\n\t\tconst selection = this._selection;\r\n\t\tconst sorter = this._sorter;\r\n\t\tconst filter = this._filter;\r\n\t\tif( index == null ) {\r\n\t\t\trows.push( row );\r\n\t\t\tthis.lock();\r\n\t\t\tsorter.toDirty();\r\n\t\t\tfilter.toDirty();\r\n\t\t\tthis.unlock();\r\n\t\t} else if( 0 <= index && index < rows.length ) {\r\n\t\t\trows.splice( index, 0, row );\r\n\t\t\tthis.lock();\r\n\t\t\tselection.shift( index, 1 );\r\n\t\t\tsorter.toDirty();\r\n\t\t\tfilter.toDirty();\r\n\t\t\tthis.unlock();\r\n\t\t}\r\n\t}\r\n\r\n\taddAll( newRows: ROW[], index?: number ): void {\r\n\t\tconst rows = this._rows;\r\n\t\tconst rowsLength = rows.length;\r\n\t\tconst selection = this._selection;\r\n\t\tconst sorter = this._sorter;\r\n\t\tconst filter = this._filter;\r\n\t\tif( index == null ) {\r\n\t\t\tconst newRowsLength = newRows.length;\r\n\t\t\tfor( let i = 0, imax = newRowsLength; i < imax; ++i ) {\r\n\t\t\t\trows.push( newRows[ i ] );\r\n\t\t\t}\r\n\t\t\tthis.lock();\r\n\t\t\tsorter.toDirty();\r\n\t\t\tfilter.toDirty();\r\n\t\t\tthis.unlock();\r\n\t\t} else if( 0 <= index && index < rowsLength ) {\r\n\t\t\tconst newRowsLength = newRows.length;\r\n\t\t\tfor( let i = 0; i < newRowsLength; ++i ) {\r\n\t\t\t\trows.splice( index + i, 0, newRows[ i ] );\r\n\t\t\t}\r\n\t\t\tthis.lock();\r\n\t\t\tselection.shift( index, newRowsLength );\r\n\t\t\tsorter.toDirty();\r\n\t\t\tfilter.toDirty();\r\n\t\t\tthis.unlock();\r\n\t\t}\r\n\t}\r\n\r\n\tget( index: number ): ROW | null {\r\n\t\tconst rows = this._rows;\r\n\t\tif( 0 <= index && index < rows.length ) {\r\n\t\t\treturn rows[ index ];\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tset( index: number, row: ROW ): ROW | null {\r\n\t\tconst rows = this._rows;\r\n\t\tif( 0 <= index && index < rows.length ) {\r\n\t\t\tconst result = rows[ index ];\r\n\t\t\trows[ index ] = row;\r\n\t\t\tthis.lock();\r\n\t\t\tthis._sorter.toDirty();\r\n\t\t\tthis._filter.toDirty();\r\n\t\t\tthis.unlock();\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tremove( index: number ): ROW | null {\r\n\t\tconst rows = this._rows;\r\n\t\tif( 0 <= index && index < rows.length ) {\r\n\t\t\tconst result = rows.splice( index, 1 )[ 0 ];\r\n\t\t\tthis.lock();\r\n\t\t\tthis._selection.remove( index );\r\n\t\t\tthis._sorter.toDirty();\r\n\t\t\tthis._filter.toDirty();\r\n\t\t\tthis.unlock();\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\teach( iteratee: ( row: ROW, index: number ) => boolean | void, ifrom?: number, ito?: number ): void {\r\n\t\tconst rows = this._rows;\r\n\t\tifrom = ( ifrom != null ? Math.max( 0, ifrom ) : 0 );\r\n\t\tito = ( ito != null ? Math.min( rows.length, ito ) : rows.length );\r\n\t\tfor( let i = ifrom; i < ito; ++i ) {\r\n\t\t\tconst row = rows[ i ];\r\n\t\t\tif( iteratee( row, i ) === false ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget selection(): DTableDataSelection<ROW> {\r\n\t\treturn this._selection;\r\n\t}\r\n\r\n\tget filter(): DTableDataFilter<ROW> {\r\n\t\treturn this._filter;\r\n\t}\r\n\r\n\tget sorter(): DTableDataSorter<ROW> {\r\n\t\treturn this._sorter;\r\n\t}\r\n\r\n\tget mapped(): DTableDataMapped<ROW> {\r\n\t\treturn this._mapped;\r\n\t}\r\n}\r\n"]}