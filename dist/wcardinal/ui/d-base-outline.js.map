{"version":3,"file":"d-base-outline.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-base-outline.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseOptions, DThemeBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DBorderMask } from \"./d-border-mask\";\r\nimport { DOutline } from \"./d-outline\";\r\nimport { DStateAwareOrValueMightBe } from \"./d-state-aware\";\r\nimport { isFunction } from \"./util/is-function\";\r\nimport { isString } from \"./util/is-string\";\r\n\r\ntype Callback = () => void;\r\n\r\nexport class DBaseOutline implements DOutline {\r\n\tprotected _theme: DThemeBase;\r\n\tprotected _color?: DStateAwareOrValueMightBe<number | null>;\r\n\tprotected _alpha?: DStateAwareOrValueMightBe<number>;\r\n\tprotected _width?: DStateAwareOrValueMightBe<number>;\r\n\tprotected _offset?: DStateAwareOrValueMightBe<number>;\r\n\tprotected _align?: DStateAwareOrValueMightBe<number>;\r\n\tprotected _mask?: DStateAwareOrValueMightBe<DBorderMask>;\r\n\tprotected _callback: Callback | undefined;\r\n\r\n\tconstructor( theme: DThemeBase, options?: DBaseOptions<any>, callback?: Callback ) {\r\n\t\tthis._theme = theme;\r\n\t\tthis._callback = callback;\r\n\t\tif( options != null && options.outline != null ) {\r\n\t\t\tconst outline = options.outline;\r\n\t\t\tthis._color = outline.color;\r\n\t\t\tthis._alpha = outline.alpha;\r\n\t\t\tthis._width = outline.width;\r\n\t\t\tthis._offset = outline.offset;\r\n\t\t\tthis._align = outline.align;\r\n\t\t\tthis._mask = ( isString( outline.mask ) ? DBorderMask[ outline.mask ] : outline.mask );\r\n\t\t}\r\n\t}\r\n\r\n\tgetTheme(): DThemeBase {\r\n\t\treturn this._theme;\r\n\t}\r\n\r\n\tsetTheme( theme: DThemeBase ): void {\r\n\t\tthis._theme = theme;\r\n\t}\r\n\r\n\tgetColor( state: DBaseState ): number | null {\r\n\t\tconst color = this._color;\r\n\t\tif( color !== undefined ) {\r\n\t\t\tif( isFunction( color ) ) {\r\n\t\t\t\tconst result = color( state );\r\n\t\t\t\tif( result !== undefined ) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn color;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._theme.getOutlineColor( state );\r\n\t}\r\n\r\n\tget color(): DStateAwareOrValueMightBe<number | null> {\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tset color( color: DStateAwareOrValueMightBe<number | null> ) {\r\n\t\tif( this._color !== color ) {\r\n\t\t\tthis._color = color;\r\n\t\t\tconst callback = this._callback;\r\n\t\t\tif( callback != null ) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetAlpha( state: DBaseState ): number {\r\n\t\tconst alpha = this._alpha;\r\n\t\tif( alpha !== undefined ) {\r\n\t\t\tif( isFunction( alpha ) ) {\r\n\t\t\t\tconst result = alpha( state );\r\n\t\t\t\tif( result !== undefined ) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn alpha;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._theme.getOutlineAlpha( state );\r\n\t}\r\n\r\n\tget alpha(): DStateAwareOrValueMightBe<number> {\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tset alpha( alpha: DStateAwareOrValueMightBe<number> ) {\r\n\t\tif( this._alpha !== alpha ) {\r\n\t\t\tthis._alpha = alpha;\r\n\t\t\tconst callback = this._callback;\r\n\t\t\tif( callback != null ) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetWidth( state: DBaseState ): number {\r\n\t\tconst width = this._width;\r\n\t\tif( width !== undefined ) {\r\n\t\t\tif( isFunction( width ) ) {\r\n\t\t\t\tconst result = width( state );\r\n\t\t\t\tif( result !== undefined ) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn width;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._theme.getOutlineWidth( state );\r\n\t}\r\n\r\n\tget width(): DStateAwareOrValueMightBe<number> {\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tset width( width: DStateAwareOrValueMightBe<number> ) {\r\n\t\tif( this._width !== width ) {\r\n\t\t\tthis._width = width;\r\n\t\t\tconst callback = this._callback;\r\n\t\t\tif( callback != null ) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetOffset( state: DBaseState ): number {\r\n\t\tconst offset = this._offset;\r\n\t\tif( offset !== undefined ) {\r\n\t\t\tif( isFunction( offset ) ) {\r\n\t\t\t\tconst result = offset( state );\r\n\t\t\t\tif( result !== undefined ) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn offset;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._theme.getOutlineOffset( state );\r\n\t}\r\n\r\n\tget offset(): DStateAwareOrValueMightBe<number> {\r\n\t\treturn this._offset;\r\n\t}\r\n\r\n\tset offset( offset: DStateAwareOrValueMightBe<number> ) {\r\n\t\tif( this._offset !== offset ) {\r\n\t\t\tthis._offset = offset;\r\n\t\t\tconst callback = this._callback;\r\n\t\t\tif( callback != null ) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetAlign( state: DBaseState ): number {\r\n\t\tconst align = this._align;\r\n\t\tif( align !== undefined ) {\r\n\t\t\tif( isFunction( align ) ) {\r\n\t\t\t\tconst result = align( state );\r\n\t\t\t\tif( result !== undefined ) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn align;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._theme.getOutlineAlign( state );\r\n\t}\r\n\r\n\tget align(): DStateAwareOrValueMightBe<number> {\r\n\t\treturn this._align;\r\n\t}\r\n\r\n\tset align( align: DStateAwareOrValueMightBe<number> ) {\r\n\t\tif( this._align !== align ) {\r\n\t\t\tthis._align = align;\r\n\t\t\tconst callback = this._callback;\r\n\t\t\tif( callback != null ) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetMask( state: DBaseState ): number {\r\n\t\tconst mask = this._mask;\r\n\t\tif( mask !== undefined ) {\r\n\t\t\tif( isFunction( mask ) ) {\r\n\t\t\t\tconst result = mask( state );\r\n\t\t\t\tif( result !== undefined ) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn mask;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._theme.getOutlineMask( state );\r\n\t}\r\n\r\n\tget mask(): DStateAwareOrValueMightBe<DBorderMask> {\r\n\t\treturn this._mask;\r\n\t}\r\n\r\n\tset mask( mask: DStateAwareOrValueMightBe<DBorderMask> ) {\r\n\t\tif( this._mask !== mask ) {\r\n\t\t\tthis._mask = mask;\r\n\t\t\tconst callback = this._callback;\r\n\t\t\tif( callback != null ) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}