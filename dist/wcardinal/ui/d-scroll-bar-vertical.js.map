{"version":3,"file":"d-scroll-bar-vertical.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-scroll-bar-vertical.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAIH,OAAO,EAAE,UAAU,EAAqB,MAAM,gBAAgB,CAAC;AAE/D,OAAO,EAAE,uBAAuB,EAAE,MAAM,+BAA+B,CAAC;AACxE,OAAO,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAE7D;IAAwC,sCAAU;IAAlD;;IAiDA,CAAC;IAhDU,iCAAI,GAAd,UAAgB,OAA2B;QAA3C,iBA4BC;QA3BA,iBAAM,IAAI,YAAE,OAAO,CAAE,CAAC;QAEtB,IAAI,CAAC,EAAE,CAAE,gBAAgB,CAAC,IAAI,EAAE,UAAE,CAAmB;YACpD,IAAI,CAAC,CAAC,MAAM,KAAK,KAAI,EAAG;gBACvB,IAAM,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,GAAG,MAAM,EAAG;oBAChB,IAAM,IAAI,GAAG,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC;oBACrC,IAAM,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAE,KAAI,CAAE,CAAC;oBACjD,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,GAAG,GAAG,CAAE,CAAE,CAAC;oBACvF,IAAI,KAAI,CAAC,MAAM,KAAK,QAAQ,EAAG;wBAC9B,KAAI,CAAC,IAAI,CAAE,YAAY,EAAE,QAAQ,EAAE,KAAI,CAAE,CAAC;qBAC1C;iBACD;gBACD,CAAC,CAAC,eAAe,EAAE,CAAC;aACpB;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAE,YAAY,EAAE,UAAE,CAAS;YACxC,IAAM,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,GAAG,MAAM,EAAG;gBAChB,IAAM,IAAI,GAAG,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC;gBACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,GAAG,MAAM,CAAE,CAAE,CAAC;gBACjE,IAAI,KAAI,CAAC,MAAM,KAAK,QAAQ,EAAG;oBAC9B,KAAI,CAAC,IAAI,CAAE,YAAY,EAAE,QAAQ,EAAE,KAAI,CAAE,CAAC;iBAC1C;aACD;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAES,wCAAW,GAArB,UAAuB,OAAgC;QACtD,OAAO,IAAI,uBAAuB,CAAE,OAAO,CAAE,CAAC;IAC/C,CAAC;IAED,2CAAc,GAAd;QACC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAE,MAAM,GAAG,GAAG,EAAE,KAAK,CAAC,cAAc,EAAE,CAAE,CAAC;QAC1E,IAAM,KAAK,GAAG,MAAM,GAAG,gBAAgB,CAAC;QACxC,IAAM,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QACrC,IAAM,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,gBAAgB,GAAG,QAAQ,CAAC;QAEhE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAE,CAAC,EAAE,QAAQ,CAAE,CAAC;QAClC,KAAK,CAAC,MAAM,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;QAE/B,iBAAM,cAAc,WAAE,CAAC;IACxB,CAAC;IACF,yBAAC;AAAD,CAAC,AAjDD,CAAwC,UAAU,GAiDjD","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { interaction } from \"pixi.js\";\r\nimport InteractionEvent = interaction.InteractionEvent;\r\nimport { DScrollBar, DScrollBarOptions } from \"./d-scroll-bar\";\r\nimport { DScrollBarThumb, DScrollBarThumbOptions } from \"./d-scroll-bar-thumb\";\r\nimport { DScrollBarThumbVertocal } from \"./d-scroll-bar-thumb-vertical\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\n\r\nexport class DScrollBarVertical extends DScrollBar {\r\n\tprotected init( options?: DScrollBarOptions ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tthis.on( UtilPointerEvent.down, ( e: InteractionEvent ): void => {\r\n\t\t\tif( e.target === this ) {\r\n\t\t\t\tconst height = this.height;\r\n\t\t\t\tif( 0 < height ) {\r\n\t\t\t\t\tconst size = this._end - this._start;\r\n\t\t\t\t\tconst position = e.data.getLocalPosition( this );\r\n\t\t\t\t\tconst newStart = Math.min( 1 - size, Math.max( 0, position.y / height - size * 0.5 ) );\r\n\t\t\t\t\tif( this._start !== newStart ) {\r\n\t\t\t\t\t\tthis.emit( \"regionmove\", newStart, this );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._thumb.on( \"regionmove\", ( y: number ): void => {\r\n\t\t\tconst height = this.height;\r\n\t\t\tif( 0 < height ) {\r\n\t\t\t\tconst size = this._end - this._start;\r\n\t\t\t\tconst newStart = Math.min( 1 - size, Math.max( 0, y / height ) );\r\n\t\t\t\tif( this._start !== newStart ) {\r\n\t\t\t\t\tthis.emit( \"regionmove\", newStart, this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected createThumb( options?: DScrollBarThumbOptions ): DScrollBarThumb {\r\n\t\treturn new DScrollBarThumbVertocal( options );\r\n\t}\r\n\r\n\tonRegionChange(): void {\r\n\t\tconst thumb = this._thumb;\r\n\t\tconst width = this.width;\r\n\t\tconst height = this.height;\r\n\t\tconst thumbMinimumSize = Math.min( height * 0.5, thumb.getMinimumSize() );\r\n\t\tconst space = height - thumbMinimumSize;\r\n\t\tconst barStart = space * this._start;\r\n\t\tconst barSize = space * this._end + thumbMinimumSize - barStart;\r\n\r\n\t\tthumb.position.set( 0, barStart );\r\n\t\tthumb.resize( width, barSize );\r\n\r\n\t\tsuper.onRegionChange();\r\n\t}\r\n}\r\n"]}