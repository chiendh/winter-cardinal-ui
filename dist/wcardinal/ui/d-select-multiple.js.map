{"version":3,"file":"d-select-multiple.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-select-multiple.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DDropdownBase, DDropdownBaseOnOptions, DDropdownBaseOptions, DThemeDropdownBase } from \"./d-dropdown-base\";\r\nimport { DMenu } from \"./d-menu\";\r\nimport { DMenuItem } from \"./d-menu-item\";\r\nimport { DMenuItemCheck } from \"./d-menu-item-check\";\r\nimport { DMenuItemMenu } from \"./d-menu-item-menu\";\r\n\r\n/**\r\n * Mappings of event names and handlers.\r\n */\r\nexport interface DSelectMultipleOnOptions<VALUE> extends DDropdownBaseOnOptions<VALUE, DMenuItem<VALUE> | null> {\r\n\t/**\r\n\t * Called when a menu item is selected.\r\n\t *\r\n\t * @param value a value of a selected menu item\r\n\t * @param item a selected menu item\r\n\t * @param self an event emitter\r\n\t */\r\n\tmenuselect?: ( value: VALUE, item: DMenuItem<VALUE>, self: any ) => void;\r\n\r\n\t/**\r\n\t * Called when the selection is changed.\r\n\t *\r\n\t * @param newValues new selected values\r\n\t * @param oldValues old selected values\r\n\t * @param items selected items\r\n\t * @param self an event emitter\r\n\t */\r\n\tchange?: ( newValues: VALUE[], oldValues: VALUE[], items: Array<DMenuItem<VALUE>>, self: any ) => void;\r\n}\r\n\r\n/**\r\n * DSelect options.\r\n */\r\nexport interface DSelectMultipleOptions<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeSelectMultiple = DThemeSelectMultiple\r\n> extends DDropdownBaseOptions<VALUE, Array<DMenuItem<VALUE>>, THEME> {\r\n\t/**\r\n\t * A default values.\r\n\t */\r\n\tvalues?: VALUE[];\r\n\r\n\ton?: DSelectMultipleOnOptions<VALUE>;\r\n}\r\n\r\nexport interface DThemeSelectMultiple extends DThemeDropdownBase<Array<DMenuItem<any>>> {\r\n\r\n}\r\n\r\nexport class DSelectMultiple<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeSelectMultiple = DThemeSelectMultiple,\r\n\tOPTIONS extends DSelectMultipleOptions<VALUE, THEME> = DSelectMultipleOptions<VALUE, THEME>\r\n> extends DDropdownBase<VALUE, Array<DMenuItem<VALUE>>, THEME, OPTIONS> {\r\n\tprotected _values!: VALUE[];\r\n\tprotected _onSelectedBound!: ( value: VALUE, child: DMenuItem<VALUE> ) => void;\r\n\tprotected _onClosedBound!: () => void;\r\n\r\n\tconstructor( options?: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t}\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tthis._onSelectedBound = ( value: VALUE, child: DMenuItem<VALUE> ): void => {\r\n\t\t\tif( child instanceof DMenuItemCheck ) {\r\n\t\t\t\tconst oldValues = this._values;\r\n\t\t\t\tconst newValues: VALUE[] = [];\r\n\t\t\t\tconst newItems: Array<DMenuItem<VALUE>> = [];\r\n\t\t\t\tconst menu = this.menu;\r\n\t\t\t\tif( child.isActive() ) {\r\n\t\t\t\t\tthis.updateMenuItems( menu, oldValues, value, undefined, newValues, newItems );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.updateMenuItems( menu, oldValues, undefined, value, newValues, newItems );\r\n\t\t\t\t}\r\n\t\t\t\tthis._values = newValues;\r\n\t\t\t\tthis.onSelected( newValues, oldValues, newItems, true );\r\n\t\t\t} else {\r\n\t\t\t\tthis.emit( \"menuselect\", value, child, this );\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis._onClosedBound = (): void => {\r\n\t\t\tthis.onClosed();\r\n\t\t};\r\n\r\n\t\t// Default value\r\n\t\tthis._values = [];\r\n\t\tif( options && options.values !== undefined ) {\r\n\t\t\tthis.values = options.values;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onSelected( newValues: VALUE[], oldValues: VALUE[], items: Array<DMenuItem<VALUE>>, emit: boolean ): void {\r\n\t\t// Chante texts\r\n\t\tthis.text = items;\r\n\r\n\t\t// Event\r\n\t\tif( emit ) {\r\n\t\t\tthis.emit( \"change\", newValues, oldValues, items, this );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onClosed(): void {\r\n\t\tconst menu = this.menu;\r\n\t\tmenu.off( \"select\", this._onSelectedBound );\r\n\t\tmenu.off( \"close\", this._onClosedBound );\r\n\t}\r\n\r\n\tstart(): void {\r\n\t\tconst menu = this.menu;\r\n\t\tmenu.on( \"select\", this._onSelectedBound );\r\n\t\tmenu.on( \"close\", this._onClosedBound );\r\n\t\tthis.updateMenuItems( menu, this._values );\r\n\t\tsuper.start();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a selected value or null.\r\n\t */\r\n\tget values(): VALUE[] {\r\n\t\treturn this._values;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets to the specified value.\r\n\t */\r\n\tset values( values: VALUE[] ) {\r\n\t\tconst oldValues = this._values;\r\n\t\tif( ! this.isSameValues( values, oldValues ) ) {\r\n\t\t\tconst newValues: VALUE[] = [];\r\n\t\t\tconst newItems: Array<DMenuItem<VALUE>> = [];\r\n\t\t\tthis.updateMenuItems( this.menu, values, undefined, undefined, newValues, newItems );\r\n\t\t\tthis._values = newValues;\r\n\t\t\tthis.onSelected( newValues, oldValues, newItems, false );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected isSameValues( a: VALUE[], b: VALUE[] ): boolean {\r\n\t\tif( a.length === b.length ) {\r\n\t\t\tfor( let i = 0, imax = a.length; i < imax; ++i ) {\r\n\t\t\t\tif( b.indexOf( a[ i ] ) < 0 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected updateMenuItems(\r\n\t\tmenu: DMenu<VALUE>,\r\n\t\toldValues: VALUE[],\r\n\t\taddedValue?: VALUE,\r\n\t\tremovedValue?: VALUE,\r\n\t\tnewValues?: VALUE[],\r\n\t\tnewItems?: Array<DMenuItem<VALUE>>\r\n\t): void {\r\n\t\tconst children = menu.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tif( child instanceof DMenuItemMenu ) {\r\n\t\t\t\tthis.updateMenuItems( child.menu, oldValues, addedValue, removedValue, newValues, newItems );\r\n\t\t\t} else if( child instanceof DMenuItemCheck ) {\r\n\t\t\t\tconst childValue = child.value;\r\n\t\t\t\tif( removedValue !== undefined && removedValue === childValue ) {\r\n\t\t\t\t\tchild.setActive( false );\r\n\t\t\t\t} else if( ( addedValue !== undefined && child.value === addedValue ) || 0 <= oldValues.indexOf( child.value ) ) {\r\n\t\t\t\t\tif( newValues ) {\r\n\t\t\t\t\t\tnewValues.push( child.value );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( newItems ) {\r\n\t\t\t\t\t\tnewItems.push( child );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.setActive( true );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchild.setActive( false );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DSelectMultiple\";\r\n\t}\r\n}\r\n"]}