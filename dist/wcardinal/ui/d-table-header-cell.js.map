{"version":3,"file":"d-table-header-cell.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-header-cell.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { interaction } from \"pixi.js\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DImage, DImageOptions, DThemeImage } from \"./d-image\";\r\nimport { DStateAwareOrValueMightBe } from \"./d-state-aware\";\r\nimport { DTableCellState } from \"./d-table-cell-state\";\r\nimport { DTableColumn } from \"./d-table-column\";\r\nimport {\r\n\tDTableDataComparatorFunction, DTableDataComparatorObject,\r\n\tDTableDataOrder, DTableDataSorter\r\n} from \"./d-table-data-sorter\";\r\nimport { DTableHeaderTable } from \"./d-table-header\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\n\r\nexport interface DTableHeaderCellHeader<ROW> {\r\n\treadonly table: DTableHeaderTable<ROW> | null;\r\n}\r\n\r\nexport interface DTableHeaderCellOptions<\r\n\tROW,\r\n\tTHEME extends DThemeTableHeaderCell = DThemeTableHeaderCell\r\n> extends DImageOptions<string | null, THEME> {\r\n\theader: DTableHeaderCellHeader<ROW>;\r\n\tcolumn: DTableColumn<ROW>;\r\n}\r\n\r\nexport interface DThemeTableHeaderCell extends DThemeImage {\r\n\tgetTextFormatter(): ( value: string | null, caller: DTableHeaderCell<unknown> ) => string;\r\n\tgetTextValue( state: DBaseState ): string | null;\r\n\tnewTextValue(): DStateAwareOrValueMightBe<string | null>;\r\n}\r\n\r\nexport class DTableHeaderCell<\r\n\tROW,\r\n\tTHEME extends DThemeTableHeaderCell = DThemeTableHeaderCell,\r\n\tOPTIONS extends DTableHeaderCellOptions<ROW, THEME> = DTableHeaderCellOptions<ROW, THEME>\r\n> extends DImage<string | null, THEME, OPTIONS> {\r\n\tprotected _sorter?: DTableDataSorter<ROW>;\r\n\tprotected _onSorterChangeBound?: () => void;\r\n\tprotected _comparator?: DTableDataComparatorFunction<ROW> | DTableDataComparatorObject<ROW>;\r\n\tprotected _header: DTableHeaderCellHeader<ROW>;\r\n\tprotected _column: DTableColumn<ROW>;\r\n\r\n\tconstructor( options: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t\tthis._header = options.header;\r\n\t\tthis._column = options.column;\r\n\t\tthis._comparator = options.column.sorting.comparator;\r\n\r\n\t\tconst sorting = options.column.sorting;\r\n\t\tif( sorting.enable ) {\r\n\t\t\tUtilPointerEvent.onClick( this, ( e: interaction.InteractionEvent ): void => {\r\n\t\t\t\tthis.onClick();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tget sorter(): DTableDataSorter<ROW> | null {\r\n\t\tlet sorter = this._sorter || null;\r\n\t\tif( sorter == null ) {\r\n\t\t\tconst table = this._header.table;\r\n\t\t\tif( table ) {\r\n\t\t\t\tsorter = table.data.sorter;\r\n\t\t\t\tthis._sorter = sorter;\r\n\t\t\t\tthis._onSorterChangeBound = this._onSorterChangeBound || (() => {\r\n\t\t\t\t\tthis.onSorterChange();\r\n\t\t\t\t});\r\n\t\t\t\tsorter.on( \"change\", this._onSorterChangeBound );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sorter;\r\n\t}\r\n\r\n\tget comparator(): DTableDataComparatorFunction<ROW> | DTableDataComparatorObject<ROW> | null {\r\n\t\treturn this._comparator || null;\r\n\t}\r\n\r\n\tonClick(): void {\r\n\t\tconst comparator = this._comparator;\r\n\t\tif( comparator ) {\r\n\t\t\tconst sorter = this.sorter;\r\n\t\t\tif( sorter ) {\r\n\t\t\t\tif( sorter.get() === comparator ) {\r\n\t\t\t\t\tif( sorter.order === DTableDataOrder.ASCENDING ) {\r\n\t\t\t\t\t\tsorter.order = DTableDataOrder.DESCENDING;\r\n\t\t\t\t\t\tsorter.apply();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsorter.set( null );\r\n\t\t\t\t\t\tsorter.apply();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsorter.set( comparator );\r\n\t\t\t\t\tsorter.order = DTableDataOrder.ASCENDING;\r\n\t\t\t\t\tsorter.apply();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onSorterChange(): void {\r\n\t\tconst sorter = this._sorter;\r\n\t\tconst comparator = this._comparator;\r\n\t\tif( sorter && comparator ) {\r\n\t\t\tconst SORTED_ASCENDING = DTableCellState.SORTED_ASCENDING;\r\n\t\t\tconst SORTED_DESCENDING = DTableCellState.SORTED_DESCENDING;\r\n\t\t\tif( sorter.isApplied() && sorter.get() === comparator ) {\r\n\t\t\t\tif( sorter.order === DTableDataOrder.ASCENDING ) {\r\n\t\t\t\t\tthis.setStates( SORTED_ASCENDING, SORTED_DESCENDING );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setStates( SORTED_DESCENDING, SORTED_ASCENDING );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState( SORTED_ASCENDING | SORTED_DESCENDING, false );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected init( options: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTableHeaderCell\";\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tconst sorter = this._sorter;\r\n\t\tconst onSorterChangeBound = this._onSorterChangeBound;\r\n\t\tif( sorter && onSorterChangeBound ) {\r\n\t\t\tsorter.off( \"change\", onSorterChangeBound );\r\n\t\t}\r\n\t\tthis._sorter = undefined;\r\n\t\tthis._onSorterChangeBound = undefined;\r\n\t\tthis._comparator = undefined;\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n"]}