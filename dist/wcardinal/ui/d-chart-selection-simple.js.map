{"version":3,"file":"d-chart-selection-simple.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-selection-simple.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { interaction, utils } from \"pixi.js\";\r\nimport { DBaseOnOptions } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DChartSelection, DChartSelectionPoint } from \"./d-chart-selection\";\r\nimport { DChartSelectionSub, DChartSelectionSubOptions } from \"./d-chart-selection-sub\";\r\nimport { DChartSelectionSubImpl } from \"./d-chart-selection-sub-impl\";\r\nimport { DChartSeriesHitResult } from \"./d-chart-series\";\r\nimport { DChartSeriesContainer } from \"./d-chart-series-container\";\r\nimport { isString } from \"./util/is-string\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\n\r\nexport interface DChartSelectionSimpleOptions {\r\n\tselected?: DChartSelectionSubOptions;\r\n\thovered?: DChartSelectionSubOptions;\r\n\tpoint?: DChartSelectionPoint | (keyof typeof DChartSelectionPoint);\r\n\ton?: DBaseOnOptions;\r\n}\r\n\r\nexport class DChartSelectionSimple extends utils.EventEmitter implements DChartSelection {\r\n\tprotected static WORK_SELECT: DChartSeriesHitResult = new DChartSeriesHitResult();\r\n\r\n\tprotected _container: DChartSeriesContainer | null;\r\n\tprotected _selected: DChartSelectionSub;\r\n\tprotected _hovered: DChartSelectionSub;\r\n\r\n\tprotected _onClickBound!: ( e: interaction.InteractionEvent ) => void;\r\n\tprotected _onMoveBound!: ( e: interaction.InteractionEvent ) => void;\r\n\r\n\tconstructor( options?: DChartSelectionSimpleOptions ) {\r\n\t\tsuper();\r\n\r\n\t\tthis._container = null;\r\n\t\tconst point = ( options && options.point != null ?\r\n\t\t\t( isString( options.point ) ? DChartSelectionPoint[ options.point ] : options.point ) :\r\n\t\t\tDChartSelectionPoint.CLOSER\r\n\t\t);\r\n\r\n\t\tthis._selected = this.newSelected( point, options && options.selected );\r\n\t\tthis._hovered = this.newHovered( point, options && options.hovered );\r\n\r\n\t\t// Events\r\n\t\tif( options ) {\r\n\t\t\tconst on = options.on;\r\n\t\t\tif( on != null ) {\r\n\t\t\t\tfor( const name in on ) {\r\n\t\t\t\t\tconst handler = on[ name ];\r\n\t\t\t\t\tif( handler ) {\r\n\t\t\t\t\t\tthis.on( name, handler );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//\r\n\t\tthis._onMoveBound = ( e: interaction.InteractionEvent ): void => {\r\n\t\t\tthis.onMove( e );\r\n\t\t};\r\n\r\n\t\tthis._onClickBound = ( e: interaction.InteractionEvent ): void => {\r\n\t\t\tthis.onClick( e );\r\n\t\t};\r\n\t}\r\n\r\n\tprotected newSelected(\r\n\t\tpoint: DChartSelectionPoint,\r\n\t\toptions?: DChartSelectionSubOptions\r\n\t): DChartSelectionSub {\r\n\t\treturn new DChartSelectionSubImpl(\r\n\t\t\tthis.toSubOptions(\r\n\t\t\t\tpoint,\r\n\t\t\t\toptions,\r\n\t\t\t\tDBaseState.ACTIVE\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tprotected newHovered(\r\n\t\tpoint: DChartSelectionPoint,\r\n\t\toptions?: DChartSelectionSubOptions\r\n\t): DChartSelectionSub {\r\n\t\treturn new DChartSelectionSubImpl(\r\n\t\t\tthis.toSubOptions(\r\n\t\t\t\tpoint,\r\n\t\t\t\toptions,\r\n\t\t\t\tDBaseState.HOVERED\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tprotected toSubOptions(\r\n\t\tpoint: DChartSelectionPoint,\r\n\t\toptions: DChartSelectionSubOptions | undefined,\r\n\t\tstate: DBaseState\r\n\t): DChartSelectionSubOptions {\r\n\t\toptions = options || {};\r\n\r\n\t\tif( options.point == null ) {\r\n\t\t\toptions.point = point;\r\n\t\t}\r\n\r\n\t\tif( options.state == null ) {\r\n\t\t\toptions.state = state;\r\n\t\t}\r\n\r\n\t\tconst gridline = options.gridline || {};\r\n\t\tconst gridlineX = gridline.x || {};\r\n\t\tif( gridlineX.state == null ) {\r\n\t\t\tgridlineX.state = state;\r\n\t\t}\r\n\r\n\t\tconst gridlineY = gridline.y || {};\r\n\t\tif( gridlineY.state == null ) {\r\n\t\t\tgridlineY.state = state;\r\n\t\t}\r\n\r\n\t\tconst marker = options.marker || {};\r\n\t\tif( marker.state == null ) {\r\n\t\t\tmarker.state = state;\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\t}\r\n\r\n\tprotected onClick( e: interaction.InteractionEvent ): void {\r\n\t\tconst container = this._container;\r\n\t\tif( container && e.target === container.plotArea ) {\r\n\t\t\tconst hovered = this._hovered;\r\n\t\t\tconst series = hovered.series;\r\n\t\t\tconst selected = this._selected;\r\n\t\t\tif( series ) {\r\n\t\t\t\tselected.set( series, hovered );\r\n\t\t\t} else {\r\n\t\t\t\tselected.unset();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onMove( e: interaction.InteractionEvent ): void {\r\n\t\tconst container = this._container;\r\n\t\tif( container ) {\r\n\t\t\tconst hovered = this._hovered;\r\n\t\t\tif( e.target === container.plotArea ) {\r\n\t\t\t\tconst result = DChartSelectionSimple.WORK_SELECT;\r\n\t\t\t\tconst series = container.calcHitPoint( e.data.global, result );\r\n\t\t\t\tif( series ) {\r\n\t\t\t\t\thovered.set( series, result );\r\n\t\t\t\t} else {\r\n\t\t\t\t\thovered.unset();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\thovered.unset();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbind( container: DChartSeriesContainer ): void {\r\n\t\tthis._container = container;\r\n\t\tthis._selected.bind( container );\r\n\t\tthis._hovered.bind( container );\r\n\t\tconst plotArea = container.plotArea;\r\n\t\tplotArea.on( UtilPointerEvent.move, this._onMoveBound );\r\n\t\tUtilPointerEvent.onClick( plotArea, this._onClickBound );\r\n\t}\r\n\r\n\tunbind(): void {\r\n\t\tconst container = this._container;\r\n\t\tthis._container = null;\r\n\t\tif( container ) {\r\n\t\t\tconst plotArea = container.plotArea;\r\n\t\t\tplotArea.off( UtilPointerEvent.move, this._onMoveBound );\r\n\t\t}\r\n\r\n\t\tthis._selected.unbind();\r\n\t\tthis._hovered.unbind();\r\n\t}\r\n\r\n\tget selected(): DChartSelectionSub {\r\n\t\treturn this._selected;\r\n\t}\r\n\r\n\tget hovered(): DChartSelectionSub {\r\n\t\treturn this._hovered;\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tthis._selected.update();\r\n\t\tthis._hovered.update();\r\n\t}\r\n}\r\n"]}