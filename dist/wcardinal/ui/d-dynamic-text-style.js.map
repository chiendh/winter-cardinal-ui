{"version":3,"file":"d-dynamic-text-style.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-dynamic-text-style.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DFontStyle, DFontVariant, DFontWeight, DThemeFont } from \"./d-font\";\r\nimport { DThemes } from \"./theme/d-themes\";\r\n\r\nexport type DDynamicTextAlign = \"left\" | \"center\" | \"right\";\r\n\r\nexport interface DDynamicTextStyleOptions {\r\n\talign?: DDynamicTextAlign;\r\n\tfontFamily?: string;\r\n\tfontSize?: number;\r\n\tfontStyle?: DFontStyle;\r\n\tfontVariant?: DFontVariant;\r\n\tfontWeight?: DFontWeight;\r\n\tfill?: number;\r\n\tclipping?: boolean;\r\n}\r\n\r\nexport class DDynamicTextStyle {\r\n\tprotected static FONT: DThemeFont | null = null;\r\n\r\n\tprotected _id: number;\r\n\tprotected _idApproved: number;\r\n\tprotected _fontIdId: number;\r\n\tprotected _fontId: string;\r\n\tprotected _fontIdApproved: string;\r\n\tprotected _align: DDynamicTextAlign;\r\n\tprotected _fontFamily: string;\r\n\tprotected _fontSize: number;\r\n\tprotected _fontStyle: DFontStyle;\r\n\tprotected _fontVariant: DFontVariant;\r\n\tprotected _fontWeight: DFontWeight;\r\n\tprotected _fill: number;\r\n\tprotected _fillApproved: number;\r\n\tprotected _clipping: boolean;\r\n\tprotected _onChange: () => void;\r\n\r\n\tconstructor( options: DDynamicTextStyleOptions | undefined, onChange: () => void ) {\r\n\t\tthis._id = 0;\r\n\t\tthis._idApproved = -1;\r\n\r\n\t\tconst font = DDynamicTextStyle.FONT = (\r\n\t\t\tDDynamicTextStyle.FONT || DThemes.getInstance().get( \"DBase\" ) as DThemeFont\r\n\t\t);\r\n\t\tthis._align = (options && options.align) || \"left\";\r\n\t\tthis._fontFamily = (options && options.fontFamily) || font.getFontFamilly();\r\n\t\tthis._fontSize = (options && options.fontSize) || font.getFontSize();\r\n\t\tthis._fontStyle = (options && options.fontStyle) || \"normal\";\r\n\t\tthis._fontVariant = (options && options.fontVariant) || \"normal\";\r\n\t\tthis._fontWeight = (options && options.fontWeight) || \"normal\";\r\n\r\n\t\tthis._fontIdId = -1;\r\n\t\tthis._fontId = \"\";\r\n\t\tthis._fontIdApproved = \"\";\r\n\r\n\t\tthis._fill = (options && options.fill) || font.getColor( 0 );\r\n\t\tthis._fillApproved = 0x000000;\r\n\r\n\t\tthis._clipping = ((options && options.clipping != null) ? options.clipping : true);\r\n\r\n\t\tthis._onChange = onChange;\r\n\t}\r\n\r\n\tget id(): number {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tget idApproved(): number {\r\n\t\treturn this._idApproved;\r\n\t}\r\n\r\n\tget fontId(): string {\r\n\t\tthis.update();\r\n\t\treturn this._fontId;\r\n\t}\r\n\r\n\tget fontIdApproved(): string {\r\n\t\treturn this._fontIdApproved;\r\n\t}\r\n\r\n\tget fill(): number {\r\n\t\treturn this._fill;\r\n\t}\r\n\r\n\tset fill( fill: number ) {\r\n\t\tif( this._fill !== fill ) {\r\n\t\t\tthis._fill = fill;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onChange(): void {\r\n\t\tthis._id += 1;\r\n\t\tthis._onChange();\r\n\t}\r\n\r\n\tget fillApproved(): number {\r\n\t\treturn this._fillApproved;\r\n\t}\r\n\r\n\tapprove(): void {\r\n\t\tthis.update();\r\n\t\tthis._idApproved = this._id;\r\n\t\tthis._fontIdApproved = this._fontId;\r\n\t\tthis._fillApproved = this._fill;\r\n\t}\r\n\r\n\tget fontFamily(): string {\r\n\t\treturn this._fontFamily;\r\n\t}\r\n\r\n\tset fontFamily( fontFamily: string ) {\r\n\t\tif( this._fontFamily !== fontFamily ) {\r\n\t\t\tthis._fontFamily = fontFamily;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\tget fontSize(): number {\r\n\t\treturn this._fontSize;\r\n\t}\r\n\r\n\tset fontSize( fontSize: number ) {\r\n\t\tif( this._fontSize !== fontSize ) {\r\n\t\t\tthis._fontSize = fontSize;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\tget fontStyle(): DFontStyle {\r\n\t\treturn this._fontStyle;\r\n\t}\r\n\r\n\tset fontStyle( fontStyle: DFontStyle ) {\r\n\t\tif( this._fontStyle !== fontStyle ) {\r\n\t\t\tthis._fontStyle = fontStyle;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\tget fontVariant(): DFontVariant {\r\n\t\treturn this._fontVariant;\r\n\t}\r\n\r\n\tset fontVariant( fontVariant: DFontVariant ) {\r\n\t\tif( this._fontVariant !== fontVariant ) {\r\n\t\t\tthis._fontVariant = fontVariant;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\tget fontWeight(): DFontWeight {\r\n\t\treturn this._fontWeight;\r\n\t}\r\n\r\n\tset fontWeight( fontWeight: DFontWeight ) {\r\n\t\tif( this._fontWeight !== fontWeight ) {\r\n\t\t\tthis._fontWeight = fontWeight;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected update(): void {\r\n\t\tif( this._fontIdId !== this._id ) {\r\n\t\t\tthis._fontIdId = this._id;\r\n\t\t\tthis._fontId = this.newFontId();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected newFontId(): string {\r\n\t\treturn `${this._fontStyle} ${this._fontVariant} ${this._fontWeight} ${this._fontSize}px ${this._fontFamily}`;\r\n\t}\r\n\r\n\tget clipping(): boolean {\r\n\t\treturn this._clipping;\r\n\t}\r\n\r\n\tset clipping( clipping: boolean ) {\r\n\t\tif( this._clipping !== clipping ) {\r\n\t\t\tthis._clipping = clipping;\r\n\t\t\tthis.onChange();\r\n\t\t}\r\n\t}\r\n}\r\n"]}