{"version":3,"file":"d-shadow-impl.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-shadow-impl.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,cAAc,EAAW,MAAM,SAAS,CAAC;AAIlD;IAAiC,+BAAc;IAM9C,qBAAa,OAAgB,EAAE,KAAa,EAAE,MAAc,EAAE,OAAe,EAAE,OAAe;QAA9F,YACC,kBAAO,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAE,SAa9C;QAXA,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,KAAI,CAAC,OAAO,GAAG,KAAK,GAAG,GAAG,CAAC;QAC3B,KAAI,CAAC,OAAO,GAAG,MAAM,GAAG,GAAG,CAAC;QAE5B,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAEjC,OAAO,CAAC,EAAE,CAAE,QAAQ,EAAE;YACrB,KAAI,CAAC,eAAe,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;;IACJ,CAAC;IAES,qCAAe,GAAzB;QACC,IAAI,CAAC,IAAI,CAAE,QAAQ,EAAE,IAAI,CAAE,CAAC;IAC7B,CAAC;IAED,8BAAQ,GAAR,UAAU,IAAW,EAAE,KAAa,EAAE,MAAc;QACnD,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QACxB,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QACxB,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,MAAM,GAAG,EAAE,CAAC;IAChC,CAAC;IACF,kBAAC;AAAD,CAAC,AAlCD,CAAiC,cAAc,GAkC9C","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { NineSlicePlane, Texture } from \"pixi.js\";\r\nimport { DBase } from \"./d-base\";\r\nimport { DShadow } from \"./d-shadow\";\r\n\r\nexport class DShadowImpl extends NineSlicePlane implements DShadow {\r\n\tprotected _offsetX: number;\r\n\tprotected _offsetY: number;\r\n\tprotected _shiftX: number;\r\n\tprotected _shiftY: number;\r\n\r\n\tconstructor( texture: Texture, width: number, height: number, offsetX: number, offsetY: number ) {\r\n\t\tsuper( texture, width, height, width, height );\r\n\r\n\t\tthis._offsetX = offsetX;\r\n\t\tthis._offsetY = offsetY;\r\n\t\tthis._shiftX = width * 0.5;\r\n\t\tthis._shiftY = height * 0.5;\r\n\r\n\t\tthis.interactive = false;\r\n\t\tthis.interactiveChildren = false;\r\n\r\n\t\ttexture.on( \"update\", (): void => {\r\n\t\t\tthis.onTextureUpdate();\r\n\t\t});\r\n\t}\r\n\r\n\tprotected onTextureUpdate(): void {\r\n\t\tthis.emit( \"update\", this );\r\n\t}\r\n\r\n\tonReflow( base: DBase, width: number, height: number ): void {\r\n\t\tconst sx = this._shiftX;\r\n\t\tconst sy = this._shiftY;\r\n\t\tthis.x = -sx + this._offsetX;\r\n\t\tthis.y = -sy + this._offsetY;\r\n\t\tthis.width = sx + width + sx;\r\n\t\tthis.height = sy + height + sy;\r\n\t}\r\n}\r\n"]}