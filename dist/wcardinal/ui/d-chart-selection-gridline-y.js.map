{"version":3,"file":"d-chart-selection-gridline-y.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-selection-gridline-y.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,wBAAwB,EAAE,MAAM,gCAAgC,CAAC;AAG1E;IAA8C,4CAAwB;IAAtE;;IAmBA,CAAC;IAlBA,yCAAM,GAAN,UAAQ,SAAgC,EAAE,cAAsB;QAC/D,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,KAAK,EAAG;YACX,IAAM,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC;YACjC,IAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC;YACvC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAE,KAAK,GAAG,GAAG,EAAE,OAAO,CAAE,CAAC;YACrD,KAAK,CAAC,IAAI,CAAC,GAAG,CAAE,KAAK,EAAE,CAAC,CAAE,CAAC;YAC3B,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAE,SAAS,EAAE,OAAO,CAAE,CAAC;SACrD;IACF,CAAC;IAES,4CAAS,GAAnB,UAAqB,SAAgC,EAAE,OAAe;QACrE,OAAO,CAAE,CAAC,IAAI,OAAO,IAAI,OAAO,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAE,CAAC;IACjE,CAAC;IAES,0CAAO,GAAjB;QACC,OAAO,0BAA0B,CAAC;IACnC,CAAC;IACF,+BAAC;AAAD,CAAC,AAnBD,CAA8C,wBAAwB,GAmBrE","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { IPoint } from \"pixi.js\";\r\nimport { DChartSelectionShapeBase } from \"./d-chart-selection-shape-base\";\r\nimport { DChartSeriesContainer } from \"./d-chart-series-container\";\r\n\r\nexport class DChartSelectionGridlineY extends DChartSelectionShapeBase {\r\n\tupdate( container: DChartSeriesContainer, mappedPosition: IPoint ): void {\r\n\t\tconst shape = this._shape;\r\n\t\tif( shape ) {\r\n\t\t\tconst mappedY = mappedPosition.y;\r\n\t\t\tconst width = container.plotArea.width;\r\n\t\t\tshape.transform.position.set( width * 0.5, mappedY );\r\n\t\t\tshape.size.set( width, 0 );\r\n\t\t\tshape.visible = this.isVisible( container, mappedY );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected isVisible( container: DChartSeriesContainer, mappedY: number ): boolean {\r\n\t\treturn ( 0 <= mappedY && mappedY <= container.plotArea.height );\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DChartSelectionGridlineY\";\r\n\t}\r\n}\r\n"]}