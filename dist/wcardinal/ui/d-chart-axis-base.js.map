{"version":3,"file":"d-chart-axis-base.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-axis-base.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Matrix } from \"pixi.js\";\r\nimport { DChartAxis } from \"./d-chart-axis\";\r\nimport { DChartAxisBaseOptions, DThemeChartAxisBase } from \"./d-chart-axis-base-options\";\r\nimport {\r\n\tDChartAxisBaseBar, DChartAxisBaseOptionParser, DChartAxisBaseTickContainer\r\n} from \"./d-chart-axis-base-options-parser\";\r\nimport { DChartAxisContainer } from \"./d-chart-axis-container\";\r\nimport { DChartAxisPosition } from \"./d-chart-axis-position\";\r\nimport { DChartCoordinate } from \"./d-chart-coordinate\";\r\nimport { EShapeDefaults } from \"./shape/e-shape-defaults\";\r\nimport { EShapeTextLike } from \"./shape/e-shape-text\";\r\nimport { EShapeBar } from \"./shape/variant/e-shape-bar\";\r\nimport { EShapeBarPosition } from \"./shape/variant/e-shape-bar-position\";\r\nimport { DThemes } from \"./theme/d-themes\";\r\nimport { DeepPartial } from \"./util/deep-partial\";\r\nimport { isNaN } from \"./util/is-nan\";\r\n\r\nexport class DChartAxisBase implements DChartAxis {\r\n\tprotected _coordinateIndex: number;\r\n\tprotected _padding: number;\r\n\tprotected _position: DChartAxisPosition;\r\n\tprotected _container?: DChartAxisContainer;\r\n\tprotected _bar: DChartAxisBaseBar;\r\n\tprotected _index: number;\r\n\tprotected _tick: DChartAxisBaseTickContainer;\r\n\tprotected _majorTicks: Float64Array;\r\n\tprotected _minorTicks: Float64Array;\r\n\tprotected _label?: DeepPartial<EShapeTextLike>;\r\n\tprotected _theme: DThemeChartAxisBase;\r\n\r\n\tconstructor( options?: DChartAxisBaseOptions ) {\r\n\t\tconst theme = this.toTheme( options );\r\n\t\tthis._theme = theme;\r\n\t\tthis._index = 0;\r\n\r\n\t\tconst parser = new DChartAxisBaseOptionParser( theme, options );\r\n\t\tthis._coordinateIndex = parser.coordinateIndex;\r\n\t\tthis._padding = parser.padding;\r\n\t\tthis._position = parser.position;\r\n\t\tconst tick = parser.tick;\r\n\t\tthis._tick = tick;\r\n\t\tthis._label = parser.label;\r\n\t\tthis._bar = parser.bar;\r\n\t\tthis._majorTicks = new Float64Array( tick.major.count * 3 );\r\n\t\tthis._minorTicks = new Float64Array( (tick.major.count + 1) * tick.minor.count * 3 );\r\n\t}\r\n\r\n\tget position(): DChartAxisPosition {\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tprotected updateBar( container: DChartAxisContainer ): void {\r\n\t\tconst bar = this._bar;\r\n\t\tconst barShape = bar.shape;\r\n\t\tif( barShape ) {\r\n\t\t\tconst plotArea = container.plotArea;\r\n\t\t\tconst plotAreaWidth = plotArea.width;\r\n\t\t\tconst plotAreaHeight = plotArea.height;\r\n\t\t\tconst padding = this._padding * this._index;\r\n\t\t\tbarShape.disallowUploadedUpdate();\r\n\t\t\tswitch( this._position ) {\r\n\t\t\tcase DChartAxisPosition.TOP:\r\n\t\t\t\tbarShape.transform.position.set( plotAreaWidth * 0.5, 0 - padding );\r\n\t\t\t\tbarShape.size.set( plotAreaWidth, 0 );\r\n\t\t\t\tbreak;\r\n\t\t\tcase DChartAxisPosition.BOTTOM:\r\n\t\t\t\tbarShape.transform.position.set( plotAreaWidth * 0.5, plotAreaHeight + padding );\r\n\t\t\t\tbarShape.size.set( plotAreaWidth, 0 );\r\n\t\t\t\tbreak;\r\n\t\t\tcase DChartAxisPosition.LEFT:\r\n\t\t\t\tbarShape.transform.position.set( 0 - padding, plotAreaHeight * 0.5 );\r\n\t\t\t\tbarShape.size.set( 0, plotAreaHeight );\r\n\t\t\t\tbreak;\r\n\t\t\tcase DChartAxisPosition.RIGHT:\r\n\t\t\t\tbarShape.transform.position.set( plotAreaWidth + padding, plotAreaHeight * 0.5 );\r\n\t\t\t\tbarShape.size.set( 0, plotAreaHeight );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tbarShape.allowUploadedUpdate();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateTicksX(\r\n\t\tdomainMin: number, domainMax: number,\r\n\t\tcoordinate: DChartCoordinate,\r\n\t\tmajorShapes: EShapeBar[], minorShapes: EShapeBar[], gridlineShapes: EShapeBar[] | undefined,\r\n\t\tshapePositionY: number,\r\n\t\ttransform: Matrix, plotAreaHeight: number\r\n\t): void {\r\n\t\tconst tick = this._tick;\r\n\t\tconst majorCount = tick.major.count;\r\n\t\tconst majorFormatter = tick.major.formatter;\r\n\t\tconst minorCountPerMajor = tick.minor.count;\r\n\t\tconst minorCount = (majorCount + 1) * minorCountPerMajor;\r\n\t\tconst majorTicks = this._majorTicks;\r\n\t\tconst minorTicks = this._minorTicks;\r\n\t\tcoordinate.ticks(\r\n\t\t\tdomainMin, domainMax,\r\n\t\t\tmajorCount, minorCountPerMajor, minorCount,\r\n\t\t\tmajorTicks, minorTicks\r\n\t\t);\r\n\r\n\t\tconst a = transform.a;\r\n\t\tconst tx = transform.tx;\r\n\t\tfor( let i = 0; i < majorCount; ++i ) {\r\n\t\t\tconst majorShape = majorShapes[ i ];\r\n\t\t\tconst imajorTick = i * 3;\r\n\t\t\tconst majorTickPosition = majorTicks[ imajorTick + 0 ];\r\n\t\t\tif( ! isNaN( majorTickPosition ) ) {\r\n\t\t\t\tconst majorTickProjectedPosition = majorTicks[ imajorTick + 1 ];\r\n\t\t\t\tconst majotTickPositionX = a * majorTickProjectedPosition + tx;\r\n\t\t\t\tconst majorTickStep = majorTicks[ imajorTick + 2 ];\r\n\r\n\t\t\t\tmajorShape.disallowUploadedUpdate();\r\n\t\t\t\tmajorShape.visible = true;\r\n\t\t\t\tmajorShape.transform.position.set( majotTickPositionX, shapePositionY );\r\n\t\t\t\tmajorShape.text.value = majorFormatter.format( majorTickPosition, majorTickStep );\r\n\t\t\t\tmajorShape.allowUploadedUpdate();\r\n\r\n\t\t\t\tif( gridlineShapes ) {\r\n\t\t\t\t\tconst gridlineShape = gridlineShapes[ i ];\r\n\t\t\t\t\tgridlineShape.disallowUploadedUpdate();\r\n\t\t\t\t\tgridlineShape.visible = true;\r\n\t\t\t\t\tgridlineShape.transform.position.set( majotTickPositionX, plotAreaHeight * 0.5 );\r\n\t\t\t\t\tgridlineShape.size.set( 0, plotAreaHeight );\r\n\t\t\t\t\tgridlineShape.allowUploadedUpdate();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tmajorShape.visible = false;\r\n\t\t\t\tif( gridlineShapes ) {\r\n\t\t\t\t\tgridlineShapes[ i ].visible = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor( let i = 0; i < minorCount; ++i ) {\r\n\t\t\tconst minorShape = minorShapes[ i ];\r\n\t\t\tconst iminorTick = i * 3;\r\n\t\t\tconst minorTickPosition = minorTicks[ iminorTick + 0 ];\r\n\t\t\tconst minorTickProjectedPosition = minorTicks[ iminorTick + 1 ];\r\n\t\t\tif( ! isNaN( minorTickPosition ) ) {\r\n\t\t\t\tminorShape.disallowUploadedUpdate();\r\n\t\t\t\tminorShape.visible = true;\r\n\t\t\t\tminorShape.transform.position.set(\r\n\t\t\t\t\ta * minorTickProjectedPosition + tx,\r\n\t\t\t\t\tshapePositionY\r\n\t\t\t\t);\r\n\t\t\t\tminorShape.allowUploadedUpdate();\r\n\t\t\t} else {\r\n\t\t\t\tminorShape.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdateTicksY(\r\n\t\tdomainMin: number, domainMax: number,\r\n\t\tcoordinate: DChartCoordinate,\r\n\t\tmajorShapes: EShapeBar[], minorShapes: EShapeBar[], gridlineShapes: EShapeBar[] | undefined,\r\n\t\tshapePositionX: number,\r\n\t\ttransform: Matrix, plotAreaWidth: number\r\n\t): void {\r\n\t\tconst tick = this._tick;\r\n\t\tconst majorCount = tick.major.count;\r\n\t\tconst majorFormatter = tick.major.formatter;\r\n\t\tconst minorCountPerMajor = tick.minor.count;\r\n\t\tconst minorCount = (majorCount + 1) * minorCountPerMajor;\r\n\t\tconst majorTicks = this._majorTicks;\r\n\t\tconst minorTicks = this._minorTicks;\r\n\t\tcoordinate.ticks(\r\n\t\t\tdomainMin, domainMax,\r\n\t\t\tmajorCount, minorCountPerMajor, minorCount,\r\n\t\t\tmajorTicks, minorTicks\r\n\t\t);\r\n\r\n\t\tconst d = transform.d;\r\n\t\tconst ty = transform.ty;\r\n\t\tfor( let i = 0; i < majorCount; ++i ) {\r\n\t\t\tconst majorShape = majorShapes[ i ];\r\n\t\t\tconst imajorTick = i * 3;\r\n\t\t\tconst majorTickPosition = majorTicks[ imajorTick + 0 ];\r\n\t\t\tif( ! isNaN( majorTickPosition ) ) {\r\n\t\t\t\tconst majorTickProjectedPosition = majorTicks[ imajorTick + 1 ];\r\n\t\t\t\tconst majotTickPositionY = d * majorTickProjectedPosition + ty;\r\n\t\t\t\tconst majorTickStep = majorTicks[ imajorTick + 2 ];\r\n\r\n\t\t\t\tmajorShape.disallowUploadedUpdate();\r\n\t\t\t\tmajorShape.visible = true;\r\n\t\t\t\tmajorShape.transform.position.set( shapePositionX, majotTickPositionY );\r\n\t\t\t\tmajorShape.text.value = majorFormatter.format( majorTickPosition, majorTickStep );\r\n\t\t\t\tmajorShape.allowUploadedUpdate();\r\n\r\n\t\t\t\tif( gridlineShapes ) {\r\n\t\t\t\t\tconst gridlineShape = gridlineShapes[ i ];\r\n\t\t\t\t\tgridlineShape.disallowUploadedUpdate();\r\n\t\t\t\t\tgridlineShape.visible = true;\r\n\t\t\t\t\tgridlineShape.transform.position.set( plotAreaWidth * 0.5, majotTickPositionY );\r\n\t\t\t\t\tgridlineShape.size.set( plotAreaWidth, 0 );\r\n\t\t\t\t\tgridlineShape.allowUploadedUpdate();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tmajorShape.visible = false;\r\n\t\t\t\tif( gridlineShapes ) {\r\n\t\t\t\t\tgridlineShapes[ i ].visible = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor( let i = 0; i < minorCount; ++i ) {\r\n\t\t\tconst minorShape = minorShapes[ i ];\r\n\t\t\tconst iminorTick = i * 3;\r\n\t\t\tconst minorTickPosition = minorTicks[ iminorTick + 0 ];\r\n\t\t\tconst minorTickProjectedPosition = minorTicks[ iminorTick + 1 ];\r\n\t\t\tif( ! isNaN( minorTickPosition ) ) {\r\n\t\t\t\tminorShape.disallowUploadedUpdate();\r\n\t\t\t\tminorShape.visible = true;\r\n\t\t\t\tminorShape.transform.position.set(\r\n\t\t\t\t\tshapePositionX,\r\n\t\t\t\t\td * minorTickProjectedPosition + ty\r\n\t\t\t\t);\r\n\t\t\t\tminorShape.allowUploadedUpdate();\r\n\t\t\t} else {\r\n\t\t\t\tminorShape.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateTicks( container: DChartAxisContainer ): void {\r\n\t\tconst tick = this._tick;\r\n\t\tconst majorShapes = tick.major.shapes;\r\n\t\tconst minorShapes = tick.minor.shapes;\r\n\t\tif( majorShapes && minorShapes ) {\r\n\t\t\tconst plotArea = container.plotArea;\r\n\t\t\tconst bounds = plotArea.getBoundsInContainer();\r\n\t\t\tconst transform = plotArea.container.transform.localTransform;\r\n\t\t\tconst gridlineShapes = tick.major.gridline.shapes;\r\n\r\n\t\t\tconst coordinateIndex = this._coordinateIndex;\r\n\t\t\tconst padding = this._padding * this._index;\r\n\t\t\tlet coordinate: DChartCoordinate | null;\r\n\t\t\tswitch( this._position ) {\r\n\t\t\tcase DChartAxisPosition.TOP:\r\n\t\t\t\tcoordinate = plotArea.coordinate.x.get( coordinateIndex );\r\n\t\t\t\tif( coordinate ) {\r\n\t\t\t\t\tconst domainFrom = coordinate.unmap(\r\n\t\t\t\t\t\tcoordinate.transform.unmap( bounds.x )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst domainTo = coordinate.unmap(\r\n\t\t\t\t\t\tcoordinate.transform.unmap( bounds.x + bounds.width )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst plotAreaHeight = plotArea.height;\r\n\t\t\t\t\tthis.updateTicksX(\r\n\t\t\t\t\t\tdomainFrom, domainTo,\r\n\t\t\t\t\t\tcoordinate,\r\n\t\t\t\t\t\tmajorShapes, minorShapes, gridlineShapes,\r\n\t\t\t\t\t\t0 - padding,\r\n\t\t\t\t\t\ttransform, plotAreaHeight\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DChartAxisPosition.BOTTOM:\r\n\t\t\t\tcoordinate = plotArea.coordinate.x.get( coordinateIndex );\r\n\t\t\t\tif( coordinate ) {\r\n\t\t\t\t\tconst domainFrom = coordinate.unmap(\r\n\t\t\t\t\t\tcoordinate.transform.unmap( bounds.x )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst domainTo = coordinate.unmap(\r\n\t\t\t\t\t\tcoordinate.transform.unmap( bounds.x + bounds.width )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst plotAreaHeight = plotArea.height;\r\n\t\t\t\t\tthis.updateTicksX(\r\n\t\t\t\t\t\tdomainFrom, domainTo,\r\n\t\t\t\t\t\tcoordinate,\r\n\t\t\t\t\t\tmajorShapes, minorShapes, gridlineShapes,\r\n\t\t\t\t\t\tplotAreaHeight + padding,\r\n\t\t\t\t\t\ttransform, plotAreaHeight\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DChartAxisPosition.LEFT:\r\n\t\t\t\tcoordinate = plotArea.coordinate.y.get( coordinateIndex );\r\n\t\t\t\tif( coordinate ) {\r\n\t\t\t\t\tconst domainFrom = coordinate.unmap(\r\n\t\t\t\t\t\tcoordinate.transform.unmap( bounds.y )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst domainTo = coordinate.unmap(\r\n\t\t\t\t\t\tcoordinate.transform.unmap( bounds.y + bounds.height )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst plotAreaWidth = plotArea.width;\r\n\t\t\t\t\tthis.updateTicksY(\r\n\t\t\t\t\t\tdomainFrom, domainTo,\r\n\t\t\t\t\t\tcoordinate,\r\n\t\t\t\t\t\tmajorShapes, minorShapes, gridlineShapes,\r\n\t\t\t\t\t\t0 - padding,\r\n\t\t\t\t\t\ttransform, plotAreaWidth\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase DChartAxisPosition.RIGHT:\r\n\t\t\t\tcoordinate = plotArea.coordinate.y.get( coordinateIndex );\r\n\t\t\t\tif( coordinate ) {\r\n\t\t\t\t\tconst domainFrom = coordinate.unmap(\r\n\t\t\t\t\t\tcoordinate.transform.unmap( bounds.y )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst domainTo = coordinate.unmap(\r\n\t\t\t\t\t\tcoordinate.transform.unmap( bounds.y + bounds.height )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst plotAreaWidth = plotArea.width;\r\n\t\t\t\t\tthis.updateTicksY(\r\n\t\t\t\t\t\tdomainFrom, domainTo,\r\n\t\t\t\t\t\tcoordinate,\r\n\t\t\t\t\t\tmajorShapes, minorShapes, gridlineShapes,\r\n\t\t\t\t\t\tplotAreaWidth + padding,\r\n\t\t\t\t\t\ttransform, plotAreaWidth\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbind( container: DChartAxisContainer, index: number ): void {\r\n\t\tthis._container = container;\r\n\t\tthis._index = index;\r\n\t\tconst tickShapeContainer = container.container;\r\n\r\n\t\t// Bar\r\n\t\tconst bar = this._bar;\r\n\t\tlet barShape = bar.shape;\r\n\t\tif( ! barShape ) {\r\n\t\t\tconst position = this._position;\r\n\t\t\tconst barPosition = ( position === DChartAxisPosition.LEFT || position === DChartAxisPosition.RIGHT ?\r\n\t\t\t\tEShapeBarPosition.TOP : EShapeBarPosition.LEFT\r\n\t\t\t);\r\n\t\t\tbarShape = new EShapeBar(\r\n\t\t\t\tbarPosition,\r\n\t\t\t\t-1,\r\n\t\t\t\tEShapeDefaults.STROKE_WIDTH,\r\n\t\t\t\tbar.style\r\n\t\t\t);\r\n\t\t\tbarShape.stroke.copy( bar.stroke );\r\n\t\t\tbarShape.text.copy( this._label );\r\n\t\t\tthis._bar.shape = barShape;\r\n\t\t}\r\n\t\tbarShape.attach( container.container );\r\n\r\n\t\t// Major tick gridline\r\n\t\tconst tick = this._tick;\r\n\t\tconst tickMajor = tick.major;\r\n\t\tconst gridline = tickMajor.gridline;\r\n\t\tlet gridlineShapes = gridline.shapes;\r\n\t\tif( ! gridlineShapes && tick.enable && gridline.enable ) {\r\n\t\t\tgridlineShapes = [];\r\n\t\t\tgridline.shapes = gridlineShapes;\r\n\t\t\tconst position = this._position;\r\n\t\t\tconst gridlinePosition = ( position === DChartAxisPosition.LEFT || position === DChartAxisPosition.RIGHT ?\r\n\t\t\t\tEShapeBarPosition.LEFT : EShapeBarPosition.TOP\r\n\t\t\t);\r\n\t\t\tconst gridlineCount = tickMajor.count;\r\n\t\t\tconst gridlineStyle = gridline.style;\r\n\t\t\tfor( let i = 0; i < gridlineCount; ++i ) {\r\n\t\t\t\tconst gridlineShape = new EShapeBar(\r\n\t\t\t\t\tgridlinePosition,\r\n\t\t\t\t\t-1,\r\n\t\t\t\t\tEShapeDefaults.STROKE_WIDTH,\r\n\t\t\t\t\tgridlineStyle\r\n\t\t\t\t);\r\n\t\t\t\tgridlineShape.stroke.copy( gridline.stroke );\r\n\t\t\t\tgridlineShapes.push( gridlineShape );\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( gridlineShapes ) {\r\n\t\t\tfor( let i = 0, imax = gridlineShapes.length; i < imax; ++i ) {\r\n\t\t\t\tgridlineShapes[ i ].attach( tickShapeContainer );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Major ticks\r\n\t\tlet tickMajorShapes = tickMajor.shapes;\r\n\t\tif( ! tickMajorShapes && tick.enable ) {\r\n\t\t\ttickMajorShapes = [];\r\n\t\t\ttickMajor.shapes = tickMajorShapes;\r\n\t\t\tconst tickMajorCount = tickMajor.count;\r\n\t\t\tconst tickMajorSize = tickMajor.size;\r\n\t\t\tconst tickMajorPosition = tickMajor.position;\r\n\t\t\tconst tickMajorStyle = tickMajor.style;\r\n\t\t\tfor( let i = 0; i < tickMajorCount; ++i ) {\r\n\t\t\t\tconst tickMajorShape = new EShapeBar(\r\n\t\t\t\t\ttickMajorPosition,\r\n\t\t\t\t\ttickMajorSize,\r\n\t\t\t\t\tEShapeDefaults.STROKE_WIDTH,\r\n\t\t\t\t\ttickMajorStyle\r\n\t\t\t\t);\r\n\t\t\t\ttickMajorShape.stroke.copy( tickMajor.stroke );\r\n\t\t\t\ttickMajorShape.text.copy( tickMajor.text );\r\n\t\t\t\ttickMajorShape.size.set( 0, 0 );\r\n\t\t\t\ttickMajorShapes.push( tickMajorShape );\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( tickMajorShapes ) {\r\n\t\t\tfor( let i = 0, imax = tickMajorShapes.length; i < imax; ++i ) {\r\n\t\t\t\ttickMajorShapes[ i ].attach( tickShapeContainer );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Minor ticks\r\n\t\tconst tickMinor = tick.minor;\r\n\t\tlet tickMinorShapes = tickMinor.shapes;\r\n\t\tif( ! tickMinorShapes && tick.enable ) {\r\n\t\t\ttickMinorShapes = [];\r\n\t\t\ttickMinor.shapes = tickMinorShapes;\r\n\t\t\tconst tickMinorCount = tickMinor.count;\r\n\t\t\tconst tickMinorSize = tickMinor.size;\r\n\t\t\tconst tickMinorPosition = tickMinor.position;\r\n\t\t\tconst tickMinorStyle = tickMinor.style;\r\n\t\t\tfor( let i = 0, imax = ( tickMajor.count + 1 ) * tickMinorCount; i < imax; ++i ) {\r\n\t\t\t\tconst tickMinorShape = new EShapeBar(\r\n\t\t\t\t\ttickMinorPosition,\r\n\t\t\t\t\ttickMinorSize,\r\n\t\t\t\t\tEShapeDefaults.STROKE_WIDTH,\r\n\t\t\t\t\ttickMinorStyle\r\n\t\t\t\t);\r\n\t\t\t\ttickMinorShape.stroke.copy( tickMinor.stroke );\r\n\t\t\t\ttickMinorShape.size.set( 0, 0 );\r\n\t\t\t\ttickMinorShapes.push( tickMinorShape );\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( tickMinorShapes ) {\r\n\t\t\tfor( let i = 0, imax = tickMinorShapes.length; i < imax; ++i ) {\r\n\t\t\t\ttickMinorShapes[ i ].attach( tickShapeContainer );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tunbind(): void {\r\n\t\t// Bar\r\n\t\tconst barShape = this._bar.shape;\r\n\t\tif( barShape ) {\r\n\t\t\tbarShape.detach();\r\n\t\t}\r\n\r\n\t\t// Major ticks\r\n\t\tconst tick = this._tick;\r\n\t\tconst tickMajorShapes = tick.major.shapes;\r\n\t\tif( tickMajorShapes ) {\r\n\t\t\tfor( let i = 0, imax = tickMajorShapes.length; i < imax; ++i ) {\r\n\t\t\t\ttickMajorShapes[ i ].detach();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Major tick gridlines\r\n\t\tconst tickMajorGridlineShapes = tick.major.gridline.shapes;\r\n\t\tif( tickMajorGridlineShapes ) {\r\n\t\t\tfor( let i = 0, imax = tickMajorGridlineShapes.length; i < imax; ++i ) {\r\n\t\t\t\ttickMajorGridlineShapes[ i ].detach();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Minor ticks\r\n\t\tconst tickMinorShapes = tick.minor.shapes;\r\n\t\tif( tickMinorShapes ) {\r\n\t\t\tfor( let i = 0, imax = tickMinorShapes.length; i < imax; ++i ) {\r\n\t\t\t\ttickMinorShapes[ i ].detach();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//\r\n\t\tthis._container = undefined;\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tconst container = this._container;\r\n\t\tif( container ) {\r\n\t\t\tthis.updateBar( container );\r\n\t\t\tthis.updateTicks( container );\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\t// Bar\r\n\t\tconst barShape = this._bar.shape;\r\n\t\tif( barShape ) {\r\n\t\t\tbarShape.destroy();\r\n\t\t}\r\n\r\n\t\t// Major ticks\r\n\t\tconst tick = this._tick;\r\n\t\tconst tickMajorShapes = tick.major.shapes;\r\n\t\tif( tickMajorShapes ) {\r\n\t\t\tfor( let i = 0, imax = tickMajorShapes.length; i < imax; ++i ) {\r\n\t\t\t\ttickMajorShapes[ i ].destroy();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Major tick gridlines\r\n\t\tconst tickMajorGridlineShapes = tick.major.gridline.shapes;\r\n\t\tif( tickMajorGridlineShapes ) {\r\n\t\t\tfor( let i = 0, imax = tickMajorGridlineShapes.length; i < imax; ++i ) {\r\n\t\t\t\ttickMajorGridlineShapes[ i ].destroy();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Minor ticks\r\n\t\tconst tickMinorShapes = tick.minor.shapes;\r\n\t\tif( tickMinorShapes ) {\r\n\t\t\tfor( let i = 0, imax = tickMinorShapes.length; i < imax; ++i ) {\r\n\t\t\t\ttickMinorShapes[ i ].destroy();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//\r\n\t\tthis._container = undefined;\r\n\t}\r\n\r\n\tprotected toTheme( options?: DChartAxisBaseOptions ): DThemeChartAxisBase {\r\n\t\treturn ( options && options.theme ) || this.getThemeDefault();\r\n\t}\r\n\r\n\tprotected getThemeDefault(): DThemeChartAxisBase {\r\n\t\treturn DThemes.getInstance().get( this.getType() );\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DChartAxisBase\";\r\n\t}\r\n}\r\n"]}