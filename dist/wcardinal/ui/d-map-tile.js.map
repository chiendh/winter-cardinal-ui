{"version":3,"file":"d-map-tile.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-map-tile.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAuB,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAE1E;IAMC,kBACC,MAAiB,EACjB,EAAU,EAAE,EAAU,EACtB,EAAU,EAAE,EAAU,EACtB,KAAa;QAEb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAM,MAAM,GAAG,IAAI,MAAM,CAAE,OAAO,CAAC,KAAK,CAAE,CAAC;QAC1C,MAAc,CAAC,MAAM,GAAG,MAAM,CAAC;QAChC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,uBAAI,GAAJ,UAAM,GAAW,EAAE,QAAoB;QACtC,IAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAE,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,CAAE,CAAC;QACvD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;QAC/B,IAAI,OAAO,CAAC,KAAK,EAAG;YACnB,QAAQ,EAAE,CAAC;SACX;aAAM;YACN,OAAO,CAAC,EAAE,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;SACjC;IACF,CAAC;IAED,4BAAS,GAAT,UAAW,EAAU,EAAE,EAAU,EAAE,KAAa;QAC/C,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAE,EAAE,EAAE,EAAE,CAAE,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC,GAAG,CAAE,KAAK,EAAE,KAAK,CAAE,CAAC;IAClC,CAAC;IAED,sBAAI,4BAAM;aAAV;YACC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;QACnC,CAAC;;;OAAA;IAED,yBAAM,GAAN,UAAQ,QAAkB;QACzB,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,MAAM,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;IAC3B,CAAC;IAED,0BAAO,GAAP;QACC,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC/B,IAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC9C,IAAI,KAAK,GAA4B,IAAI,CAAC;QAC1C,IAAI,QAAQ,YAAY,SAAS,CAAC,iBAAiB,EAAG;YACrD,IAAI,QAAQ,CAAC,MAAM,YAAY,gBAAgB,EAAG;gBACjD,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;aACxB;SACD;QACD,OAAO,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;QACxB,MAAM,CAAC,OAAO,EAAE,CAAC;QACjB,IAAI,KAAK,EAAG;YACX,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;SACf;IACF,CAAC;IACF,eAAC;AAAD,CAAC,AA/DD,IA+DC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Container, Renderer, resources, Sprite, Texture } from \"pixi.js\";\r\n\r\nexport class DMapTile {\r\n\ttx: number;\r\n\tty: number;\r\n\r\n\tprotected _sprite: Sprite;\r\n\r\n\tconstructor(\r\n\t\tparent: Container,\r\n\t\ttx: number, ty: number,\r\n\t\tpx: number, py: number,\r\n\t\tscale: number\r\n\t) {\r\n\t\tthis.tx = tx;\r\n\t\tthis.ty = ty;\r\n\t\tconst sprite = new Sprite( Texture.EMPTY );\r\n\t\t(sprite as any).parent = parent;\r\n\t\tsprite.position.set( px, py );\r\n\t\tsprite.scale.set( scale, scale );\r\n\t\tthis._sprite = sprite;\r\n\t}\r\n\r\n\tload( url: string, onLoaded: () => void ): void {\r\n\t\tconst texture = Texture.from( url, { resolution: 1 } );\r\n\t\tthis._sprite.texture = texture;\r\n\t\tif( texture.valid ) {\r\n\t\t\tonLoaded();\r\n\t\t} else {\r\n\t\t\ttexture.on( \"update\", onLoaded );\r\n\t\t}\r\n\t}\r\n\r\n\ttransform( px: number, py: number, scale: number ): void {\r\n\t\tconst sprite = this._sprite;\r\n\t\tsprite.position.set( px, py );\r\n\t\tsprite.scale.set( scale, scale );\r\n\t}\r\n\r\n\tget loaded(): boolean {\r\n\t\treturn this._sprite.texture.valid;\r\n\t}\r\n\r\n\trender( renderer: Renderer ): void {\r\n\t\tconst sprite = this._sprite;\r\n\t\tsprite.updateTransform();\r\n\t\tsprite.render( renderer );\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tconst sprite = this._sprite;\r\n\t\tconst texture = sprite.texture;\r\n\t\tconst resource = texture.baseTexture.resource;\r\n\t\tlet image: HTMLImageElement | null = null;\r\n\t\tif( resource instanceof resources.BaseImageResource ) {\r\n\t\t\tif( resource.source instanceof HTMLImageElement ) {\r\n\t\t\t\timage = resource.source;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttexture.destroy( true );\r\n\t\tsprite.destroy();\r\n\t\tif( image ) {\r\n\t\t\timage.src = \"\";\r\n\t\t}\r\n\t}\r\n}\r\n"]}