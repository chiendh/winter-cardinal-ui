{"version":3,"file":"d-diagram-canvas-base.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-diagram-canvas-base.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,OAAO,EAAgC,MAAM,YAAY,CAAC;AACnE,OAAO,EAAE,kBAAkB,EAA6B,MAAM,yBAAyB,CAAC;AACxF,OAAO,EAAE,sBAAsB,EAAE,MAAM,6BAA6B,CAAC;AAarE;IAGU,sCAAuB;IAIhC,4BAAa,OAAiB;QAA9B,YACC,kBAAO,OAAO,CAAE,SAQhB;QANA,IAAM,KAAK,GAAG,IAAI,sBAAsB,EAAE,CAAC;QAC3C,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,KAAI,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;QAEvB,IAAM,IAAI,GAAG,KAAI,CAAC,KAAK,GAAG,IAAI,kBAAkB,CAAE,KAAI,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,CAAE,CAAC;QAClF,IAAI,CAAC,IAAI,EAAE,CAAC;;IACb,CAAC;IAED,sBAAI,oCAAI;aAAR;YACC,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;;;OAAA;IAED,sBAAI,qCAAK;aAAT;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;;;OAAA;IAED,uCAAU,GAAV,UAAY,MAAgB;QAC3B,aAAa;IACd,CAAC;IAED,oCAAO,GAAP;QACC,IAAI,CAAE,IAAI,CAAC,UAAU,EAAG;YACvB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACtB,iBAAM,OAAO,WAAE,CAAC;SAChB;IACF,CAAC;IAED,oCAAO,GAAP,UAAS,MAAc,EAAE,OAAsC;QAC9D,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACpC,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAG;YAC7C,IAAM,KAAK,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC;YAC1B,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAE,MAAM,EAAE,OAAO,CAAE,CAAC;YAC/C,IAAI,KAAK,IAAI,IAAI,EAAG;gBACnB,OAAO,KAAK,CAAC;aACb;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAES,oCAAO,GAAjB;QACC,OAAO,oBAAoB,CAAC;IAC7B,CAAC;IACF,yBAAC;AAAD,CAAC,AArDD,CAGU,OAAO,GAkDhB","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { IPoint } from \"pixi.js\";\r\nimport { DCanvas, DCanvasOptions, DThemeCanvas } from \"./d-canvas\";\r\nimport { DDiagramCanvasTile, DDiagramCanvasTileOptions } from \"./d-diagram-canvas-tile\";\r\nimport { DDiagramLayerContainer } from \"./d-diagram-layer-container\";\r\nimport { EShape } from \"./shape/e-shape\";\r\n\r\nexport interface DDiagramCanvasBaseOptions<\r\n\tTHEME extends DThemeDiagramCanvasBase = DThemeDiagramCanvasBase\r\n> extends DCanvasOptions<THEME> {\r\n\ttile?: DDiagramCanvasTileOptions;\r\n}\r\n\r\nexport interface DThemeDiagramCanvasBase extends DThemeCanvas {\r\n\r\n}\r\n\r\nexport class DDiagramCanvasBase<\r\n\tTHEME extends DThemeDiagramCanvasBase = DThemeDiagramCanvasBase,\r\n\tOPTIONS extends DDiagramCanvasBaseOptions<THEME> = DDiagramCanvasBaseOptions<THEME>\r\n> extends DCanvas<THEME, OPTIONS> {\r\n\tprotected _layer: DDiagramLayerContainer;\r\n\tprotected _tile: DDiagramCanvasTile;\r\n\r\n\tconstructor( options?: OPTIONS ) {\r\n\t\tsuper( options );\r\n\r\n\t\tconst layer = new DDiagramLayerContainer();\r\n\t\tthis._layer = layer;\r\n\t\tthis.addChild( layer );\r\n\r\n\t\tconst tile = this._tile = new DDiagramCanvasTile( this, options && options.tile );\r\n\t\ttile.init();\r\n\t}\r\n\r\n\tget tile(): DDiagramCanvasTile {\r\n\t\treturn this._tile;\r\n\t}\r\n\r\n\tget layer(): DDiagramLayerContainer {\r\n\t\treturn this._layer;\r\n\t}\r\n\r\n\tinitialize( shapes: EShape[] ): void {\r\n\t\t// DO NOTHING\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tif( ! this._destroyed ) {\r\n\t\t\tthis._tile.destroy();\r\n\t\t\tthis._layer.destroy();\r\n\t\t\tsuper.destroy();\r\n\t\t}\r\n\t}\r\n\r\n\thitTest( global: IPoint, handler?: ( shape: EShape ) => boolean ): EShape | null {\r\n\t\tconst layers = this._layer.children;\r\n\t\tfor( let i = layers.length - 1; 0 <= i; --i ) {\r\n\t\t\tconst layer = layers[ i ];\r\n\t\t\tconst shape = layer.hitTest( global, handler );\r\n\t\t\tif( shape != null ) {\r\n\t\t\t\treturn shape;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DDiagramCanvasBase\";\r\n\t}\r\n}\r\n"]}