{"version":3,"file":"d-animation-fade-in.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-animation-fade-in.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DAnimationOptions } from \"./d-animation\";\r\nimport { DAnimationBase } from \"./d-animation-base\";\r\nimport { DApplicationLayerLike } from \"./d-application-layer-like\";\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBase } from \"./d-base\";\r\n\r\nexport interface DAnimationFadeInShiftOptions {\r\n\tx?: number | null;\r\n\ty?: number | null;\r\n}\r\n\r\nexport interface DAnimationFadeInOptions<TARGET> extends DAnimationOptions<TARGET> {\r\n\tshift?: DAnimationFadeInShiftOptions;\r\n}\r\n\r\nexport class DAnimationFadeIn<TARGET extends DBase = DBase> extends DAnimationBase<TARGET> {\r\n\tprotected _shiftX: number;\r\n\tprotected _shiftY: number;\r\n\r\n\tprotected _storedX: number = 0;\r\n\tprotected _storedY: number = 0;\r\n\tprotected _storedAlpha: number = 0;\r\n\tprotected _storedTime: number = 0;\r\n\tprotected _storedTarget: TARGET | null = null;\r\n\r\n\tprotected _layer: DApplicationLayerLike | null = null;\r\n\r\n\tprotected _onPrerenderBound: () => void;\r\n\tprotected _onPostrenderBound: () => void;\r\n\r\n\tconstructor( options?: DAnimationFadeInOptions<TARGET> ) {\r\n\t\tsuper( options );\r\n\r\n\t\t// Shifts\r\n\t\tif( options != null && options.shift != null ) {\r\n\t\t\tconst shift = options.shift;\r\n\t\t\tthis._shiftX = (shift.x != null ? shift.x : 0);\r\n\t\t\tthis._shiftY = (shift.y != null ? shift.y : 15);\r\n\t\t} else {\r\n\t\t\tthis._shiftX = 0;\r\n\t\t\tthis._shiftY = 15;\r\n\t\t}\r\n\r\n\t\tthis._onPrerenderBound = () => {\r\n\t\t\tthis.onPrerender();\r\n\t\t};\r\n\r\n\t\tthis._onPostrenderBound = () => {\r\n\t\t\tthis.onPostrender();\r\n\t\t};\r\n\t}\r\n\r\n\tstop(): void {\r\n\t\tthis._storedTime = 0;\r\n\t\tthis.removeEventListeners();\r\n\t\tsuper.stop();\r\n\t}\r\n\r\n\tprotected addEventListeners( target: TARGET ): void {\r\n\t\tconst layer = DApplications.getLayer( target );\r\n\t\tif( layer ) {\r\n\t\t\tthis._layer = layer;\r\n\t\t\tconst renderer = layer.renderer;\r\n\t\t\trenderer.on( \"prerender\", this._onPrerenderBound );\r\n\t\t\trenderer.on( \"postrender\", this._onPostrenderBound );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected removeEventListeners(): void {\r\n\t\tconst layer = this._layer;\r\n\t\tif( layer ) {\r\n\t\t\tthis._layer = null;\r\n\t\t\tconst renderer = layer.renderer;\r\n\t\t\trenderer.off( \"prerender\", this._onPrerenderBound );\r\n\t\t\trenderer.off( \"postrender\", this._onPostrenderBound );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onStart( isReverse: boolean ): void {\r\n\t\tconst target = this._storedTarget = this._target;\r\n\t\tif( target != null ) {\r\n\t\t\tthis._storedTime = 0;\r\n\t\t\tthis.removeEventListeners();\r\n\t\t\tthis.addEventListeners( target );\r\n\t\t\tif( ! isReverse ) {\r\n\t\t\t\ttarget.visible = true;\r\n\t\t\t}\r\n\t\t\tsuper.onStart( isReverse );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onTime( time: number, isReverse: boolean, elapsedTime: number ): void {\r\n\t\tconst target = this._storedTarget;\r\n\t\tif( target != null ) {\r\n\t\t\tconst layer = this._layer;\r\n\t\t\tif( layer ) {\r\n\t\t\t\tlayer.disallowUpdate();\r\n\t\t\t\tthis._storedTime = time;\r\n\t\t\t\tsuper.onTime( time, isReverse, elapsedTime );\r\n\t\t\t\tlayer.allowUpdate();\r\n\t\t\t\tlayer.render();\r\n\t\t\t} else {\r\n\t\t\t\tthis._storedTime = time;\r\n\t\t\t\tsuper.onTime( time, isReverse, elapsedTime );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onEnd( isReverse: boolean ): void {\r\n\t\tconst target = this._storedTarget;\r\n\t\tif( target != null ) {\r\n\t\t\tthis.removeEventListeners();\r\n\t\t\tif( isReverse ) {\r\n\t\t\t\ttarget.visible = false;\r\n\t\t\t}\r\n\t\t\tsuper.onEnd( isReverse );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onPrerender(): void {\r\n\t\tconst target = this._storedTarget;\r\n\t\tif( target != null ) {\r\n\t\t\tconst storedTime = this._storedTime;\r\n\r\n\t\t\t// Position\r\n\t\t\tconst position = target.unsafe.position;\r\n\t\t\tthis._storedX = position.x;\r\n\t\t\tthis._storedY = position.y;\r\n\t\t\tposition.set(\r\n\t\t\t\tposition.x - this._shiftX * ( 1 - storedTime ),\r\n\t\t\t\tposition.y - this._shiftY * ( 1 - storedTime )\r\n\t\t\t);\r\n\r\n\t\t\t// Alpha\r\n\t\t\tthis._storedAlpha = target.alpha;\r\n\t\t\ttarget.alpha = storedTime;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onPostrender(): void {\r\n\t\tconst target = this._storedTarget;\r\n\t\tif( target != null ) {\r\n\t\t\t// Position\r\n\t\t\tconst position = target.unsafe.position;\r\n\t\t\tposition.set(\r\n\t\t\t\tthis._storedX,\r\n\t\t\t\tthis._storedY\r\n\t\t\t);\r\n\r\n\t\t\t// Alpha\r\n\t\t\ttarget.alpha = this._storedAlpha;\r\n\t\t}\r\n\t}\r\n}\r\n"]}