{"version":3,"file":"d-button-color-gradient.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-button-color-gradient.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Texture } from \"pixi.js\";\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DButton, DButtonOnOptions, DButtonOptions, DThemeButton } from \"./d-button\";\r\nimport { DDialogColorGradient, DDialogColorGradientOptions } from \"./d-dialog-color-gradient\";\r\nimport { DPickerColorGradientData, DPickerColorGradientDataLike } from \"./d-picker-color-gradient-data\";\r\nimport { DPickerColorGradientDataView } from \"./d-picker-color-gradient-data-view\";\r\n\r\nexport interface DButtonColorGradientOnOptions extends DButtonOnOptions<DPickerColorGradientData> {\r\n\t/**\r\n\t * Triggered when a selection is changed.\r\n\t *\r\n\t * @param newValue a newly selected value\r\n\t * @param oldValue a previously selected value\r\n\t * @param self a button\r\n\t */\r\n\tchange?: ( newValue: DPickerColorGradientDataLike, oldValue: DPickerColorGradientDataLike, self: any ) => void;\r\n}\r\n\r\nexport interface DButtonColorGradientOptions<\r\n\tTHEME extends DThemeButtonColorGradient = DThemeButtonColorGradient\r\n> extends DButtonOptions<DPickerColorGradientData, THEME> {\r\n\tdialog?: DDialogColorGradientOptions;\r\n\ton?: DButtonColorGradientOnOptions;\r\n}\r\n\r\nexport interface DThemeButtonColorGradient extends DThemeButton {\r\n\tgetViewBaseTexture(): Texture | null;\r\n\tgetTextFormatter(): ( value: DPickerColorGradientData, caller: DButtonColorGradient ) => string;\r\n\tgetTextValue( state: DBaseState ): DPickerColorGradientData;\r\n\tnewTextValue(): DPickerColorGradientData;\r\n}\r\n\r\nexport class DButtonColorGradient<\r\n\tTHEME extends DThemeButtonColorGradient = DThemeButtonColorGradient,\r\n\tOPTIONS extends DButtonColorGradientOptions<THEME> = DButtonColorGradientOptions<THEME>\r\n> extends DButton<DPickerColorGradientData, THEME, OPTIONS> {\r\n\tprotected static DIALOG?: DDialogColorGradient;\r\n\tprotected _dialog?: DDialogColorGradient;\r\n\tprotected _dialogOptions?: DDialogColorGradientOptions;\r\n\tprotected _view?: DPickerColorGradientDataView;\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tconst data = this._textValueComputed;\r\n\t\tthis._dialogOptions = options && options.dialog;\r\n\r\n\t\tif( options == null || options.image == null || options.image.source === undefined ) {\r\n\t\t\tconst texture = this.theme.getViewBaseTexture();\r\n\t\t\tif( texture instanceof Texture ) {\r\n\t\t\t\tconst view = this._view = DPickerColorGradientDataView.from( 1, 10, texture );\r\n\t\t\t\tview.setRectangle( 0, 0, 0, texture.width, texture.height );\r\n\t\t\t\tview.setData( 0, data );\r\n\t\t\t\tview.update();\r\n\t\t\t\tthis.image = view;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.on( \"active\", (): void => {\r\n\t\t\tconst dialog = this.dialog;\r\n\t\t\tdialog.data.fromObject( data );\r\n\t\t\tdialog.open().then((): void => {\r\n\t\t\t\tconst newValue = dialog.data;\r\n\t\t\t\tconst oldValue = data.toObject();\r\n\t\t\t\tdata.fromObject( newValue );\r\n\t\t\t\tconst view = this._view;\r\n\t\t\t\tif( view != null ) {\r\n\t\t\t\t\tview.update();\r\n\t\t\t\t}\r\n\t\t\t\tthis.onTextChange();\r\n\t\t\t\tthis.createOrUpdateText();\r\n\t\t\t\tDApplications.update( this );\r\n\t\t\t\tthis.emit( \"change\", newValue, oldValue, this );\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tget dialog(): DDialogColorGradient {\r\n\t\tlet dialog = this._dialog;\r\n\t\tif( dialog == null ) {\r\n\t\t\tconst dialogOptions = this._dialogOptions;\r\n\t\t\tif( dialogOptions != null ) {\r\n\t\t\t\tdialog = new DDialogColorGradient( this._dialogOptions );\r\n\t\t\t} else {\r\n\t\t\t\tif( DButtonColorGradient.DIALOG == null ) {\r\n\t\t\t\t\tDButtonColorGradient.DIALOG = new DDialogColorGradient();\r\n\t\t\t\t}\r\n\t\t\t\tdialog = DButtonColorGradient.DIALOG;\r\n\t\t\t}\r\n\t\t\tthis._dialog = dialog;\r\n\t\t}\r\n\t\treturn dialog;\r\n\t}\r\n\r\n\tget value(): DPickerColorGradientData {\r\n\t\treturn this._textValueComputed;\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DButtonColorGradient\";\r\n\t}\r\n}\r\n"]}