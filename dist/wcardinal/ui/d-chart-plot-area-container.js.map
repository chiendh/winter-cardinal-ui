{"version":3,"file":"d-chart-plot-area-container.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-plot-area-container.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Rectangle, Transform } from \"pixi.js\";\r\nimport { DBasePoint } from \"./d-base-point\";\r\nimport { DViewTarget } from \"./d-view-to-target\";\r\nimport { EShapeContainer } from \"./shape/e-shape-container\";\r\n\r\nexport class DChartPlotAreaContainer extends EShapeContainer implements DViewTarget {\r\n\tprotected _position: DBasePoint;\r\n\tprotected _scale: DBasePoint;\r\n\tprotected _workRect: Rectangle;\r\n\r\n\tconstructor( onChange: () => void ) {\r\n\t\tsuper();\r\n\t\tconst transform: Transform = this.transform;\r\n\t\tthis._position = new DBasePoint( transform.position, onChange );\r\n\t\tthis._scale = new DBasePoint( transform.scale, onChange );\r\n\t\tthis._workRect = new Rectangle();\r\n\t}\r\n\r\n\tget position(): DBasePoint {\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tget scale(): DBasePoint {\r\n\t\treturn this._scale;\r\n\t}\r\n\r\n\tgetBounds( skipUpdate?: boolean, rect?: Rectangle ): Rectangle {\r\n\t\t(this as any)._lastBoundsID = -1;\r\n\t\treturn super.getBounds( skipUpdate, rect );\r\n\t}\r\n\r\n\tcalculateBounds(): void {\r\n\t\tconst bounds = this._bounds;\r\n\t\tconst work = this._work;\r\n\t\tconst rect = this._workRect;\r\n\t\tconst worldTransform = this.transform.worldTransform;\r\n\r\n\t\tlet xmin = 0;\r\n\t\tlet xmax = 0;\r\n\t\tlet ymin = 0;\r\n\t\tlet ymax = 0;\r\n\t\tconst children = this.children;\r\n\t\tif( 0 < children.length ) {\r\n\t\t\tlet isFirst = true;\r\n\t\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tif( child.visible ) {\r\n\t\t\t\t\tchild.getBoundsInternal( work, false, rect );\r\n\t\t\t\t\tif( isFirst ) {\r\n\t\t\t\t\t\tisFirst = false;\r\n\t\t\t\t\t\txmin = rect.x;\r\n\t\t\t\t\t\tymin = rect.y;\r\n\t\t\t\t\t\txmax = rect.x + rect.width;\r\n\t\t\t\t\t\tymax = rect.y + rect.height;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txmin = Math.min( xmin, rect.x );\r\n\t\t\t\t\t\tymin = Math.min( ymin, rect.y );\r\n\t\t\t\t\t\txmax = Math.max( xmax, rect.x + rect.width );\r\n\t\t\t\t\t\tymax = Math.max( ymax, rect.y + rect.height );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbounds.clear();\r\n\r\n\t\twork.set( xmin, ymin );\r\n\t\tworldTransform.apply( work, work );\r\n\t\tbounds.addPoint( work );\r\n\r\n\t\twork.set( xmax, ymax );\r\n\t\tworldTransform.apply( work, work );\r\n\t\tbounds.addPoint( work );\r\n\t}\r\n}\r\n"]}