{"version":3,"file":"d-table-category.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-category.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,kBAAkB,EAA6B,MAAM,yBAAyB,CAAC;AACxF,OAAO,EAAE,SAAS,EAAoC,MAAM,eAAe,CAAC;AAoB5E;IAGU,kCAAwD;IAGjE,wBAAa,OAAgB;eAC5B,kBAAO,OAAO,CAAE;IACjB,CAAC;IAES,6BAAI,GAAd,UAAgB,OAAgB;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;QAC/D,iBAAM,IAAI,YAAE,OAAO,CAAE,CAAC;IACvB,CAAC;IAED,qCAAY,GAAZ,UAAc,CAAS,EAAE,CAAS;QACjC,iBAAM,YAAY,YAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,wBAAwB,CAAE,CAAC,CAAE,CAAC;IACpC,CAAC;IAES,4CAAmB,GAA7B;QACC,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,IAAI,OAAO,EAAG;YACb,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,CAAC,CAAC;IACV,CAAC;IAES,gCAAO,GAAjB,UACC,MAA4B,EAC5B,WAAmB,EACnB,OAA+B,EAC/B,OAAgB;QAEhB,OAAO,IAAI,kBAAkB,CAAE,IAAI,CAAC,aAAa,CAAE,MAAM,EAAE,OAAO,CAAE,CAAE,CAAC;IACxE,CAAC;IAES,sCAAa,GAAvB,UACC,MAA4B,EAC5B,OAAgB;QAEhB,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;QAC5B,IAAI,MAAM,EAAG;YACZ,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC9B,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC5B,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;YAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;YACxC,OAAO,MAAM,CAAC;SACd;aAAM;YACN,OAAO;gBACN,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,IAAI,EAAE;oBACL,KAAK,EAAE,MAAM,CAAC,KAAK;iBACnB;aACD,CAAC;SACF;IACF,CAAC;IAES,gCAAO,GAAjB;QACC,OAAO,gBAAgB,CAAC;IACzB,CAAC;IACF,qBAAC;AAAD,CAAC,AA/DD,CAGU,SAAS,GA4DlB","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBase } from \"./d-base\";\r\nimport { DTableCategoryCell, DTableCategoryCellOptions } from \"./d-table-category-cell\";\r\nimport { DTableRow, DTableRowOptions, DThemeTableRow } from \"./d-table-row\";\r\n\r\nexport interface DTableCategoryColumn {\r\n\tlabel?: string;\r\n\tweight?: number;\r\n\twidth?: number;\r\n\toffset: number;\r\n}\r\n\r\nexport interface DTableCategoryOptions<\r\n\tTHEME extends DThemeTableCategory = DThemeTableCategory\r\n> extends DTableRowOptions<unknown, DTableCategoryColumn, THEME> {\r\n\toffset?: number;\r\n\tcell?: DTableCategoryCellOptions;\r\n}\r\n\r\nexport interface DThemeTableCategory extends DThemeTableRow {\r\n\r\n}\r\n\r\nexport class DTableCategory<\r\n\tTHEME extends DThemeTableCategory = DThemeTableCategory,\r\n\tOPTIONS extends DTableCategoryOptions<THEME> = DTableCategoryOptions<THEME>\r\n> extends DTableRow<unknown, DTableCategoryColumn, THEME, OPTIONS> {\r\n\tprotected _offset!: number;\r\n\r\n\tconstructor( options: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t}\r\n\r\n\tprotected init( options: OPTIONS ) {\r\n\t\tthis._offset = this.transform.position.y = options.offset || 0;\r\n\t\tsuper.init( options );\r\n\t}\r\n\r\n\tonParentMove( x: number, y: number ): void {\r\n\t\tsuper.onParentMove( x, y );\r\n\t\tthis.transform.position.y = -y + this._offset;\r\n\t\tthis.updateFrozenCellPosition( x );\r\n\t}\r\n\r\n\tprotected getContentPositionX(): number {\r\n\t\tconst content = this.parent;\r\n\t\tif( content ) {\r\n\t\t\treturn content.position.x;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected newCell(\r\n\t\tcolumn: DTableCategoryColumn,\r\n\t\tcolumnIndex: number,\r\n\t\tcolumns: DTableCategoryColumn[],\r\n\t\toptions: OPTIONS\r\n\t): DBase {\r\n\t\treturn new DTableCategoryCell( this.toCellOptions( column, options ) );\r\n\t}\r\n\r\n\tprotected toCellOptions(\r\n\t\tcolumn: DTableCategoryColumn,\r\n\t\toptions: OPTIONS\r\n\t): DTableCategoryCellOptions {\r\n\t\tconst result = options.cell;\r\n\t\tif( result ) {\r\n\t\t\tresult.weight = column.weight;\r\n\t\t\tresult.width = column.width;\r\n\t\t\tconst text = result.text = result.text || {};\r\n\t\t\ttext.value = text.value || column.label;\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tweight: column.weight,\r\n\t\t\t\twidth: column.width,\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tvalue: column.label\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTableCategory\";\r\n\t}\r\n}\r\n"]}