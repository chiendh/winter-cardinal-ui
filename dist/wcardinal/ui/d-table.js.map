{"version":3,"file":"d-table.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { interaction } from \"pixi.js\";\r\nimport { DDialogSelectOptions } from \"../ui/d-dialog-select\";\r\nimport { DAlignHorizontal } from \"./d-align-horizontal\";\r\nimport { DBaseOptions } from \"./d-base\";\r\nimport { DContentOptions } from \"./d-content\";\r\nimport { DCoordinateSize } from \"./d-coordinate\";\r\nimport { DDialogSelect } from \"./d-dialog-select\";\r\nimport { DMenu, DMenuOptions } from \"./d-menu\";\r\nimport { DPane, DPaneOptions, DThemePane } from \"./d-pane\";\r\nimport { DTableBody, DTableBodyOptions } from \"./d-table-body\";\r\nimport { DTableCategory, DTableCategoryColumn, DTableCategoryOptions } from \"./d-table-category\";\r\nimport {\r\n\tDTableColumn, DTableColumnEditing, DTableColumnOptions,\r\n\tDTableColumnSelecting, DTableColumnSelectingDialog, DTableColumnSelectingOptions, DTableColumnSorting,\r\n\tDTableColumnType, DTableEditable, DTableGetter, DTableRenderable, DTableSetter\r\n} from \"./d-table-column\";\r\nimport { DTableData, DTableDataOptions } from \"./d-table-data\";\r\nimport { DTableDataList, DTableDataListOptions } from \"./d-table-data-list\";\r\nimport { DTableDataSelectionType } from \"./d-table-data-selection\";\r\nimport { DTableDataComparatorFunction } from \"./d-table-data-sorter\";\r\nimport { DTableHeader, DTableHeaderOptions } from \"./d-table-header\";\r\nimport { isArray } from \"./util/is-array\";\r\nimport { isString } from \"./util/is-string\";\r\nimport { toString } from \"./util/to-string\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\n\r\nexport interface DTableOptions<\r\n\tROW,\r\n\tDATA extends DTableData<ROW> = DTableDataList<ROW>,\r\n\tTHEME extends DThemeTable = DThemeTable,\r\n\tCONTENT_OPTIONS extends DBaseOptions = DContentOptions\r\n> extends DPaneOptions<THEME, CONTENT_OPTIONS> {\r\n\tcolumns: Array<DTableColumnOptions<ROW>>;\r\n\tcategory?: DTableCategoryOptions;\r\n\theader?: DTableHeaderOptions<ROW>;\r\n\tbody?: DTableBodyOptions<ROW, DATA>;\r\n\tdata?: ROW[] | DTableDataListOptions<ROW> | DATA;\r\n}\r\n\r\nexport interface DThemeTable extends DThemePane {\r\n\r\n}\r\n\r\nconst defaultGetter = <ROW, CELL>( row: ROW, columnIndex: number ): CELL => {\r\n\treturn (row as any)[ columnIndex ];\r\n};\r\n\r\nconst defaultSetter = <ROW, CELL>( row: ROW, columnIndex: number, cell: CELL ): void => {\r\n\t(row as any)[ columnIndex ] = cell;\r\n};\r\n\r\nconst defaultGetterEmpty = <CELL>(): CELL => \"\" as any;\r\n\r\nconst defaultSetterEmpty = (): void => {\r\n\t// DO NOTHING\r\n};\r\n\r\nconst toPathGetter = <ROW, CELL>( path: string[], def?: CELL ): DTableGetter<ROW, CELL> => {\r\n\tif( path.length <= 1 ) {\r\n\t\tconst key = path[ 0 ];\r\n\t\tif( def === undefined ) {\r\n\t\t\treturn ( row: ROW ): CELL => {\r\n\t\t\t\treturn (row as any)[ key ];\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn ( row: ROW ): CELL => {\r\n\t\t\t\treturn key in row ? (row as any)[ key ] : def;\r\n\t\t\t};\r\n\t\t}\r\n\t} else {\r\n\t\tif( def === undefined ) {\r\n\t\t\treturn ( row: ROW ): CELL => {\r\n\t\t\t\tfor( let i = 0, imax = path.length - 1; i < imax; ++i ) {\r\n\t\t\t\t\trow = (row as any)[ path[ i ] ];\r\n\t\t\t\t}\r\n\t\t\t\treturn (row as any)[ path[ path.length - 1 ] ];\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn ( row: ROW ): CELL => {\r\n\t\t\t\tfor( let i = 0, imax = path.length - 1; i < imax; ++i ) {\r\n\t\t\t\t\trow = (row as any)[ path[ i ] ];\r\n\t\t\t\t}\r\n\t\t\t\tconst key = path[ path.length - 1 ];\r\n\t\t\t\treturn key in row ? (row as any)[ key ] : def;\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst toPathSetter = <ROW, CELL>( path: string[] ): DTableSetter<ROW, CELL> => {\r\n\tif( path.length <= 1 ) {\r\n\t\tconst key = path[ 0 ];\r\n\t\treturn ( row: ROW, columnIndex: number, cell: CELL ): void => {\r\n\t\t\t(row as any)[ key ] = cell;\r\n\t\t};\r\n\t} else {\r\n\t\treturn ( row: ROW, columnIndex: number, cell: CELL ): void => {\r\n\t\t\tfor( let i = 0, imax = path.length - 1; i < imax; ++i ) {\r\n\t\t\t\trow = (row as any)[ path[ i ] ] || {};\r\n\t\t\t}\r\n\t\t\t(row as any)[ path[ path.length - 1 ] ] = cell;\r\n\t\t};\r\n\t}\r\n};\r\n\r\nconst defaultEditingUnformatter = <CELL>( formatted: string ): CELL => {\r\n\treturn formatted as any;\r\n};\r\n\r\nconst toColumnAlign = <ROW, CELL>(\r\n\toptions: DTableColumnOptions<ROW, CELL>,\r\n\ttype: DTableColumnType\r\n): DAlignHorizontal => {\r\n\tif( options.align != null ) {\r\n\t\tif( isString( options.align ) ) {\r\n\t\t\treturn DAlignHorizontal[ options.align ];\r\n\t\t} else {\r\n\t\t\treturn options.align;\r\n\t\t}\r\n\t}\r\n\tswitch( type ) {\r\n\tcase DTableColumnType.TEXT:\r\n\t\treturn DAlignHorizontal.LEFT;\r\n\tcase DTableColumnType.REAL:\r\n\tcase DTableColumnType.INTEGER:\r\n\t\treturn DAlignHorizontal.RIGHT;\r\n\tcase DTableColumnType.BUTTON:\r\n\tcase DTableColumnType.INDEX:\r\n\tcase DTableColumnType.SELECT:\r\n\tcase DTableColumnType.ACTION:\r\n\tcase DTableColumnType.LINK:\r\n\t\treturn DAlignHorizontal.CENTER;\r\n\tdefault:\r\n\t\treturn DAlignHorizontal.LEFT;\r\n\t}\r\n};\r\n\r\nconst toColumnDataChecker = <ROW>( path: string[] | null ): DTableEditable<ROW> => {\r\n\tif( path != null ) {\r\n\t\tif( path.length <= 1 ) {\r\n\t\t\tconst key = path[ 0 ];\r\n\t\t\treturn ( row: ROW ): boolean => {\r\n\t\t\t\treturn key in row;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn ( row: any ): boolean => {\r\n\t\t\t\tfor( let i = 0, imax = path.length; i < imax; ++i ) {\r\n\t\t\t\t\tconst part = path[ i ];\r\n\t\t\t\t\tif( part in row ) {\r\n\t\t\t\t\t\trow = row[ part ];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn ( row: any, columnIndex: number ): boolean => {\r\n\t\treturn columnIndex < row.length;\r\n\t};\r\n};\r\n\r\nconst toColumnEditingEnable = <ROW>(\r\n\tenable: boolean | DTableEditable<ROW> | \"auto\" | \"AUTO\" | undefined,\r\n\tpath: string[] | null\r\n): boolean | DTableEditable<ROW> => {\r\n\tif( isString( enable ) ) {\r\n\t\treturn toColumnDataChecker( path );\r\n\t} else if( enable != null ) {\r\n\t\treturn enable;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\nconst toColumnEditing = <ROW, CELL>(\r\n\toptions: DTableColumnOptions<ROW, CELL>,\r\n\tpath: string[] | null\r\n): DTableColumnEditing<ROW, CELL> => {\r\n\tconst editing = options.editing;\r\n\tif( editing ) {\r\n\t\treturn {\r\n\t\t\tenable: toColumnEditingEnable( editing.enable != null ? editing.enable : options.editable, path ),\r\n\t\t\tformatter: editing.formatter || toString,\r\n\t\t\tunformatter: editing.unformatter || defaultEditingUnformatter,\r\n\t\t\tvalidator: editing.validator\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\tenable: toColumnEditingEnable( options.editable, path ),\r\n\t\tformatter: toString,\r\n\t\tunformatter: defaultEditingUnformatter\r\n\t};\r\n};\r\n\r\nconst toComparator = <ROW, CELL>(\r\n\tgetter: DTableGetter<ROW, CELL>,\r\n\tindex: number\r\n): DTableDataComparatorFunction<ROW> => {\r\n\treturn ( rowA: ROW, rowB: ROW ): number => {\r\n\t\tconst valueA = getter( rowA, index ) as any;\r\n\t\tconst valueB = getter( rowB, index ) as any;\r\n\t\treturn ( valueA < valueB ? -1 : ( valueB < valueA ? +1 : 0 ) );\r\n\t};\r\n};\r\n\r\nconst toColumnSorting = <ROW, CELL>(\r\n\tgetter: DTableGetter<ROW, CELL>,\r\n\tindex: number,\r\n\toptions: DTableColumnOptions<ROW, CELL>\r\n): DTableColumnSorting<ROW> => {\r\n\tconst sorting = options.sorting;\r\n\tif( sorting ) {\r\n\t\tconst enable = sorting.enable === true || options.sortable === true;\r\n\t\tif( enable ) {\r\n\t\t\treturn {\r\n\t\t\t\tenable,\r\n\t\t\t\tcomparator: sorting.comparator || toComparator( getter, index )\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tenable\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\tif( options.sortable === true ) {\r\n\t\treturn {\r\n\t\t\tenable: true,\r\n\t\t\tcomparator: toComparator( getter, index )\r\n\t\t};\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tenable: false\r\n\t\t};\r\n\t}\r\n};\r\n\r\nconst toColumnMenu = ( options?: DMenuOptions<unknown> | DMenu<unknown> ): DMenu<unknown> | undefined => {\r\n\tif( options == null ) {\r\n\t\treturn undefined;\r\n\t} else if( options instanceof DMenu ) {\r\n\t\treturn options;\r\n\t} else {\r\n\t\treturn new DMenu( options );\r\n\t}\r\n};\r\n\r\nconst toColumnDialog = (\r\n\toptions?: DDialogSelectOptions<unknown> | DTableColumnSelectingDialog<unknown>\r\n): DTableColumnSelectingDialog<unknown> | undefined => {\r\n\tif( options == null ) {\r\n\t\treturn undefined;\r\n\t} else if( \"open\" in options ) {\r\n\t\treturn options;\r\n\t} else {\r\n\t\treturn new DDialogSelect( options );\r\n\t}\r\n};\r\n\r\nconst defaultSelectingGetter = ( dialog: DTableColumnSelectingDialog<unknown> ): unknown => {\r\n\treturn dialog.value;\r\n};\r\n\r\nconst defaultSelectingSetter = (): void => {\r\n\t// DO NOTHING\r\n};\r\n\r\nconst toColumnSelecting = (\r\n\toptions: DTableColumnSelectingOptions<any, any, any> | undefined\r\n): DTableColumnSelecting<any, any, any> => {\r\n\tif( options ) {\r\n\t\treturn {\r\n\t\t\tgetter: options.getter || defaultSelectingGetter,\r\n\t\t\tsetter: options.setter || defaultSelectingSetter,\r\n\t\t\tmenu: toColumnMenu( options.menu ),\r\n\t\t\tmultiple: toColumnMenu( options.multiple ),\r\n\t\t\tdialog: toColumnDialog( options.dialog ),\r\n\t\t\tpromise: options.promise\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\tgetter: defaultSelectingGetter,\r\n\t\tsetter: defaultSelectingSetter\r\n\t};\r\n};\r\n\r\nconst toColumnGetter = <ROW, CELL>(\r\n\toptions: DTableColumnOptions<ROW, CELL>,\r\n\ttype: DTableColumnType,\r\n\tparts: string[] | null\r\n): DTableGetter<ROW, CELL> => {\r\n\tconst getter = options.getter;\r\n\tif( getter ) {\r\n\t\treturn getter;\r\n\t}\r\n\tswitch( type ) {\r\n\tcase DTableColumnType.ACTION:\r\n\tcase DTableColumnType.LINK:\r\n\t\treturn defaultGetterEmpty;\r\n\tdefault:\r\n\t\tif( parts == null ) {\r\n\t\t\treturn defaultGetter;\r\n\t\t} else {\r\n\t\t\treturn toPathGetter( parts, options.default );\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst toColumnSetter = <ROW, CELL>(\r\n\toptions: DTableColumnOptions<ROW, CELL>,\r\n\ttype: DTableColumnType,\r\n\tpath: string[] | null\r\n): DTableSetter<ROW, CELL> => {\r\n\tconst setter = options.setter;\r\n\tif( setter ) {\r\n\t\treturn setter;\r\n\t}\r\n\tswitch( type ) {\r\n\tcase DTableColumnType.BUTTON:\r\n\tcase DTableColumnType.ACTION:\r\n\tcase DTableColumnType.LINK:\r\n\t\treturn defaultSetterEmpty;\r\n\tdefault:\r\n\t\tif( path == null ) {\r\n\t\t\treturn defaultSetter;\r\n\t\t} else {\r\n\t\t\treturn toPathSetter( path );\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst toColumnPath = <ROW, CELL>(\r\n\toptions: DTableColumnOptions<ROW, CELL>\r\n): string[] | null => {\r\n\treturn options.path != null ? options.path.split( \".\" ) : null;\r\n};\r\n\r\nconst toColumnRenderable = <ROW, CELL>(\r\n\toptions: DTableColumnOptions<ROW, CELL>,\r\n\tpath: string[] | null\r\n): boolean | DTableRenderable<ROW> => {\r\n\tconst renderable = options.renderable;\r\n\tif( isString( renderable ) ) {\r\n\t\treturn toColumnDataChecker( path );\r\n\t} else if( renderable != null ) {\r\n\t\treturn renderable;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nconst toColumn = <ROW, CELL>(\r\n\tindex: number,\r\n\toptions: DTableColumnOptions<ROW, CELL>\r\n): DTableColumn<ROW, CELL> => {\r\n\tconst weight = ( options.weight != null ? options.weight :\r\n\t\t( options.width != null ? undefined : +1 )\r\n\t);\r\n\tconst width = ( weight != null ? undefined :\r\n\t\t( options.width != null ? options.width : 100 )\r\n\t);\r\n\tconst type = ( options.type != null ?\r\n\t\t( isString( options.type ) ? DTableColumnType[ options.type ] : options.type ) :\r\n\t\tDTableColumnType.TEXT\r\n\t);\r\n\tconst align = toColumnAlign( options, type );\r\n\tconst label = options.label || \"\";\r\n\tconst path = toColumnPath( options );\r\n\tconst getter = toColumnGetter( options, type, path );\r\n\tconst setter = toColumnSetter( options, type, path );\r\n\treturn {\r\n\t\tweight,\r\n\t\twidth,\r\n\t\ttype,\r\n\t\tlabel,\r\n\t\tgetter,\r\n\t\tsetter,\r\n\t\tformatter: options.formatter,\r\n\t\trenderable: toColumnRenderable( options, path ),\r\n\t\talign,\r\n\r\n\t\tediting: toColumnEditing( options, path ),\r\n\t\tsorting: toColumnSorting( getter, index, options ),\r\n\r\n\t\theader: options.header,\r\n\t\tbody: options.body,\r\n\r\n\t\tselecting: toColumnSelecting( options.selecting ),\r\n\r\n\t\tcategory: options.category,\r\n\t\tfrozen: options.frozen,\r\n\t\toffset: 0.0,\r\n\r\n\t\tlink: options.link\r\n\t};\r\n};\r\n\r\nconst toColumns = <ROW, CELL>(\r\n\toptions: Array<DTableColumnOptions<ROW, CELL>>\r\n): Array<DTableColumn<ROW, CELL>> => {\r\n\tconst result = [];\r\n\tfor( let i = 0, imax = options.length; i < imax; ++i ) {\r\n\t\tresult.push( toColumn( i, options[ i ] ) );\r\n\t}\r\n\treturn result;\r\n};\r\n\r\nconst toFrozen = <ROW, CELL>(\r\n\tcolumns: Array<DTableColumn<ROW, CELL>>\r\n): number => {\r\n\tfor( let i = columns.length - 1; 0 <= i; --i ) {\r\n\t\tif( columns[ i ].frozen === true ) {\r\n\t\t\treturn i + 1;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n};\r\n\r\nexport class DTable<\r\n\tROW,\r\n\tDATA extends DTableData<ROW> = DTableDataList<ROW>,\r\n\tTHEME extends DThemeTable = DThemeTable,\r\n\tCONTENT_OPTIONS extends DBaseOptions = DContentOptions,\r\n\tOPTIONS extends DTableOptions<ROW, DATA, THEME, CONTENT_OPTIONS> = DTableOptions<ROW, DATA, THEME, CONTENT_OPTIONS>\r\n>  extends DPane<THEME, CONTENT_OPTIONS, OPTIONS> {\r\n\tprotected _categories!: DTableCategory[];\r\n\tprotected _header!: DTableHeader<ROW> | null;\r\n\tprotected _body!: DTableBody<ROW, DATA>;\r\n\r\n\tconstructor( options: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t}\r\n\r\n\tprotected init( options: OPTIONS ) {\r\n\t\t// Column\r\n\t\tconst columns = toColumns( options.columns );\r\n\r\n\t\t// Frozen\r\n\t\tconst frozen = toFrozen( columns );\r\n\r\n\t\t// Categories\r\n\t\tconst categories = this.newCategories( options, columns, frozen );\r\n\t\tthis._categories = categories;\r\n\r\n\t\t// Header\r\n\t\tlet headerOffset = 0;\r\n\t\tfor( let i = 0, imax = categories.length; i < imax; ++i ) {\r\n\t\t\theaderOffset += categories[ i ].height;\r\n\t\t}\r\n\t\tconst header = this.newHeader( options, columns, frozen, headerOffset );\r\n\t\tthis._header = header;\r\n\r\n\t\t// Body\r\n\t\tconst bodyOffset = headerOffset + ((header && header.height) || 0);\r\n\t\tconst body = this.newBody( options, columns, frozen, bodyOffset );\r\n\t\tthis._body = body;\r\n\r\n\t\t// Super\r\n\t\tsuper.init( options );\r\n\r\n\t\t// Content\r\n\t\tconst content = this._content;\r\n\t\tcontent.setWidth( this.toContentWidth( options ) );\r\n\t\tcontent.addChild( body );\r\n\t\tif( header ) {\r\n\t\t\tcontent.addChild( header );\r\n\t\t}\r\n\t\tfor( let i = categories.length - 1; 0 <= i; --i ) {\r\n\t\t\tcontent.addChild( categories[ i ] );\r\n\t\t}\r\n\t\tcontent.on( \"move\", (): void => {\r\n\t\t\tbody.update();\r\n\t\t});\r\n\t\tcontent.on( \"resize\", (): void => {\r\n\t\t\tbody.update();\r\n\t\t});\r\n\t\tif( body.data.selection.type !== DTableDataSelectionType.NONE ) {\r\n\t\t\tUtilPointerEvent.onClick( this, ( e: interaction.InteractionEvent ): void => {\r\n\t\t\t\tbody.onRowClicked( e );\r\n\t\t\t});\r\n\t\t}\r\n\t\tbody.update();\r\n\t}\r\n\r\n\tonResize( newWidth: number, newHeight: number, oldWidth: number, oldHeight: number ): void {\r\n\t\tconst body = this._body;\r\n\t\tbody.lock();\r\n\t\tsuper.onResize( newWidth, newHeight, oldWidth, oldHeight );\r\n\t\tbody.update();\r\n\t\tbody.unlock( true );\r\n\t}\r\n\r\n\tprotected getCategoryCount( columns: Array<DTableColumn<ROW>> ): number {\r\n\t\tlet result = 0;\r\n\t\tfor( let i = 0, imax = columns.length; i < imax; ++i ) {\r\n\t\t\tconst category = columns[ i ].category;\r\n\t\t\tif( category != null ) {\r\n\t\t\t\tconst count = isString( category ) ? 1 : category.length;\r\n\t\t\t\tresult = Math.max( result, count );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected toCategoryLabel( index: number, category: string | string[] | undefined ): string | undefined {\r\n\t\tif( category ) {\r\n\t\t\tif( isString( category ) ) {\r\n\t\t\t\tif( index === 0 ) {\r\n\t\t\t\t\treturn category;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif( index < category.length ) {\r\n\t\t\t\t\treturn category[ index ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tprotected isSameCategory(\r\n\t\tindex: number,\r\n\t\ta: string | string[] | undefined,\r\n\t\tb: string | string[] | undefined\r\n\t): boolean {\r\n\t\tif( a != null ) {\r\n\t\t\tif( b != null ) {\r\n\t\t\t\tif( isString( a ) ) {\r\n\t\t\t\t\tif( isString( b ) ) {\r\n\t\t\t\t\t\tif( 0 < index ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn a === b;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif( 0 < index ) {\r\n\t\t\t\t\t\t\treturn b.length <= index;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn b.length === 1 && a === b[ 0 ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif( isString( b ) ) {\r\n\t\t\t\t\t\tif( 0 < index ) {\r\n\t\t\t\t\t\t\treturn a.length <= index;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn a.length === 1 && a[ 0 ] === b;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif( a.length <= index && b.length <= index ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t} else if( b.length === a.length ) {\r\n\t\t\t\t\t\t\tfor( let i = index, imax = a.length; i < imax; ++i ) {\r\n\t\t\t\t\t\t\t\tif( a[ i ] !== b[ i ] ) {\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif( isString( a ) ) {\r\n\t\t\t\t\tif( 0 < index ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif( a.length <= index ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( b != null ) {\r\n\t\t\t\tif( isString( b ) ) {\r\n\t\t\t\t\tif( 0 < index ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif( b.length <= index ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toCategoryColumns(\r\n\t\tindex: number,\r\n\t\tcolumns: Array<DTableColumn<ROW>>,\r\n\t\tfrozen: number\r\n\t): DTableCategoryColumn[] {\r\n\t\tconst result: DTableCategoryColumn[] = [];\r\n\t\tlet tcolumn: DTableColumn<ROW> | null = null;\r\n\t\tlet ccolumn: DTableCategoryColumn | null = null;\r\n\t\tfor( let i = 0, imax = columns.length; i < imax; ++i ) {\r\n\t\t\tconst column = columns[ i ];\r\n\t\t\tif( i !== frozen && ccolumn && tcolumn && this.isSameCategory( index, tcolumn.category, column.category ) ) {\r\n\t\t\t\tif( ccolumn.weight != null && column.weight != null ) {\r\n\t\t\t\t\tccolumn.weight += column.weight;\r\n\t\t\t\t} else if( ccolumn.width != null && column.width != null ) {\r\n\t\t\t\t\tccolumn.width += column.width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttcolumn = column;\r\n\t\t\t\t\tccolumn = {\r\n\t\t\t\t\t\tlabel: this.toCategoryLabel( index, column.category ),\r\n\t\t\t\t\t\tweight: column.weight,\r\n\t\t\t\t\t\twidth: column.width,\r\n\t\t\t\t\t\toffset: 0.0\r\n\t\t\t\t\t};\r\n\t\t\t\t\tresult.push( ccolumn );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttcolumn = column;\r\n\t\t\t\tccolumn = {\r\n\t\t\t\t\tlabel: this.toCategoryLabel( index, column.category ),\r\n\t\t\t\t\tweight: column.weight,\r\n\t\t\t\t\twidth: column.width,\r\n\t\t\t\t\toffset: 0.0\r\n\t\t\t\t};\r\n\t\t\t\tresult.push( ccolumn );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected toCategoryOptions(\r\n\t\tindex: number,\r\n\t\toptions: DTableCategoryOptions | undefined,\r\n\t\tcolumns: Array<DTableColumn<ROW>>,\r\n\t\tfrozen: number,\r\n\t\toffset: number\r\n\t): DTableCategoryOptions {\r\n\t\tif( options ) {\r\n\t\t\tif( options.columns === undefined ) {\r\n\t\t\t\toptions.columns = this.toCategoryColumns( index, columns, frozen );\r\n\t\t\t}\r\n\t\t\tif( options.frozen == null ) {\r\n\t\t\t\toptions.frozen = frozen;\r\n\t\t\t}\r\n\t\t\tif( options.offset == null ) {\r\n\t\t\t\toptions.offset = offset;\r\n\t\t\t}\r\n\t\t\treturn options;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tcolumns: this.toCategoryColumns( index, columns, frozen ),\r\n\t\t\tfrozen,\r\n\t\t\toffset\r\n\t\t};\r\n\t}\r\n\r\n\tprotected newCategories( options: OPTIONS, columns: Array<DTableColumn<ROW>>, frozen: number ): DTableCategory[] {\r\n\t\tconst count = this.getCategoryCount( columns );\r\n\t\tconst result: DTableCategory[] = [];\r\n\t\tlet offset: number = 0;\r\n\t\tfor( let i = count - 1; 0 <= i; --i ) {\r\n\t\t\tconst category = new DTableCategory( this.toCategoryOptions( i, options.category, columns, frozen, offset ) );\r\n\t\t\tresult.push( category );\r\n\t\t\toffset += category.height;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tonDblClick( e: MouseEvent | TouchEvent, interactionManager: interaction.InteractionManager ): boolean {\r\n\t\tconst result = this._body.onDblClick( e, interactionManager );\r\n\t\treturn super.onDblClick( e, interactionManager ) || result;\r\n\t}\r\n\r\n\tprotected getScrollBarOffsetVerticalStart( size: number ): number {\r\n\t\treturn size * 0.5 + this._body.position.y;\r\n\t}\r\n\r\n\tprotected toContentWidth( options: OPTIONS ): DCoordinateSize {\r\n\t\tlet columnWidthTotal = 0;\r\n\t\tconst columns = options.columns;\r\n\t\tif( columns ) {\r\n\t\t\tfor( let i = 0, imax = columns.length; i < imax; ++i ) {\r\n\t\t\t\tconst column = columns[ i ];\r\n\t\t\t\tconst columnWidth = column.width;\r\n\t\t\t\tif( columnWidth != null ) {\r\n\t\t\t\t\tcolumnWidthTotal += columnWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif( 0 < columnWidthTotal ) {\r\n\t\t\treturn ( p: number ): number => {\r\n\t\t\t\treturn Math.max( p, columnWidthTotal );\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn \"100%\";\r\n\t}\r\n\r\n\tprotected hasHeader( options: OPTIONS ): boolean {\r\n\t\tconst columns = options.columns;\r\n\t\tfor( let i = 0, imax = columns.length; i < imax; ++i ) {\r\n\t\t\tif( columns[ i ].label != null ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected newHeader(\r\n\t\toptions: OPTIONS,\r\n\t\tcolumns: Array<DTableColumn<ROW>>,\r\n\t\tfrozen: number,\r\n\t\toffset: number\r\n\t): DTableHeader<ROW> | null {\r\n\t\tif( this.hasHeader( options ) ) {\r\n\t\t\treturn new DTableHeader( this.toHeaderOptions( options.header, columns, frozen, offset ) );\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprotected toHeaderOptions(\r\n\t\toptions: DTableHeaderOptions<ROW> | undefined,\r\n\t\tcolumns: Array<DTableColumn<ROW>>,\r\n\t\tfrozen: number,\r\n\t\toffset: number\r\n\t): DTableHeaderOptions<ROW> {\r\n\t\tif( options ) {\r\n\t\t\tif( options.columns === undefined ) {\r\n\t\t\t\toptions.columns = columns;\r\n\t\t\t}\r\n\t\t\tif( options.frozen == null ) {\r\n\t\t\t\toptions.frozen = frozen;\r\n\t\t\t}\r\n\t\t\tif( options.offset === undefined ) {\r\n\t\t\t\toptions.offset = offset;\r\n\t\t\t}\r\n\t\t\tif( options.table === undefined ) {\r\n\t\t\t\toptions.table = this;\r\n\t\t\t}\r\n\t\t\treturn options;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tcolumns,\r\n\t\t\tfrozen,\r\n\t\t\toffset,\r\n\t\t\ttable: this\r\n\t\t};\r\n\t}\r\n\r\n\tprotected newBody(\r\n\t\toptions: OPTIONS,\r\n\t\tcolumns: Array<DTableColumn<ROW>>,\r\n\t\tfrozen: number,\r\n\t\toffset: number\r\n\t): DTableBody<ROW, DATA> {\r\n\t\treturn new DTableBody<ROW, DATA>(\r\n\t\t\tthis.toBodyOptions( options.body, columns, frozen, offset, options.data )\r\n\t\t);\r\n\t}\r\n\r\n\tprotected toBodyOptions(\r\n\t\toptions: DTableBodyOptions<ROW, DATA> | undefined,\r\n\t\tcolumns: Array<DTableColumn<ROW>>,\r\n\t\tfrozen: number,\r\n\t\toffset: number,\r\n\t\tdata: ROW[] | DTableDataOptions<ROW> | DATA | undefined\r\n\t): DTableBodyOptions<ROW, DATA> {\r\n\t\tif( options != null ) {\r\n\t\t\tif( options.columns === undefined ) {\r\n\t\t\t\toptions.columns = columns;\r\n\t\t\t}\r\n\t\t\tif( options.frozen == null ) {\r\n\t\t\t\toptions.frozen = frozen;\r\n\t\t\t}\r\n\t\t\tif( options.offset === undefined ) {\r\n\t\t\t\toptions.offset = offset;\r\n\t\t\t}\r\n\t\t\tif( options.data === undefined && data !== undefined ) {\r\n\t\t\t\tif( isArray( data ) ) {\r\n\t\t\t\t\toptions.data = {\r\n\t\t\t\t\t\trows: data\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\toptions.data = data;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif( options.height === undefined && options.weight === undefined ) {\r\n\t\t\t\toptions.weight = 1;\r\n\t\t\t}\r\n\t\t\treturn options;\r\n\t\t}\r\n\t\tif( isArray( data ) ) {\r\n\t\t\treturn {\r\n\t\t\t\tcolumns,\r\n\t\t\t\tfrozen,\r\n\t\t\t\toffset,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\trows: data\r\n\t\t\t\t},\r\n\t\t\t\tweight: 1\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tcolumns,\r\n\t\t\t\tfrozen,\r\n\t\t\t\toffset,\r\n\t\t\t\tdata,\r\n\t\t\t\tweight: 1\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTable\";\r\n\t}\r\n\r\n\tget categories(): DTableCategory[] {\r\n\t\treturn this._categories;\r\n\t}\r\n\r\n\tget header(): DTableHeader<ROW> | null {\r\n\t\treturn this._header;\r\n\t}\r\n\r\n\tget body(): DTableBody<ROW, DATA> {\r\n\t\treturn this._body;\r\n\t}\r\n\r\n\tget data(): DATA {\r\n\t\treturn this._body.data;\r\n\t}\r\n}\r\n"]}