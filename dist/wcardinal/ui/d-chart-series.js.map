{"version":3,"file":"d-chart-series.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-chart-series.ts"],"names":[],"mappings":"AAAA;;;GAGG;AASH;IAYC;QACC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACnB,CAAC;IAED,wCAAQ,GAAR,UAAU,KAA4B;QACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC/B,OAAO,IAAI,CAAC;IACb,CAAC;IACF,4BAAC;AAAD,CAAC,AAtCD,IAsCC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { IPoint } from \"pixi.js\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DChartRegionImmutable } from \"./d-chart-region\";\r\nimport { DChartSeriesContainer } from \"./d-chart-series-container\";\r\nimport { DChartSeriesCoordinateContainer } from \"./d-chart-series-coordinate\";\r\nimport { EShape } from \"./shape/e-shape\";\r\n\r\nexport class DChartSeriesHitResult {\r\n\tshape: EShape | null;\r\n\tx: number;\r\n\ty: number;\r\n\tp0x: number;\r\n\tp0y: number;\r\n\tp1x: number;\r\n\tp1y: number;\r\n\tindex: number;\r\n\tt: number;\r\n\tdistance: number;\r\n\r\n\tconstructor() {\r\n\t\tthis.shape = null;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.p0x = 0;\r\n\t\tthis.p0y = 0;\r\n\t\tthis.p1x = 0;\r\n\t\tthis.p1y = 0;\r\n\t\tthis.index = 0;\r\n\t\tthis.t = 0;\r\n\t\tthis.distance = 0;\r\n\t}\r\n\r\n\tcopyFrom( other: DChartSeriesHitResult ): this {\r\n\t\tthis.shape = other.shape;\r\n\t\tthis.x = other.x;\r\n\t\tthis.y = other.y;\r\n\t\tthis.p0x = other.p0x;\r\n\t\tthis.p0y = other.p0y;\r\n\t\tthis.p1x = other.p1x;\r\n\t\tthis.p1y = other.p1y;\r\n\t\tthis.index = other.index;\r\n\t\tthis.t = other.t;\r\n\t\tthis.distance = other.distance;\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nexport interface DChartSeries {\r\n\treadonly domain: DChartRegionImmutable;\r\n\treadonly range: DChartRegionImmutable;\r\n\treadonly shape: EShape | null;\r\n\treadonly container: DChartSeriesContainer | null;\r\n\treadonly coordinate: DChartSeriesCoordinateContainer;\r\n\treadonly index: number;\r\n\r\n\tbind( container: DChartSeriesContainer, index: number ): void;\r\n\tunbind(): void;\r\n\r\n\ttoDirty(): void;\r\n\r\n\tupdate(): void;\r\n\tdestroy(): void;\r\n\r\n\thitTest( global: IPoint ): boolean;\r\n\tcalcHitPoint( global: IPoint, result: DChartSeriesHitResult ): boolean;\r\n\r\n\tsetState( state: DBaseState, isOn: boolean ): void;\r\n}\r\n"]}