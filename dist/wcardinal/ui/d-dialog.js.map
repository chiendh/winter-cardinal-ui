{"version":3,"file":"d-dialog.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-dialog.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Point } from \"pixi.js\";\r\nimport { DAnimation } from \"./d-animation\";\r\nimport { DAnimationFadeIn } from \"./d-animation-fade-in\";\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBase, DBaseOptions, DThemeBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DFocusable } from \"./d-controller-focus\";\r\nimport { DDialogCloseOn } from \"./d-dialog-close-on\";\r\nimport { UtilClickOutside } from \"./util/util-click-outside\";\r\nimport { UtilKeyboardEvent } from \"./util/util-keyboard-event\";\r\nimport { UtilOverlay } from \"./util/util-overlay\";\r\n\r\nexport interface DDialogOptions<THEME extends DThemeDialog = DThemeDialog> extends DBaseOptions<THEME> {\r\n\tcloseOn?: DDialogCloseOn;\r\n\tanimation?: DAnimation<DBase>;\r\n}\r\n\r\nexport interface DThemeDialog extends DThemeBase {\r\n\tcloseOn(): DDialogCloseOn;\r\n}\r\n\r\n/**\r\n * A base class for dialogs.\r\n *\r\n * If multiple application instances are there, better to set\r\n * the constructor option `parent` to an `application.stage`\r\n * so that the dialog picks a right application.\r\n *\r\n * By default, the dialog assumes the last created application is\r\n * the one it belongs to at the time when it is created.\r\n */\r\nexport class DDialog<\r\n\tTHEME extends DThemeDialog = DThemeDialog,\r\n\tOPTIONS extends DDialogOptions<THEME> = DDialogOptions<THEME>\r\n> extends DBase<THEME, OPTIONS> {\r\n\tprotected _animation!: DAnimation<DBase>;\r\n\tprotected _closeOn!: DDialogCloseOn;\r\n\tprotected _focusable!: DFocusable | null;\r\n\tprotected _isOpened!: boolean;\r\n\tprotected _overlay!: UtilOverlay;\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tthis.visible = false;\r\n\t\tthis.setState( DBaseState.FOCUS_ROOT, true );\r\n\t\tthis._focusable = null;\r\n\t\tthis._isOpened = false;\r\n\r\n\t\t// Animation\r\n\t\tconst animation = this._animation = ( options && options.animation ?\r\n\t\t\toptions.animation : new DAnimationFadeIn() );\r\n\t\tanimation.target = this;\r\n\t\tanimation.on( \"end\", ( isReverse: boolean ): void => {\r\n\t\t\tthis.onAnimationEnd( isReverse );\r\n\t\t});\r\n\r\n\t\t// Close-on\r\n\t\tconst closeOn = this._closeOn = ( options && options.closeOn != null ?\r\n\t\t\toptions.closeOn : this.theme.closeOn()\r\n\t\t);\r\n\t\tif( closeOn & DDialogCloseOn.CLICK_OUTSIDE ) {\r\n\t\t\tUtilClickOutside.apply( this, (): void => {\r\n\t\t\t\tthis.onCloseOn();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._overlay = new UtilOverlay();\r\n\t}\r\n\r\n\tprotected onAnimationEnd( isReverse: boolean ) {\r\n\t\tif( isReverse ) {\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif( parent ) {\r\n\t\t\t\tparent.removeChild( this );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst layer = DApplications.getLayer( this );\r\n\t\t\tif( layer ) {\r\n\t\t\t\tconst focusController = layer.getFocusController();\r\n\t\t\t\tthis._focusable = focusController.getFocused();\r\n\t\t\t\tconst firstFocusable = focusController.findFocusable( this, false, true, true );\r\n\t\t\t\tfocusController.setFocused( firstFocusable || this, true, true );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\topen(): void {\r\n\t\tif( ! this._isOpened ) {\r\n\t\t\tconst layer = this._overlay.pick( this );\r\n\t\t\tthis._isOpened = true;\r\n\t\t\tlayer.stage.addChild( this );\r\n\t\t\tthis.onOpen();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onOpen(): void {\r\n\t\tthis.emit( \"open\", this );\r\n\r\n\t\t// Animation\r\n\t\tthis._animation.start();\r\n\t}\r\n\r\n\tisOpened(): boolean {\r\n\t\treturn this._isOpened;\r\n\t}\r\n\r\n\tclose() {\r\n\t\tif( this._isOpened ) {\r\n\t\t\tthis._isOpened = false;\r\n\t\t\tthis.onClose();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onClose(): void {\r\n\t\t// Focus\r\n\t\tconst focusable = this._focusable;\r\n\t\tif( focusable != null ) {\r\n\t\t\tthis._focusable = null;\r\n\t\t\tconst layer = DApplications.getLayer( this );\r\n\t\t\tif( layer ) {\r\n\t\t\t\tlayer.getFocusController().setFocused( focusable, true, false );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Animation\r\n\t\tthis._animation.start( true );\r\n\r\n\t\tthis.emit( \"close\", this );\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DDialog\";\r\n\t}\r\n\r\n\tonKeyDown( e: KeyboardEvent ): boolean {\r\n\t\tconst closeOn = this._closeOn;\r\n\t\tif( closeOn & DDialogCloseOn.ESC ) {\r\n\t\t\tif( UtilKeyboardEvent.isCancelKey( e ) ) {\r\n\t\t\t\tthis.onCloseOn();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn super.onKeyDown( e );\r\n\t}\r\n\r\n\tprotected onCloseOn(): void {\r\n\t\tthis.close();\r\n\t}\r\n\r\n\tprotected containsGlobalPoint( point: Point ): boolean {\r\n\t\treturn true;\r\n\t}\r\n}\r\n"]}