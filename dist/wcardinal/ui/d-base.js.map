{"version":3,"file":"d-base.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-base.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Container, DisplayObject, interaction, Point, Rectangle, Renderer, Texture, Transform } from \"pixi.js\";\r\nimport InteractionEvent = interaction.InteractionEvent;\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBackgroundStateAware } from \"./d-background\";\r\nimport { DBaseBackground } from \"./d-base-background\";\r\nimport { DBaseBorder } from \"./d-base-border\";\r\nimport { DBaseCorner } from \"./d-base-corner\";\r\nimport { DBaseInteractive } from \"./d-base-interactive\";\r\nimport { DBaseOutline } from \"./d-base-outline\";\r\nimport { DBasePadding } from \"./d-base-padding\";\r\nimport { DBasePoint } from \"./d-base-point\";\r\nimport { DBaseReflowable } from \"./d-base-reflowable\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DBaseStates } from \"./d-base-states\";\r\nimport { DBorderStateAware } from \"./d-border\";\r\nimport { DBorderMask } from \"./d-border-mask\";\r\nimport { DCoordinatePosition, DCoordinateSize } from \"./d-coordinate\";\r\nimport { DCorner } from \"./d-corner\";\r\nimport { DCornerMask } from \"./d-corner-mask\";\r\nimport { DThemeFont } from \"./d-font\";\r\nimport { DLayoutClearType } from \"./d-layout-clear-type\";\r\nimport { DOutline } from \"./d-outline\";\r\nimport { DPadding } from \"./d-padding\";\r\nimport { DScalarFunctions } from \"./d-scalar-functions\";\r\nimport { DScalarSet } from \"./d-scalar-set\";\r\nimport { DShadow } from \"./d-shadow\";\r\nimport { DStateAwareOrValueMightBe } from \"./d-state-aware\";\r\nimport { DThemes } from \"./theme/d-themes\";\r\nimport { isFunction } from \"./util/is-function\";\r\nimport { isNumber } from \"./util/is-number\";\r\nimport { isString } from \"./util/is-string\";\r\nimport { UtilKeyboardEvent, UtilKeyboardEventShortcut } from \"./util/util-keyboard-event\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\nimport { UtilWheelEventDeltas } from \"./util/util-wheel-event\";\r\n\r\n/**\r\n * {@link DBase} padding options.\r\n */\r\nexport interface DBasePaddingOptions {\r\n\t/** A top padding */\r\n\ttop?: number;\r\n\r\n\t/** A right padding */\r\n\tright?: number;\r\n\r\n\t/** A bottom padding */\r\n\tbottom?: number;\r\n\r\n\t/** A left padding */\r\n\tleft?: number;\r\n}\r\n\r\n/**\r\n * {@link DBase} corner options.\r\n */\r\nexport interface DBaseCornerOptions {\r\n\t/** A radius */\r\n\tradius?: number;\r\n\r\n\t/** Masked corners get unrounded. */\r\n\tmask?: (keyof typeof DCornerMask) | DCornerMask;\r\n}\r\n\r\n/**\r\n * Mappings of event names and event handlers.\r\n */\r\nexport interface DBaseOnOptions {\r\n\t[name: string]: Function | undefined;\r\n\r\n\t/**\r\n\t * Triggered when an initialization is finished.\r\n\t *\r\n\t * @param self an initialized instance\r\n\t */\r\n\tinit?: ( self: any ) => void;\r\n}\r\n\r\n/**\r\n * {@link DBase} background options.\r\n */\r\nexport interface DBaseBackgroundOptions {\r\n\t/**\r\n\t * A color code or a function returning a color code.\r\n\t * If a computed value is undefined, falls back to the theme color.\r\n\t * If a computed value is null, a background is not rendered.\r\n\t */\r\n\tcolor?: DStateAwareOrValueMightBe<number | null>;\r\n\r\n\t/**\r\n\t * An alpha or a function returning an alpha.\r\n\t * If a computed value is undefined, falls back to an background alpha of a theme.\r\n\t */\r\n\talpha?: DStateAwareOrValueMightBe<number>;\r\n}\r\n\r\n/**\r\n * {@link DBase} border options.\r\n */\r\nexport interface DBaseBorderOptions {\r\n\t/**\r\n\t * A color code or a function returning a color code.\r\n\t * If a computed value is undefined, falls back to the theme color.\r\n\t * If a computed value is null, a background is not rendered.\r\n\t */\r\n\tcolor?: DStateAwareOrValueMightBe<number | null>;\r\n\r\n\t/**\r\n\t * An alpha or a function returning an alpha.\r\n\t * If a computed value is undefined, falls back to a border alpha of a theme.\r\n\t */\r\n\talpha?: DStateAwareOrValueMightBe<number>;\r\n\r\n\t/**\r\n\t * A width or a function returning a width.\r\n\t * If a computed value is undefined, falls back to a border width of a theme.\r\n\t */\r\n\twidth?: DStateAwareOrValueMightBe<number>;\r\n\r\n\t/**\r\n\t * An align or a function returning an align.\r\n\t * If a computed value is undefined, falls back to a border align of a theme.\r\n\t * If an align is 0, a border is rendered completely inside of a {@link DBase}.\r\n\t * If an align is 1, a border is rendered completely outside of a {@link DBase}.\r\n\t */\r\n\talign?: DStateAwareOrValueMightBe<number>;\r\n\r\n\t/** Masked borders get removed. */\r\n\tmask?: DStateAwareOrValueMightBe<DBorderMask> | (keyof typeof DBorderMask);\r\n}\r\n\r\n/**\r\n * {@link DBase} outline optons.\r\n */\r\nexport interface DBaseOutlineOptions {\r\n\t/**\r\n\t * A color code or a function returning a color code.\r\n\t * If a computed value is undefined, falls back to the theme color.\r\n\t * If a computed value is null, a background is not rendered.\r\n\t */\r\n\tcolor?: DStateAwareOrValueMightBe<number | null>;\r\n\r\n\t/**\r\n\t * An alpha or a function returning an alpha.\r\n\t * If a computed value is undefined, falls back to an outline alpha of a theme.\r\n\t */\r\n\talpha?: DStateAwareOrValueMightBe<number>;\r\n\r\n\t/**\r\n\t * A width or a function returning a width.\r\n\t * If a computed value is undefined, falls back to an outline width of a theme.\r\n\t */\r\n\twidth?: DStateAwareOrValueMightBe<number>;\r\n\r\n\t/**\r\n\t * An offset or a function returning an offset.\r\n\t * If a computed value is undefined, falls back to an outline align of a theme.\r\n\t * A outline moves to outside when an offset gets larger.\r\n\t */\r\n\toffset?: DStateAwareOrValueMightBe<number>;\r\n\r\n\t/**\r\n\t * An align or a function returning an align.\r\n\t * If a computed value is undefined, falls back to an outline align of a theme.\r\n\t * If an align is 0, an outline is rendered completely inside.\r\n\t * If an align is 1, an outline is rendered completely outside.\r\n\t */\r\n\talign?: DStateAwareOrValueMightBe<number>;\r\n\r\n\t/** Masked outlines get removed. */\r\n\tmask?: DStateAwareOrValueMightBe<DBorderMask> | (keyof typeof DBorderMask);\r\n}\r\n\r\n/**\r\n * {@link DBase} options.\r\n */\r\nexport interface DBaseOptions<THEME extends DThemeBase = DThemeBase> {\r\n\t/**\r\n\t * A parent.\r\n\t *\r\n\t * In the case of UI classes which pop up (e.g., {@link DDialog} and {@link DMenu}),\r\n\t * if multiple application instances are there, better to set\r\n\t * this to an `application.stage` so that they pick a right application.\r\n\t * By default, they assume the last created application is\r\n\t * the one they belong to at the time when they are created.\r\n\t */\r\n\tparent?: Container;\r\n\r\n\t/** Children. */\r\n\tchildren?: Array<DisplayObject | null>;\r\n\r\n\t/** A name. */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * One of the followings:\r\n\t * * A X position\r\n\t * * A position keyword\r\n\t * * A position expression (Parsed by {@link DScalarExpression})\r\n\t * * A function returning a X position ({@link DScalarFunction})\r\n\t * * An object returning a X position ({@link DScalar})\r\n\t */\r\n\tx?: DCoordinatePosition;\r\n\r\n\t/**\r\n\t * One of the followings:\r\n\t * * A Y position\r\n\t * * A position keyword\r\n\t * * A position expresion (Parsed by {@link DScalarExpression})\r\n\t * * A function returning a Y position ({@link DScalarFunction})\r\n\t * * An object returning a Y position ({@link DScalar})\r\n\t */\r\n\ty?: DCoordinatePosition;\r\n\r\n\t/**\r\n\t * One of the followings:\r\n\t * * A width\r\n\t * * A size keyword\r\n\t * * A size expression (Parsed by {@link DScalarExpression})\r\n\t * * A function returning a width ({@link DScalarFunction})\r\n\t * * An object returning a width ({@link DScalar})\r\n\t */\r\n\twidth?: DCoordinateSize;\r\n\r\n\t/**\r\n\t * One of the followings:\r\n\t * * A height\r\n\t * * A size keyword\r\n\t * * A size expression (Parsed by {@link DScalarExpression})\r\n\t * * A function returning a hight ({@link DScalarFunction})\r\n\t * * An object returning a hight ({@link DScalar})\r\n\t */\r\n\theight?: DCoordinateSize;\r\n\r\n\t/**\r\n\t * A visibility.\r\n\t * Set to true to make {@link DBase} visible.\r\n\t * Set to false to make {@link DBase} invisible.\r\n\t * The default values is true.\r\n\t */\r\n\tvisible?: boolean;\r\n\r\n\t/** A default state. */\r\n\tstate?: (keyof typeof DBaseState) | Array<keyof typeof DBaseState> | DBaseState;\r\n\r\n\t/** An interactivity option. */\r\n\tinteractive?: (keyof typeof DBaseInteractive) | DBaseInteractive;\r\n\r\n\t/** A padding options. */\r\n\tpadding?: number | DBasePaddingOptions;\r\n\r\n\t/** A corner options. */\r\n\tcorner?: number | DBaseCornerOptions;\r\n\r\n\t/** A theme or a theme name. */\r\n\ttheme?: THEME | string;\r\n\r\n\t/**\r\n\t * Mappings of event names and event handlers.\r\n\t */\r\n\ton?: DBaseOnOptions;\r\n\r\n\t/**\r\n\t * A weight used by {@link DLayoutVertical} and {@link DLayoutHorizontal}.\r\n\t */\r\n\tweight?: number;\r\n\r\n\t/** A tooltip text. */\r\n\ttitle?: string;\r\n\r\n\t/** A shortcut option. */\r\n\tshortcut?: string | UtilKeyboardEventShortcut;\r\n\r\n\t/** A shortcut options. */\r\n\tshortcuts?: Array<string | UtilKeyboardEventShortcut>;\r\n\r\n\t/** A background options. */\r\n\tbackground?: DBaseBackgroundOptions;\r\n\r\n\t/** A border options. */\r\n\tborder?: DBaseBorderOptions;\r\n\r\n\t/** An outline options. */\r\n\toutline?: DBaseOutlineOptions;\r\n\r\n\t/** A shadow. */\r\n\tshadow?: \"NONE\" | \"WEAK\" | \"DEFAULT\" | DShadow | null;\r\n\r\n\t/** A clear type used by {@link DLayoutVertical} and {@link DLayoutHorizontal}. */\r\n\tclear?: (keyof typeof DLayoutClearType) | DLayoutClearType;\r\n\r\n\t/** A cursor shape. */\r\n\tcursor?: string;\r\n}\r\n\r\n/**\r\n * DBase theme\r\n */\r\nexport interface DThemeBase extends DThemeFont {\r\n\t/**\r\n\t * Returns a X coordinate.\r\n\t */\r\n\tgetX(): DCoordinatePosition;\r\n\r\n\t/**\r\n\t * Returns a Y coordinate.\r\n\t */\r\n\tgetY(): DCoordinatePosition;\r\n\r\n\t/**\r\n\t * Returns a height.\r\n\t */\r\n\tgetHeight(): DCoordinateSize;\r\n\r\n\t/**\r\n\t * Returns a width.\r\n\t */\r\n\tgetWidth(): DCoordinateSize;\r\n\r\n\t/**\r\n\t * Returns a background color.\r\n\t * If the color is null, backgrounds are not be rendered.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetBackgroundColor( state: DBaseState ): number | null;\r\n\r\n\t/**\r\n\t * Returns a background alpha.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetBackgroundAlpha( state: DBaseState ): number;\r\n\r\n\t/**\r\n\t * Returns a background texture of the given radius.\r\n\t *\r\n\t * @param radius a corner radius\r\n\t */\r\n\tgetBackgroundTexture( radius: number ): Texture;\r\n\r\n\t/**\r\n\t * Returns a border color.\r\n\t * If the color is null, borders are not be rendered.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetBorderColor( state: DBaseState ): number | null;\r\n\r\n\t/**\r\n\t * Returns a border alpha.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetBorderAlpha( state: DBaseState ): number;\r\n\r\n\t/**\r\n\t * Returns a border width.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetBorderWidth( state: DBaseState ): number;\r\n\r\n\t/**\r\n\t * Returns a border align.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetBorderAlign( state: DBaseState ): number;\r\n\r\n\t/**\r\n\t * Returns a border mask.\r\n\t *\r\n\t * @param state a mask\r\n\t */\r\n\tgetBorderMask( state: DBaseState ): DBorderMask;\r\n\r\n\t/**\r\n\t * Returns a border texture of the given radius and width.\r\n\t *\r\n\t * @param radius a corner radius\r\n\t * @param width a border width\r\n\t */\r\n\tgetBorderTexture( radius: number, width: number ): Texture;\r\n\r\n\t/**\r\n\t * Returns a left padding.\r\n\t */\r\n\tgetPaddingLeft(): number;\r\n\r\n\t/**\r\n\t * Returns a right padding.\r\n\t */\r\n\tgetPaddingRight(): number;\r\n\r\n\t/**\r\n\t * Returns a top padding.\r\n\t */\r\n\tgetPaddingTop(): number;\r\n\r\n\t/**\r\n\t * Returns a bottom padding.\r\n\t */\r\n\tgetPaddingBottom(): number;\r\n\r\n\t/**\r\n\t * Returns a corner radius.\r\n\t */\r\n\tgetCornerRadius(): number;\r\n\r\n\t/**\r\n\t * Returns a corner mask.\r\n\t */\r\n\tgetCornerMask(): DCornerMask;\r\n\r\n\t/**\r\n\t * Returns an outline color.\r\n\t * If the color is null, outlines are not be rendered.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetOutlineColor( state: DBaseState ): number | null;\r\n\r\n\t/**\r\n\t * Returns an outline alpha.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetOutlineAlpha( state: DBaseState ): number;\r\n\r\n\t/**\r\n\t * Returns an outline width.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetOutlineWidth( state: DBaseState ): number;\r\n\r\n\t/**\r\n\t * Returns an outline offset.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetOutlineOffset( state: DBaseState ): number;\r\n\r\n\t/**\r\n\t * Returns an outline align.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetOutlineAlign( state: DBaseState ): number;\r\n\r\n\t/**\r\n\t * Returns an outline mask.\r\n\t *\r\n\t * @param state a state\r\n\t */\r\n\tgetOutlineMask( state: DBaseState ): DBorderMask;\r\n\r\n\t/**\r\n\t * Returns a shadow.\r\n\t * If a shadow is null, no shadow is rendered.\r\n\t */\r\n\tgetShadow(): DShadow | null;\r\n\r\n\t/**\r\n\t * Returns an interactivity.\r\n\t */\r\n\tgetInteractive(): DBaseInteractive;\r\n\r\n\t/**\r\n\t * Returns a tooltip text.\r\n\t */\r\n\tgetTitle(): string;\r\n\r\n\t/**\r\n\t * Returns a clear type.\r\n\t * A clear type is for layout classes including {@link DLayoutVertical}.\r\n\t */\r\n\tgetClearType(): DLayoutClearType;\r\n\r\n\t/**\r\n\t * Returns a weight.\r\n\t * Weights are for layout classes including {@link DLayoutVertical}.\r\n\t * If a weight is less than or equals to zero, layout classes are supposed not to change a width / height.\r\n\t */\r\n\tgetWeight(): number;\r\n\r\n\t/**\r\n\t * Creates a new shadow.\r\n\t */\r\n\tnewShadow(): DShadow | null;\r\n\r\n\t/**\r\n\t * Creates a new weak shadow.\r\n\t */\r\n\tnewShadowWeak(): DShadow | null;\r\n\r\n\t/**\r\n\t * Returns a cursor.\r\n\t */\r\n\tgetCursor(): string | null;\r\n}\r\n\r\nconst toTheme = <THEME extends DThemeBase>( options?: DBaseOptions<THEME> ): THEME | null => {\r\n\tif( options != null && options.theme != null ) {\r\n\t\tconst theme = options.theme;\r\n\t\tif( isString( theme ) ) {\r\n\t\t\treturn DThemes.getInstance().get( theme );\r\n\t\t} else {\r\n\t\t\treturn theme;\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport interface DRefitable {\r\n\treadonly width: number;\r\n\treadonly height: number;\r\n}\r\n\r\nconst toShortcuts = <THEME extends DThemeBase>(\r\n\toptions?: DBaseOptions<THEME>\r\n): UtilKeyboardEventShortcut[] | undefined => {\r\n\tif( options != null && ( options.shortcuts != null || options.shortcut != null ) ) {\r\n\t\tconst result: UtilKeyboardEventShortcut[] = [];\r\n\t\tif( options.shortcut != null ) {\r\n\t\t\tresult.push( UtilKeyboardEvent.toShortcut( options.shortcut ) );\r\n\t\t}\r\n\r\n\t\tif( options.shortcuts != null ) {\r\n\t\t\tconst shortcuts = options.shortcuts;\r\n\t\t\tfor( let i = 0, imax = shortcuts.length; i < imax; ++i ) {\r\n\t\t\t\tUtilKeyboardEvent.toShortcut( shortcuts[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport interface DRenderable {\r\n\trender( renderer: Renderer ): void;\r\n\tupdateTransform(): void;\r\n}\r\n\r\nexport interface DReflowable {\r\n\tonReflow( base: DBase, width: number, height: number ): void;\r\n}\r\n\r\nconst enum AutoFlag {\r\n\tNONE = 0,\r\n\tWIDTH = 1,\r\n\tHEIGHT = 2\r\n}\r\n\r\nexport class DBase<\r\n\tTHEME extends DThemeBase = DThemeBase,\r\n\tOPTIONS extends DBaseOptions<THEME> = DBaseOptions<THEME>\r\n> extends Container {\r\n\tprotected static WORK_CONTAINS_POINT: Point = new Point();\r\n\r\n\tprivate _name: string;\r\n\tprivate _state: DBaseState;\r\n\tprivate _stateLocal: DBaseState;\r\n\tprivate _theme: THEME;\r\n\tprotected _options: OPTIONS | undefined;\r\n\tprivate _width: number;\r\n\tprivate _height: number;\r\n\tprotected _padding: DPadding;\r\n\tprotected _corner: DCorner;\r\n\tprivate _scalarSet: DScalarSet;\r\n\tprotected _autoFlags: AutoFlag;\r\n\tprivate _isDirty: boolean;\r\n\tprivate _hasDirty: boolean;\r\n\tprotected _isChildrenDirty: boolean;\r\n\tprivate _shadow: DShadow | null;\r\n\tprivate _onShadowUpdateBound: () => void;\r\n\tprivate _weight: number;\r\n\tprivate _position: DBasePoint;\r\n\tprivate _scale: DBasePoint;\r\n\tprivate _skew: DBasePoint;\r\n\tprotected _title: string;\r\n\tprotected _background: DBackgroundStateAware;\r\n\tprotected _border: DBorderStateAware;\r\n\tprotected _outline: DOutline;\r\n\tprotected _clearType: DLayoutClearType;\r\n\tprotected _shortcuts?: UtilKeyboardEventShortcut[];\r\n\tprotected _befores: DRenderable[];\r\n\tprotected _afters: DRenderable[];\r\n\tprotected _reflowables: DReflowable[];\r\n\tprotected _lastDownPoint?: Point;\r\n\r\n\tconstructor( options?: OPTIONS ) {\r\n\t\tsuper();\r\n\r\n\t\t// Transform\r\n\t\tconst transform: Transform = this.transform;\r\n\t\tthis._position = new DBasePoint( transform.position, (): void => {\r\n\t\t\tthis.onPositionChanged();\r\n\t\t});\r\n\t\tthis._scale = new DBasePoint( transform.scale, (): void => {\r\n\t\t\tthis.onScaleChanged();\r\n\t\t});\r\n\t\tthis._skew = new DBasePoint( transform.skew, (): void => {\r\n\t\t\tthis.onSkewChanged();\r\n\t\t});\r\n\r\n\t\t//\r\n\t\tthis._options = options;\r\n\t\tconst scalarSet: DScalarSet = this._scalarSet = {};\r\n\t\tthis._autoFlags = AutoFlag.NONE;\r\n\t\tthis._isDirty = true;\r\n\t\tthis._hasDirty = false;\r\n\t\tthis._isChildrenDirty = false;\r\n\t\tthis._shadow = null;\r\n\t\tthis._name = ( options && options.name ) || \"\";\r\n\t\tconst theme = this._theme = toTheme( options ) || this.getThemeDefault();\r\n\t\tthis._befores = [];\r\n\t\tthis._afters = [];\r\n\t\tthis._reflowables = [];\r\n\t\tthis._clearType = ( options && options.clear != null ?\r\n\t\t\t( isString( options.clear ) ? DLayoutClearType[ options.clear ] : options.clear ) :\r\n\t\t\ttheme.getClearType()\r\n\t\t);\r\n\t\tthis._padding = new DBasePadding( theme, options, (): void => {\r\n\t\t\tthis.layout();\r\n\t\t\tthis.toChildrenDirty();\r\n\t\t\tDApplications.update( this );\r\n\t\t});\r\n\t\tconst toDirtyAndUpdate = (): void => {\r\n\t\t\tthis.toDirty();\r\n\t\t\tDApplications.update( this );\r\n\t\t};\r\n\t\tthis._background = new DBaseBackground( theme, options, toDirtyAndUpdate );\r\n\t\tthis._border = new DBaseBorder( theme, options, toDirtyAndUpdate );\r\n\t\tthis._outline = new DBaseOutline( theme, options, toDirtyAndUpdate );\r\n\t\tthis._corner = new DBaseCorner( theme, options, toDirtyAndUpdate );\r\n\t\tthis.initReflowable();\r\n\r\n\t\t// X\r\n\t\tconst position = transform.position;\r\n\t\tconst x = ( options && options.x != null ? options.x : theme.getX() );\r\n\t\tif( isNumber( x ) ) {\r\n\t\t\tposition.x = x;\r\n\t\t} else {\r\n\t\t\tposition.x = 0;\r\n\t\t\tscalarSet.x = DScalarFunctions.position( x );\r\n\t\t}\r\n\r\n\t\t// Y\r\n\t\tconst y = ( options && options.y != null ? options.y : theme.getY() );\r\n\t\tif( isNumber( y ) ) {\r\n\t\t\tposition.y = y;\r\n\t\t} else {\r\n\t\t\tposition.y = 0;\r\n\t\t\tscalarSet.y = DScalarFunctions.position( y );\r\n\t\t}\r\n\r\n\t\t// Width\r\n\t\tconst width = ( options && options.width != null ? options.width : theme.getWidth() );\r\n\t\tif( isNumber( width ) ) {\r\n\t\t\tthis._width = width;\r\n\t\t} else if( width === \"auto\" || width === \"AUTO\" ) {\r\n\t\t\tthis._width = 100;\r\n\t\t\tthis.toWidthAuto();\r\n\t\t} else {\r\n\t\t\tthis._width = 100;\r\n\t\t\tscalarSet.width = DScalarFunctions.size( width );\r\n\t\t}\r\n\r\n\t\t// Height\r\n\t\tconst height = ( options && options.height != null ? options.height : theme.getHeight() );\r\n\t\tif( isNumber( height ) ) {\r\n\t\t\tthis._height = height;\r\n\t\t} else if( height === \"auto\" || height === \"AUTO\" ) {\r\n\t\t\tthis._height = 100;\r\n\t\t\tthis.toHeightAuto();\r\n\t\t} else {\r\n\t\t\tthis._height = 100;\r\n\t\t\tscalarSet.height = DScalarFunctions.size( height );\r\n\t\t}\r\n\r\n\t\t// Visibility\r\n\t\tif( options && options.visible != null ) {\r\n\t\t\tthis.visible = options.visible;\r\n\t\t}\r\n\r\n\t\t// State\r\n\t\tthis._state = DBaseState.NONE;\r\n\t\tthis._stateLocal = DBaseState.NONE;\r\n\r\n\t\t// Interactive\r\n\t\tconst interactive = ( options && options.interactive != null ?\r\n\t\t\t( isString( options.interactive ) ? DBaseInteractive[ options.interactive ] : options.interactive ) :\r\n\t\t\ttheme.getInteractive()\r\n\t\t);\r\n\t\tthis.interactive = ( ( interactive & DBaseInteractive.SELF ) !== 0 );\r\n\t\tthis.interactiveChildren = ( ( interactive & DBaseInteractive.CHILDREN ) !== 0 );\r\n\r\n\t\t// Events\r\n\t\tconst on = options && options.on;\r\n\t\tif( on ) {\r\n\t\t\tfor( const name in on ) {\r\n\t\t\t\tconst handler = on[ name ];\r\n\t\t\t\tif( handler ) {\r\n\t\t\t\t\tthis.on( name, handler );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Title\r\n\t\tthis._title = ( options && options.title != null ? options.title : theme.getTitle() );\r\n\r\n\t\t// Weight\r\n\t\tthis._weight = ( options && options.weight != null ? options.weight : theme.getWeight() );\r\n\r\n\t\t// Shadow\r\n\t\tthis._onShadowUpdateBound = (): void => {\r\n\t\t\tDApplications.update( this );\r\n\t\t};\r\n\t\tconst shadow = (options && options.shadow) || theme.getShadow();\r\n\t\tif( shadow ) {\r\n\t\t\tif( isString( shadow )  ) {\r\n\t\t\t\tswitch( shadow ) {\r\n\t\t\t\tcase \"WEAK\":\r\n\t\t\t\t\tthis.shadow = theme.newShadowWeak();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"DEFAULT\":\r\n\t\t\t\t\tthis.shadow = theme.newShadow();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.shadow = shadow;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Event handlers\r\n\t\tthis.on( UtilPointerEvent.over, ( e: InteractionEvent ): void => {\r\n\t\t\tthis.onOver( e );\r\n\t\t});\r\n\r\n\t\tthis.on( UtilPointerEvent.out, ( e: InteractionEvent ): void => {\r\n\t\t\tthis.onOut( e );\r\n\t\t});\r\n\r\n\t\tthis.on( UtilPointerEvent.down, ( e: InteractionEvent ): void => {\r\n\t\t\tthis.onDown( e );\r\n\t\t});\r\n\r\n\t\tthis.on( UtilPointerEvent.up, ( e: InteractionEvent ): void => {\r\n\t\t\tthis.onUp( e );\r\n\t\t});\r\n\r\n\t\t// Children change detection\r\n\t\tthis.on( \"added\", (): void => {\r\n\t\t\tthis.layout();\r\n\t\t\tif( this.isDirty() || this.hasDirty() ) {\r\n\t\t\t\tthis.toParentHasDirty();\r\n\t\t\t}\r\n\t\t\tif( this._isChildrenDirty ) {\r\n\t\t\t\tthis.toParentChildrenDirty();\r\n\t\t\t}\r\n\t\t\tthis.updateState();\r\n\t\t\tDApplications.update( this );\r\n\t\t});\r\n\r\n\t\tthis.on( \"removed\", (): void => {\r\n\t\t\tthis.blur( true );\r\n\t\t\tthis.updateState();\r\n\t\t\tDApplications.update( this );\r\n\t\t});\r\n\r\n\t\t// Shortcut\r\n\t\tconst shortcuts = this._shortcuts = toShortcuts( options );\r\n\t\tif( shortcuts != null ) {\r\n\t\t\tconst onShortcutBound = ( e: KeyboardEvent ): void => {\r\n\t\t\t\tthis.onShortcut( e );\r\n\t\t\t};\r\n\t\t\tfor( let i = 0, imax = shortcuts.length; i < imax; ++i ) {\r\n\t\t\t\tUtilKeyboardEvent.on( this, shortcuts[ i ], onShortcutBound );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cursor\r\n\t\tlet cursor: string | null | undefined = options && options.cursor;\r\n\t\tif( cursor == null ) {\r\n\t\t\tcursor = theme.getCursor();\r\n\t\t}\r\n\t\tif( cursor != null ) {\r\n\t\t\tthis.cursor = cursor;\r\n\t\t}\r\n\r\n\t\t// Other initialization\r\n\t\tthis.init( options );\r\n\r\n\t\t// State Override\r\n\t\tif( options && options.state != null ) {\r\n\t\t\tif( isString( options.state ) ) {\r\n\t\t\t\tthis.setState( DBaseState[ options.state ], true );\r\n\t\t\t} else if( isNumber( options.state ) ) {\r\n\t\t\t\tthis.setState( options.state, true );\r\n\t\t\t} else {\r\n\t\t\t\tconst states = options.state;\r\n\t\t\t\tfor( let i = 0, imax = states.length; i < imax; ++i ) {\r\n\t\t\t\t\tthis.setState( DBaseState[ states[ i ] ], true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Parent\r\n\t\tif( options && options.parent != null ) {\r\n\t\t\toptions.parent.addChild( this );\r\n\t\t}\r\n\r\n\t\t// Children\r\n\t\tif( options && options.children != null ) {\r\n\t\t\tconst children = options.children;\r\n\t\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tif( child != null ) {\r\n\t\t\t\t\tthis.addChild( child );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Done\r\n\t\tthis.emit( \"init\", this );\r\n\t}\r\n\r\n\tprependRenderable( renderable: DRenderable, phase: boolean ): void {\r\n\t\t(renderable as any).parent = this;\r\n\t\tconst list = ( phase ? this._befores : this._afters );\r\n\t\tlist.unshift( renderable );\r\n\t}\r\n\r\n\tappendRenderable( renderable: DRenderable, phase: boolean ): void {\r\n\t\t(renderable as any).parent = this;\r\n\t\tconst list = ( phase ? this._befores : this._afters );\r\n\t\tlist.push( renderable );\r\n\t}\r\n\r\n\tremoveRenderable( renderable: DRenderable, phase: boolean ): void {\r\n\t\t(renderable as any).parent = null;\r\n\t\tconst list = ( phase ? this._befores : this._afters );\r\n\t\tconst index = list.indexOf( renderable );\r\n\t\tif( 0 <= index ) {\r\n\t\t\tlist.splice( index, 1 );\r\n\t\t}\r\n\t}\r\n\r\n\taddReflowable( reflowable: DReflowable ): void {\r\n\t\tthis._reflowables.push( reflowable );\r\n\t}\r\n\r\n\tremoveReflowable( reflowable: DReflowable ): void {\r\n\t\tconst reflowables = this._reflowables;\r\n\t\tconst index = reflowables.indexOf( reflowable );\r\n\t\tif( 0 <= index ) {\r\n\t\t\treflowables.splice( index, 1 );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected initReflowable(): void {\r\n\t\tnew DBaseReflowable( this );\r\n\t}\r\n\r\n\tprotected onChildrenChange(): void {\r\n\t\tthis.toChildrenDirty();\r\n\t\tsuper.onChildrenChange();\r\n\t}\r\n\r\n\tprotected onShortcut( e: KeyboardEvent ): void {\r\n\t\t// DO NOTHING\r\n\t}\r\n\r\n\tprotected init( options?: OPTIONS ): void {\r\n\t\t// OTHER INITIALIZATIONS BEFORE `parent.addChild( this )`\r\n\t}\r\n\r\n\tget weight(): number {\r\n\t\treturn this._weight;\r\n\t}\r\n\r\n\tprotected onPositionChanged(): void {\r\n\t\tthis.moveChildren();\r\n\t\tDApplications.update( this );\r\n\t\tthis.emit( \"move\", this );\r\n\t}\r\n\r\n\tresize( width: number, height: number ): boolean {\r\n\t\tconst oldWidth = this._width;\r\n\t\tconst oldHeight = this._height;\r\n\t\tconst widthResized = oldWidth !== width;\r\n\t\tconst heightResized = oldHeight !== height;\r\n\r\n\t\tif( widthResized ) {\r\n\t\t\tthis._width = width;\r\n\t\t}\r\n\r\n\t\tif( heightResized ) {\r\n\t\t\tthis._height = height;\r\n\t\t}\r\n\r\n\t\tconst resized = widthResized || heightResized;\r\n\t\tif( resized ) {\r\n\t\t\tthis.onResize( width, height, oldWidth, oldHeight );\r\n\t\t}\r\n\r\n\t\tif( widthResized ) {\r\n\t\t\tconst scalarSet = this._scalarSet;\r\n\t\t\tif( scalarSet.x != null ) {\r\n\t\t\t\tconst position = this.transform.position;\r\n\t\t\t\tconst parent = this.getParentOfSize();\r\n\t\t\t\tif( parent ) {\r\n\t\t\t\t\tthis.x = scalarSet.x( parent.width, width, parent.padding.getLeft(), position.x );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( heightResized ) {\r\n\t\t\tconst scalarSet = this._scalarSet;\r\n\t\t\tif( scalarSet.y != null ) {\r\n\t\t\t\tconst position = this.transform.position;\r\n\t\t\t\tconst parent = this.getParentOfSize();\r\n\t\t\t\tif( parent ) {\r\n\t\t\t\t\tthis.y = scalarSet.y( parent.height, height, parent.padding.getTop(), position.y );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn resized;\r\n\t}\r\n\r\n\tgetClearType(): DLayoutClearType {\r\n\t\treturn this._clearType;\r\n\t}\r\n\r\n\tonResize( newWidth: number, newHeight: number, oldWidth: number, oldHeight: number ): void {\r\n\t\tthis.toDirty();\r\n\t\tthis.toChildrenDirty();\r\n\t\tthis.resizeChildren();\r\n\t\tDApplications.update( this );\r\n\t\tthis.emit( \"resize\", newWidth, newHeight, oldWidth, oldHeight, this );\r\n\t}\r\n\r\n\tprotected onScaleChanged(): void {\r\n\t\tDApplications.update( this );\r\n\t\tthis.emit( \"scale\", this );\r\n\t}\r\n\r\n\tprotected onSkewChanged(): void {\r\n\t\tDApplications.update( this );\r\n\t\tthis.emit( \"skew\", this );\r\n\t}\r\n\r\n\tget type(): string {\r\n\t\treturn this.getType();\r\n\t}\r\n\r\n\tget name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tset name( name: string ) {\r\n\t\tthis._name = name;\r\n\t}\r\n\r\n\tget x(): number {\r\n\t\treturn this._position.x;\r\n\t}\r\n\r\n\tset x( x: number ) {\r\n\t\tthis._position.x = x;\r\n\t}\r\n\r\n\tgetX(): DCoordinatePosition {\r\n\t\tconst scalarSet = this._scalarSet;\r\n\t\tif( scalarSet.x != null ) {\r\n\t\t\treturn scalarSet.x;\r\n\t\t} else {\r\n\t\t\treturn this.x;\r\n\t\t}\r\n\t}\r\n\r\n\tsetX( x: DCoordinatePosition ) {\r\n\t\tif( isNumber( x ) ) {\r\n\t\t\tthis.x = x;\r\n\t\t} else {\r\n\t\t\tconst scalarSet = this._scalarSet;\r\n\t\t\tconst scalar = DScalarFunctions.position( x );\r\n\t\t\tif( scalarSet.x !== scalar ) {\r\n\t\t\t\tscalarSet.x = scalar;\r\n\t\t\t\tthis.layout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget y(): number {\r\n\t\treturn this._position.y;\r\n\t}\r\n\r\n\tset y( y: number ) {\r\n\t\tthis._position.y = y;\r\n\t}\r\n\r\n\tgetY(): DCoordinatePosition {\r\n\t\tconst scalarSet = this._scalarSet;\r\n\t\tif( scalarSet.y != null ) {\r\n\t\t\treturn scalarSet.y;\r\n\t\t} else {\r\n\t\t\treturn this.y;\r\n\t\t}\r\n\t}\r\n\r\n\tsetY( y: DCoordinatePosition ) {\r\n\t\tif( isNumber( y ) ) {\r\n\t\t\tthis.y = y;\r\n\t\t} else {\r\n\t\t\tconst scalarSet = this._scalarSet;\r\n\t\t\tconst scalar = DScalarFunctions.position( y );\r\n\t\t\tif( scalarSet.y !== scalar ) {\r\n\t\t\t\tscalarSet.y = scalar;\r\n\t\t\t\tthis.layout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget width(): number {\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tset width( width: number ) {\r\n\t\tconst oldWidth = this._width;\r\n\t\tif( oldWidth !== width ) {\r\n\t\t\tthis._width = width;\r\n\t\t\tconst height = this._height;\r\n\t\t\tthis.onResize( width, height, oldWidth, height );\r\n\r\n\t\t\t// Layout\r\n\t\t\tconst scalarSet = this._scalarSet;\r\n\t\t\tif( scalarSet.x != null ) {\r\n\t\t\t\tconst position = this.transform.position;\r\n\t\t\t\tconst parent = this.getParentOfSize();\r\n\t\t\t\tif( parent ) {\r\n\t\t\t\t\tthis.x = scalarSet.x( parent.width, width, parent.padding.getLeft(), position.x );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toWidthAuto() {\r\n\t\tthis._autoFlags |= AutoFlag.WIDTH;\r\n\t}\r\n\r\n\tprotected isWidthAuto(): boolean {\r\n\t\treturn ( this._autoFlags & AutoFlag.WIDTH ) !== 0;\r\n\t}\r\n\r\n\tgetWidth(): DCoordinateSize {\r\n\t\tconst scalarSet = this._scalarSet;\r\n\t\tif( this.isWidthAuto() ) {\r\n\t\t\treturn \"auto\";\r\n\t\t} else if( scalarSet.width != null ) {\r\n\t\t\treturn scalarSet.width;\r\n\t\t} else {\r\n\t\t\treturn this.width;\r\n\t\t}\r\n\t}\r\n\r\n\tsetWidth( width: DCoordinateSize ) {\r\n\t\tif( isNumber( width ) ) {\r\n\t\t\tthis.width = width;\r\n\t\t} else if( width === \"auto\" || width === \"AUTO\" ) {\r\n\t\t\tif( ! this.isWidthAuto() ) {\r\n\t\t\t\tthis.toWidthAuto();\r\n\t\t\t\tthis.toChildrenDirty();\r\n\t\t\t\tDApplications.update( this );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst scalarSet = this._scalarSet;\r\n\t\t\tconst scalar = DScalarFunctions.size( width );\r\n\t\t\tif( scalarSet.width !== scalar ) {\r\n\t\t\t\tscalarSet.width = scalar;\r\n\t\t\t\tthis.layout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget height(): number {\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tset height( height: number ) {\r\n\t\tconst oldHeight = this._height;\r\n\t\tif( oldHeight !== height ) {\r\n\t\t\tthis._height = height;\r\n\t\t\tconst width = this._width;\r\n\t\t\tthis.onResize( width, height, width, oldHeight );\r\n\r\n\t\t\t// Layout\r\n\t\t\tconst scalarSet = this._scalarSet;\r\n\t\t\tif( scalarSet.y != null ) {\r\n\t\t\t\tconst position = this.transform.position;\r\n\t\t\t\tconst parent = this.getParentOfSize();\r\n\t\t\t\tif( parent ) {\r\n\t\t\t\t\tthis.y = scalarSet.y( parent.height, height, parent.padding.getTop(), position.y );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toHeightAuto() {\r\n\t\tthis._autoFlags |= AutoFlag.HEIGHT;\r\n\t}\r\n\r\n\tprotected isHeightAuto(): boolean {\r\n\t\treturn ( this._autoFlags & AutoFlag.HEIGHT ) !== 0;\r\n\t}\r\n\r\n\tgetHeight(): DCoordinateSize {\r\n\t\tconst scalarSet = this._scalarSet;\r\n\t\tif( this.isHeightAuto() ) {\r\n\t\t\treturn \"auto\";\r\n\t\t} else if( scalarSet.height != null ) {\r\n\t\t\treturn scalarSet.height;\r\n\t\t} else {\r\n\t\t\treturn this.height;\r\n\t\t}\r\n\t}\r\n\r\n\tsetHeight( height: DCoordinateSize ) {\r\n\t\tif( isNumber( height ) ) {\r\n\t\t\tthis.height = height;\r\n\t\t} else if( height === \"auto\" || height === \"AUTO\" ) {\r\n\t\t\tif( ! this.isHeightAuto() ) {\r\n\t\t\t\tthis.toHeightAuto();\r\n\t\t\t\tthis.toChildrenDirty();\r\n\t\t\t\tDApplications.update( this );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst scalarSet = this._scalarSet;\r\n\t\t\tconst scalar = DScalarFunctions.size( height );\r\n\t\t\tif( scalarSet.height !== scalar ) {\r\n\t\t\t\tscalarSet.height = scalar;\r\n\t\t\t\tthis.layout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tget position(): DBasePoint {\r\n\t\treturn this._position;\r\n\t}\r\n\r\n\tget scale(): DBasePoint {\r\n\t\treturn this._scale;\r\n\t}\r\n\r\n\tget skew(): DBasePoint {\r\n\t\treturn this._skew;\r\n\t}\r\n\r\n\tget padding(): DPadding {\r\n\t\treturn this._padding;\r\n\t}\r\n\r\n\tget corner(): DCorner {\r\n\t\treturn this._corner;\r\n\t}\r\n\r\n\tget background(): DBackgroundStateAware {\r\n\t\treturn this._background;\r\n\t}\r\n\r\n\tget border(): DBorderStateAware {\r\n\t\treturn this._border;\r\n\t}\r\n\r\n\tget outline(): DOutline {\r\n\t\treturn this._outline;\r\n\t}\r\n\r\n\tget unsafe(): Transform {\r\n\t\treturn this.transform;\r\n\t}\r\n\r\n\tget title(): string {\r\n\t\treturn this._title;\r\n\t}\r\n\r\n\tset title( title: string ) {\r\n\t\tif( this._title !== title ) {\r\n\t\t\tthis._title = title;\r\n\t\t\tif( this.isHovered() ) {\r\n\t\t\t\tthis.applyTitle();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected applyTitle(): void {\r\n\t\tconst layer = DApplications.getLayer( this );\r\n\t\tif( layer ) {\r\n\t\t\tlayer.view.title = this._title;\r\n\t\t}\r\n\t}\r\n\r\n\tshow(): this {\r\n\t\tif( ! this.visible ) {\r\n\t\t\tthis.visible = true;\r\n\t\t\tthis.toParentChildrenDirty();\r\n\t\t\tDApplications.update( this );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tisShown(): boolean {\r\n\t\treturn this.visible;\r\n\t}\r\n\r\n\thide(): this {\r\n\t\tif( this.visible ) {\r\n\t\t\tthis.visible = false;\r\n\t\t\tthis.toParentChildrenDirty();\r\n\t\t\tDApplications.update( this );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tisHidden(): boolean {\r\n\t\treturn ! this.visible;\r\n\t}\r\n\r\n\ttoDirty(): boolean {\r\n\t\tif( ! this._isDirty ) {\r\n\t\t\tthis._isDirty = true;\r\n\t\t\tthis.toParentHasDirty();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\ttoHasDirty(): boolean {\r\n\t\tif( ! this._hasDirty ) {\r\n\t\t\tthis._hasDirty = true;\r\n\t\t\tthis.toParentHasDirty();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\ttoParentHasDirty(): void {\r\n\t\tconst parent = this.parent;\r\n\t\tif( parent instanceof DBase ) {\r\n\t\t\tparent.toHasDirty();\r\n\t\t}\r\n\t}\r\n\r\n\ttoChildrenDirty(): boolean {\r\n\t\tif( ! this._isChildrenDirty ) {\r\n\t\t\tthis._isChildrenDirty = true;\r\n\t\t\tthis.onChildrenDirty();\r\n\t\t\tthis.toParentChildrenDirty();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\ttoParentChildrenDirty(): void {\r\n\t\tconst parent = this.parent;\r\n\t\tif( parent instanceof DBase ) {\r\n\t\t\tparent.toChildrenDirty();\r\n\t\t}\r\n\t}\r\n\r\n\tisChildrenDirty(): boolean {\r\n\t\treturn this._isChildrenDirty;\r\n\t}\r\n\r\n\tprotected onChildrenDirty() {\r\n\t\t// DO NOTHING\r\n\t}\r\n\r\n\tisDirty() {\r\n\t\treturn this._isDirty;\r\n\t}\r\n\r\n\thasDirty() {\r\n\t\treturn this._hasDirty;\r\n\t}\r\n\r\n\tsetHovered( isHovered: boolean ) {\r\n\t\treturn this.setState( DBaseState.HOVERED, isHovered );\r\n\t}\r\n\r\n\tsetActive( isActive: boolean ) {\r\n\t\treturn this.setState( DBaseState.ACTIVE, isActive );\r\n\t}\r\n\r\n\tsetPressed( isPressed: boolean ) {\r\n\t\treturn this.setState( DBaseState.PRESSED, isPressed );\r\n\t}\r\n\r\n\tsetReadOnly( isReadOnly: boolean ) {\r\n\t\treturn this.setState( DBaseState.READ_ONLY, isReadOnly );\r\n\t}\r\n\r\n\tsetDisabled( isDisabled: boolean ) {\r\n\t\treturn this.setState( DBaseState.DISABLED, isDisabled );\r\n\t}\r\n\r\n\tsetDragging( isDragging: boolean ) {\r\n\t\treturn this.setState( DBaseState.DRAGGING, isDragging );\r\n\t}\r\n\r\n\tsetInvalid( isInvalid: boolean ) {\r\n\t\treturn this.setState( DBaseState.INVALID, isInvalid );\r\n\t}\r\n\r\n\tsetSucceeded( isSucceeded: boolean ) {\r\n\t\treturn this.setState( DBaseState.SUCCEEDED, isSucceeded );\r\n\t}\r\n\r\n\tsetFailed( isFailed: boolean ) {\r\n\t\treturn this.setState( DBaseState.FAILED, isFailed );\r\n\t}\r\n\r\n\tsetFocused( isFocused: boolean ) {\r\n\t\tif( this.isFocused() !== isFocused ) {\r\n\t\t\tconst layer = DApplications.getLayer( this );\r\n\t\t\tif( layer ) {\r\n\t\t\t\tlayer.getFocusController().setFocused( this, isFocused, false );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tfocus(): this {\r\n\t\treturn this.setFocused( true );\r\n\t}\r\n\r\n\tblur( recursively?: boolean ): this {\r\n\t\tif( recursively ) {\r\n\t\t\tconst layer = DApplications.getLayer( this );\r\n\t\t\tif( layer ) {\r\n\t\t\t\tconst focusController = layer.getFocusController();\r\n\t\t\t\tconst focused = focusController.getFocused();\r\n\t\t\t\tif( focused instanceof DBase ) {\r\n\t\t\t\t\tlet current: Container = focused;\r\n\t\t\t\t\twhile( current ) {\r\n\t\t\t\t\t\tif( current === this ) {\r\n\t\t\t\t\t\t\tfocused.setFocused( false );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent = current.parent;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.setFocused( false );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tisHovered(): boolean {\r\n\t\treturn this.hasState( DBaseState.HOVERED );\r\n\t}\r\n\r\n\tisActive(): boolean {\r\n\t\treturn this.hasState( DBaseState.ACTIVE );\r\n\t}\r\n\r\n\tisActiveIn(): boolean {\r\n\t\treturn this.hasState( DBaseState.ACTIVE | DBaseState.ACTIVE_IN );\r\n\t}\r\n\r\n\tisPressed(): boolean {\r\n\t\treturn this.hasState( DBaseState.PRESSED );\r\n\t}\r\n\r\n\tisReadOnly(): boolean {\r\n\t\treturn this.hasState( DBaseState.READ_ONLY );\r\n\t}\r\n\r\n\tisDisabled(): boolean {\r\n\t\treturn this.hasState( DBaseState.DISABLED );\r\n\t}\r\n\r\n\tisActionable(): boolean {\r\n\t\treturn ! this.hasState( DBaseState.DISABLED | DBaseState.READ_ONLY );\r\n\t}\r\n\r\n\tisDragging(): boolean {\r\n\t\treturn this.hasState( DBaseState.DRAGGING );\r\n\t}\r\n\r\n\tisFocused(): boolean {\r\n\t\treturn this.hasState( DBaseState.FOCUSED );\r\n\t}\r\n\r\n\tisFocusedIn(): boolean {\r\n\t\treturn this.hasState( DBaseState.FOCUSED | DBaseState.FOCUSED_IN );\r\n\t}\r\n\r\n\tisUnfocusable(): boolean {\r\n\t\treturn this.hasState( DBaseState.UNFOCUSABLE );\r\n\t}\r\n\r\n\tisInvalid(): boolean {\r\n\t\treturn this.hasState( DBaseState.INVALID );\r\n\t}\r\n\r\n\tisSucceeded(): boolean {\r\n\t\treturn this.hasState( DBaseState.SUCCEEDED );\r\n\t}\r\n\r\n\tisFailed(): boolean {\r\n\t\treturn this.hasState( DBaseState.FAILED );\r\n\t}\r\n\r\n\tsetState( state: DBaseState, isOn: boolean ) {\r\n\t\tconst oldStateLocal = this._stateLocal;\r\n\t\tconst newStateLocal = ( isOn ? (oldStateLocal | state) : (oldStateLocal & ~state) );\r\n\t\tif( oldStateLocal !== newStateLocal ) {\r\n\t\t\tthis._stateLocal = newStateLocal;\r\n\t\t\tthis.updateState();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsetStates( statesOn: DBaseState, statesOff: DBaseState ) {\r\n\t\tconst oldStateLocal = this._stateLocal;\r\n\t\tconst newStateLocal = ( (oldStateLocal | statesOn) & ~statesOff );\r\n\t\tif( oldStateLocal !== newStateLocal ) {\r\n\t\t\tthis._stateLocal = newStateLocal;\r\n\t\t\tthis.updateState();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprotected updateState(): void {\r\n\t\tconst parent = this.parent;\r\n\t\tconst stateLocal = this._stateLocal;\r\n\t\tconst newState = ( parent instanceof DBase ?\r\n\t\t\tthis.mergeState( stateLocal, parent.state ) :\r\n\t\t\tstateLocal\r\n\t\t);\r\n\t\tconst oldState = this._state;\r\n\t\tif( oldState !== newState ) {\r\n\t\t\tthis._state = newState;\r\n\t\t\tthis.onStateChange( newState, oldState );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected mergeState( stateLocal: DBaseState, stateParent: DBaseState ): DBaseState {\r\n\t\treturn stateLocal |\r\n\t\t\t( stateParent & DBaseState.DISABLED ) |\r\n\t\t\t( stateParent & DBaseState.READ_ONLY ) |\r\n\t\t\t( stateParent & (DBaseState.FOCUSED | DBaseState.FOCUSED_IN) ? DBaseState.FOCUSED_IN : DBaseState.NONE ) |\r\n\t\t\t( stateParent & (DBaseState.ACTIVE | DBaseState.ACTIVE_IN) ? DBaseState.ACTIVE_IN : DBaseState.NONE );\r\n\t}\r\n\r\n\tprotected onStateChange( newState: number, oldState: number ) {\r\n\t\tthis.toDirty();\r\n\t\tDApplications.update( this );\r\n\t\tthis.emit( \"statechange\", newState, oldState, this );\r\n\r\n\t\tconst children = this.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tif( child instanceof DBase ) {\r\n\t\t\t\tchild.onParentStateChange( newState, oldState );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( DBaseStates.isFocused( newState ) ) {\r\n\t\t\tif( ! DBaseStates.isFocused( oldState ) ) {\r\n\t\t\t\tthis.onFocused();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( DBaseStates.isFocused( oldState ) ) {\r\n\t\t\t\tthis.onBlured();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onChildFocused( focused: DBase ): void {\r\n\t\tconst parent = this.parent;\r\n\t\tif( parent instanceof DBase ) {\r\n\t\t\tparent.onChildFocused( focused );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onFocused(): void {\r\n\t\tconst parent = this.parent;\r\n\t\tif( parent instanceof DBase ) {\r\n\t\t\tparent.onChildFocused( this );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onBlured(): void {\r\n\t\t//\r\n\t}\r\n\r\n\tprotected onParentStateChange( newStateParent: number, oldStateParent: number ) {\r\n\t\tconst newState = this.mergeState( this._stateLocal, newStateParent );\r\n\t\tconst oldState = this._state;\r\n\t\tif( oldState !== newState ) {\r\n\t\t\tthis._state = newState;\r\n\t\t\tthis.onStateChange( newState, oldState );\r\n\t\t}\r\n\t}\r\n\r\n\tget state(): DBaseState {\r\n\t\treturn this._state;\r\n\t}\r\n\r\n\tgetState(): DBaseState {\r\n\t\treturn this._state;\r\n\t}\r\n\r\n\thasState( state: DBaseState ): boolean {\r\n\t\treturn !! ( this._state & state );\r\n\t}\r\n\r\n\tget theme(): THEME {\r\n\t\treturn this._theme;\r\n\t}\r\n\r\n\tset theme( theme: THEME ) {\r\n\t\tconst result = this._theme;\r\n\t\tif( result !== theme ) {\r\n\t\t\tthis._theme = theme;\r\n\t\t\tthis._padding.setTheme( theme );\r\n\t\t\tthis._background.setTheme( theme );\r\n\t\t\tthis._border.setTheme( theme );\r\n\t\t\tthis._outline.setTheme( theme );\r\n\t\t\tthis._corner.setTheme( theme );\r\n\t\t\tthis.toDirty();\r\n\t\t\tDApplications.update( this );\r\n\t\t}\r\n\t}\r\n\r\n\trefit(): void {\r\n\t\tif( this._isChildrenDirty ) {\r\n\t\t\tthis._isChildrenDirty = false;\r\n\r\n\t\t\tconst children = this.children;\r\n\t\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tif( child instanceof DBase ) {\r\n\t\t\t\t\tchild.refit();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.onRefit();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onRefit(): void {\r\n\t\tconst isWidthAuto = this.isWidthAuto();\r\n\t\tconst isHeightAuto = this.isHeightAuto();\r\n\t\tif( isWidthAuto && isHeightAuto ) {\r\n\t\t\tlet width = 0;\r\n\t\t\tlet height = 0;\r\n\t\t\tconst children = this.children;\r\n\t\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tif( child.visible ) {\r\n\t\t\t\t\tif( this.hasRefitableWidth( child ) ) {\r\n\t\t\t\t\t\twidth = Math.max( width, child.x + child.width );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif( this.hasRefitableHeight( child ) ) {\r\n\t\t\t\t\t\theight = Math.max( height, child.y + child.height );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst padding = this.padding;\r\n\t\t\tthis.resize( width + padding.getRight(), height + padding.getBottom() );\r\n\t\t} else if( isWidthAuto ) {\r\n\t\t\tlet width = 0;\r\n\t\t\tconst children = this.children;\r\n\t\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tif( child.visible && this.hasRefitableWidth( child ) ) {\r\n\t\t\t\t\twidth = Math.max( width, child.x + child.width );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst padding = this.padding;\r\n\t\t\tthis.width = width + padding.getRight();\r\n\t\t} else if( isHeightAuto ) {\r\n\t\t\tlet height = 0;\r\n\t\t\tconst children = this.children;\r\n\t\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tif( child.visible && this.hasRefitableHeight( child ) ) {\r\n\t\t\t\t\theight = Math.max( height, child.y + child.height );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst padding = this.padding;\r\n\t\t\tthis.height = height + padding.getBottom();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected isRefitable( target: any ): target is DRefitable {\r\n\t\treturn target instanceof DBase;\r\n\t}\r\n\r\n\tprotected hasRefitableHeight( target: any ): target is DRefitable {\r\n\t\treturn this.isRefitable( target ) &&\r\n\t\t\t! ( target instanceof DBase && isFunction( target.getHeight() ) );\r\n\t}\r\n\r\n\tprotected hasRefitableWidth( target: any ): target is DBase<any, any> {\r\n\t\treturn this.isRefitable( target ) &&\r\n\t\t\t! ( target instanceof DBase && isFunction( target.getWidth() ) );\r\n\t}\r\n\r\n\treflow(): void {\r\n\t\tif( this._isDirty ) {\r\n\t\t\tthis.onReflow();\r\n\t\t\tthis._isDirty = false;\r\n\t\t}\r\n\r\n\t\tif( this._hasDirty ) {\r\n\t\t\tconst children = this.children;\r\n\t\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\t\tconst child = children[ i ];\r\n\t\t\t\tif( child instanceof DBase ) {\r\n\t\t\t\t\tchild.reflow();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._hasDirty = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onReflow(): void {\r\n\t\tconst width = this._width;\r\n\t\tconst height = this._height;\r\n\t\tconst reflowables = this._reflowables;\r\n\t\tfor( let i = 0, imax = reflowables.length; i < imax; ++i ) {\r\n\t\t\treflowables[ i ].onReflow( this, width, height );\r\n\t\t}\r\n\t}\r\n\r\n\tget shadow(): DShadow | null {\r\n\t\treturn this._shadow;\r\n\t}\r\n\r\n\tset shadow( shadow: DShadow | null ) {\r\n\t\tconst previous = this._shadow;\r\n\t\tif( previous !== shadow ) {\r\n\t\t\tif( previous != null ) {\r\n\t\t\t\tprevious.off( \"update\", this._onShadowUpdateBound );\r\n\t\t\t\tthis.removeReflowable( previous );\r\n\t\t\t\tthis.removeRenderable( previous, true );\r\n\t\t\t}\r\n\r\n\t\t\tthis._shadow = shadow;\r\n\t\t\tif( shadow != null ) {\r\n\t\t\t\tshadow.on( \"update\", this._onShadowUpdateBound );\r\n\t\t\t\tthis.addReflowable( shadow );\r\n\t\t\t\tthis.prependRenderable( shadow, true );\r\n\t\t\t}\r\n\r\n\t\t\tDApplications.update( this );\r\n\t\t}\r\n\t}\r\n\r\n\tlayout(): void {\r\n\t\tconst parent = this.getParentOfSize();\r\n\t\tif( parent ) {\r\n\t\t\tthis.onParentResize( parent.width, parent.height, parent.padding );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getParentOfSize(): { width: number, height: number, padding: DPadding } | null {\r\n\t\tconst parent = this.parent;\r\n\t\tif( parent instanceof DBase ) {\r\n\t\t\treturn parent;\r\n\t\t} else {\r\n\t\t\treturn DApplications.getLayer( this );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a parent resized.\r\n\t *\r\n\t * @param parentWidth a parent's local width\r\n\t * @param parentHeight a parent's local height\r\n\t */\r\n\tonParentResize( parentWidth: number, parentHeight: number, parentPadding: DPadding ): void {\r\n\t\tconst scalarSet = this._scalarSet;\r\n\t\tconst position = this.transform.position;\r\n\t\tconst x = position.x;\r\n\t\tconst y = position.y;\r\n\t\tconst width = this._width;\r\n\t\tconst height = this._height;\r\n\r\n\t\t// Width & height\r\n\t\tconst paddingWidth = parentPadding.getLeft() + parentPadding.getRight();\r\n\t\tconst paddingHeight = parentPadding.getTop() + parentPadding.getBottom();\r\n\t\tconst newWidth = ( scalarSet.width != null ?\r\n\t\t\tscalarSet.width( parentWidth, width, paddingWidth, width ) : width );\r\n\t\tconst newHeight = ( scalarSet.height != null ?\r\n\t\t\tscalarSet.height( parentHeight, height, paddingHeight, height ) : height );\r\n\t\tthis.resize( newWidth, newHeight );\r\n\r\n\t\t// X & Y\r\n\t\tconst newX = ( scalarSet.x != null ? scalarSet.x( parentWidth, this._width, parentPadding.getLeft(), x ) : x );\r\n\t\tconst newY = ( scalarSet.y != null ? scalarSet.y( parentHeight, this._height, parentPadding.getTop(), y ) : y );\r\n\t\tthis.position.set( newX, newY );\r\n\t}\r\n\r\n\tresizeChildren(): void {\r\n\t\tconst width = this._width;\r\n\t\tconst height = this._height;\r\n\t\tconst padding = this._padding;\r\n\r\n\t\tconst children = this.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tif( child instanceof DBase ) {\r\n\t\t\t\tchild.onParentResize( width, height, padding );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a parent moved.\r\n\t *\r\n\t * @param x a parent's local x position\r\n\t * @param y a parent's local y position\r\n\t */\r\n\tonParentMove( x: number, y: number ): void {\r\n\t\t// DO NOTHING\r\n\t}\r\n\r\n\tprotected moveChildren() {\r\n\t\tconst x = this.x;\r\n\t\tconst y = this.y;\r\n\t\tconst children = this.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tif( child instanceof DBase ) {\r\n\t\t\t\tchild.onParentMove( x, y );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Wheel\r\n\tonWheel( e: WheelEvent, deltas: UtilWheelEventDeltas, global: Point ): boolean {\r\n\t\tthis.emit( \"wheel\", e, deltas, global, this );\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Keydown\r\n\tonKeyDown( e: KeyboardEvent ): boolean {\r\n\t\tthis.emit( \"keydown\", e, this );\r\n\t\treturn false;\r\n\t}\r\n\r\n\tonKeyUp( e: KeyboardEvent ): boolean {\r\n\t\tthis.emit( \"keyup\", e, this );\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Down\r\n\tprotected isEventTarget( e: InteractionEvent ): boolean {\r\n\t\tconst target = e.target;\r\n\t\tif( target === this ) {\r\n\t\t\treturn true;\r\n\t\t} else if( !( target instanceof DBase ) ) {\r\n\t\t\tlet parent = target.parent;\r\n\t\t\twhile( parent != null && ! ( parent instanceof DBase ) ) {\r\n\t\t\t\tparent = parent.parent;\r\n\t\t\t}\r\n\t\t\treturn ( parent === this );\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected onDown( e: InteractionEvent ): void {\r\n\t\tif( this.isEventTarget( e ) ) {\r\n\t\t\tthis.onDownThis( e );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onDownThis( e: InteractionEvent ): void {\r\n\t\tconst oe = e.data.originalEvent;\r\n\t\tif( \"touches\" in oe ) {\r\n\t\t\tconst lastDownPoint = this._lastDownPoint || new Point();\r\n\t\t\tthis._lastDownPoint = lastDownPoint;\r\n\t\t\tlastDownPoint.copyFrom( e.data.global );\r\n\t\t} else {\r\n\t\t\tthis.focusOnClosest();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onUp( e: InteractionEvent ): void {\r\n\t\tif( this.isEventTarget( e ) ) {\r\n\t\t\tthis.onUpThis( e );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onUpThis( e: InteractionEvent ): void {\r\n\t\tconst oe = e.data.originalEvent;\r\n\t\tif( \"touches\" in oe ) {\r\n\t\t\tconst lastDownPoint = this._lastDownPoint;\r\n\t\t\tif( lastDownPoint ) {\r\n\t\t\t\tconst global = e.data.global;\r\n\t\t\t\tconst dx = Math.abs( global.x - lastDownPoint.x );\r\n\t\t\t\tconst dy = Math.abs( global.y - lastDownPoint.y );\r\n\t\t\t\tconst threshold = UtilPointerEvent.CLICK_DISTANCE_THRESHOLD;\r\n\t\t\t\tif( dx < threshold && dy < threshold ) {\r\n\t\t\t\t\tthis.focusOnClosest();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected focusOnClosest(): void {\r\n\t\tconst layer = DApplications.getLayer( this );\r\n\t\tif( layer ) {\r\n\t\t\tconst focusController = layer.getFocusController();\r\n\t\t\tfocusController.setFocused( focusController.findFocusableParent( this ), true, true );\r\n\t\t}\r\n\t}\r\n\r\n\t// Over\r\n\tprotected onOver( e: InteractionEvent ): void {\r\n\t\t// Hover\r\n\t\tthis.setHovered( true );\r\n\r\n\t\t// Title\r\n\t\tif( e.target === this ) {\r\n\t\t\tthis.applyTitle();\r\n\t\t}\r\n\t}\r\n\r\n\t// Out\r\n\tprotected onOut( e: InteractionEvent ): void {\r\n\t\tthis.setHovered( false );\r\n\t}\r\n\r\n\t// Double click\r\n\tonDblClick( e: MouseEvent | TouchEvent, interactionManager: interaction.InteractionManager ): boolean {\r\n\t\tthis.emit( \"dblclick\", e, interactionManager, this );\r\n\t\treturn false;\r\n\t}\r\n\r\n\t//\r\n\trender( renderer: Renderer ): void {\r\n\t\tif( this.visible && 0 < this.worldAlpha && this.renderable ) {\r\n\t\t\tthis.renderBefore( renderer );\r\n\t\t\tsuper.render( renderer );\r\n\t\t\tthis.renderAfter( renderer );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected renderBefore( renderer: Renderer ): void {\r\n\t\tconst befores = this._befores;\r\n\t\tfor( let i = 0, imax = befores.length; i < imax; ++i ) {\r\n\t\t\tconst before = befores[ i ];\r\n\t\t\tbefore.updateTransform();\r\n\t\t\tbefore.render( renderer );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected renderAfter( renderer: Renderer ): void {\r\n\t\tconst afters = this._afters;\r\n\t\tfor( let i = 0, imax = afters.length; i < imax; ++i ) {\r\n\t\t\tconst after = afters[ i ];\r\n\t\t\tafter.updateTransform();\r\n\t\t\tafter.render( renderer );\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\tprotected getThemeDefault(): THEME {\r\n\t\treturn DThemes.getInstance().get( this.getType() );\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DBase\";\r\n\t}\r\n\r\n\t//\r\n\tprotected _calculateBounds(): void {\r\n\t\tconst worldTransform = this.transform.worldTransform;\r\n\t\tconst bounds = this._bounds;\r\n\r\n\t\tconst work = DBase.WORK_CONTAINS_POINT;\r\n\t\twork.set( 0, 0 );\r\n\t\tworldTransform.apply( work, work );\r\n\t\tbounds.addPoint( work );\r\n\r\n\t\twork.set( this._width, this._height );\r\n\t\tworldTransform.apply( work, work );\r\n\t\tbounds.addPoint( work );\r\n\r\n\t\tsuper._calculateBounds();\r\n\t}\r\n\r\n\tcontainsPoint( point: Point ): boolean {\r\n\t\treturn this.containsGlobalPoint( point ) || this.containsLocalPoint(\r\n\t\t\tthis.worldTransform.applyInverse( point, DBase.WORK_CONTAINS_POINT )\r\n\t\t);\r\n\t}\r\n\r\n\tprotected containsGlobalPoint( point: Point ): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected containsLocalPoint( point: Point ): boolean {\r\n\t\treturn (\r\n\t\t\t0 <= point.x && point.x <= this._width &&\r\n\t\t\t0 <= point.y && point.y <= this._height\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a clipping rect.\r\n\t *\r\n\t * @param result a clipping rect\r\n\t */\r\n\tgetClippingRect( target: DBase, result: Rectangle ): void {\r\n\t\tresult.x = 0;\r\n\t\tresult.y = 0;\r\n\t\tresult.width = this._width;\r\n\t\tresult.height = this._height;\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\t// Layout\r\n\t\tconst scalarSet = this._scalarSet;\r\n\t\tscalarSet.x = null;\r\n\t\tscalarSet.y = null;\r\n\t\tscalarSet.width = null;\r\n\t\tscalarSet.height = null;\r\n\r\n\t\t// Shadow\r\n\t\tconst shadow = this._shadow;\r\n\t\tif( shadow ) {\r\n\t\t\tthis._shadow = null;\r\n\t\t\tshadow.destroy();\r\n\t\t}\r\n\r\n\t\t// Children\r\n\t\tconst children = this.children;\r\n\t\tfor( let i = children.length - 1; 0 <= i; --i ) {\r\n\t\t\tchildren[ i ].destroy();\r\n\t\t}\r\n\t\tchildren.length = 0;\r\n\r\n\t\t//\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n"]}