{"version":3,"file":"d-menu-item-expandable.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-menu-item-expandable.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAa,aAAa,EAAE,MAAM,SAAS,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAEjC,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,eAAe,EAAgD,MAAM,qBAAqB,CAAC;AACpG,OAAO,EAAE,uBAAuB,EAAkC,MAAM,+BAA+B,CAAC;AACxG,OAAO,EAAE,yBAAyB,EAAoC,MAAM,iCAAiC,CAAC;AAC9G,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AAiBjE;IAIU,uCAA+B;IAJzC;;IA0HA,CAAC;IAlHU,kCAAI,GAAd,UAAgB,OAAiB;QAAjC,iBAyBC;QAxBA,iBAAM,IAAI,YAAE,OAAO,CAAE,CAAC;QAEtB,SAAS;QACT,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,MAAM,CAAC,EAAE,CAAE,QAAQ,EAAE;YACpB,KAAI,CAAC,MAAM,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAExB,OAAO;QACP,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAE,KAAK,EAAE,OAAO,CAAE,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAM,MAAM,GAAG,CAAE,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC;QAC9E,IAAI,CAAC,QAAQ,CAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAE,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC;QAEtB,EAAE;QACF,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAG;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;SACnB;aAAM;YACN,IAAI,CAAC,aAAa,EAAE,CAAC;SACrB;IACF,CAAC;IAES,sCAAQ,GAAlB,UAAoB,IAAe,EAAE,MAAe,EAAE,KAAY,EAAE,OAA4B;QAC/F,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,EAAG;YAC9C,oBAAoB,CAAC,QAAQ,CAAE,IAAI,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,CAAE,CAAC;SAC7D;IACF,CAAC;IAES,sCAAQ,GAAlB,UAAoB,KAAY,EAAE,OAAiB;QAClD,IAAI,OAAO,EAAG;YACb,IAAI,OAAO,CAAC,MAAM,YAAY,aAAa,EAAG;gBAC7C,OAAO,OAAO,CAAC,MAAM,CAAC;aACtB;iBAAM;gBACN,OAAO,IAAI,CAAC,SAAS,CAAE,KAAK,EAAE,OAAO,CAAC,MAAM,CAAE,CAAC;aAC/C;SACD;QACD,OAAO,IAAI,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC;IAChC,CAAC;IAES,uCAAS,GAAnB,UAAqB,KAAY,EAAE,OAAiD;QACnF,OAAO,IAAI,yBAAyB,CAAS,OAAO,CAAE,CAAC;IACxD,CAAC;IAES,oCAAM,GAAhB,UAAkB,KAAY,EAAG,OAAiB;QACjD,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,EAAG;YAC7B,IAAI,OAAO,CAAC,IAAI,YAAY,aAAa,EAAG;gBAC3C,OAAO,OAAO,CAAC,IAAI,CAAC;aACpB;iBAAM;gBACN,OAAO,IAAI,CAAC,OAAO,CAAE,KAAK,EAAE,OAAO,CAAC,IAAI,CAAE,CAAC;aAC3C;SACD;QACD,OAAO,IAAI,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC;IAC9B,CAAC;IAES,qCAAO,GAAjB,UAAmB,KAAY,EAAE,OAAwC;QACxE,OAAO,IAAI,uBAAuB,CAAE,OAAO,CAAE,CAAC;IAC/C,CAAC;IAED,kCAAI,GAAJ;QACC,IAAI,CAAC,SAAS,CAAE,IAAI,CAAE,CAAC;IACxB,CAAC;IAED,mCAAK,GAAL;QACC,IAAI,CAAC,SAAS,CAAE,KAAK,CAAE,CAAC;IACzB,CAAC;IAED,oCAAM,GAAN;QACC,IAAI,CAAC,SAAS,CAAE,CAAE,IAAI,CAAC,QAAQ,EAAE,CAAE,CAAC;IACrC,CAAC;IAES,yCAAW,GAArB;QACC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,IAAI,YAAY,KAAK,EAAG;YAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;SACZ;aAAM;YACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACpB;IACF,CAAC;IAES,2CAAa,GAAvB;QACC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,IAAI,YAAY,KAAK,EAAG;YAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;SACZ;aAAM;YACN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACrB;IACF,CAAC;IAES,2CAAa,GAAvB,UAAyB,QAAoB,EAAE,QAAoB;QAClE,iBAAM,aAAa,YAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC;QAE1C,IAAI,WAAW,CAAC,QAAQ,CAAE,QAAQ,CAAE,EAAG;YACtC,IAAI,CAAE,WAAW,CAAC,QAAQ,CAAE,QAAQ,CAAE,EAAG;gBACxC,IAAI,CAAC,WAAW,EAAE,CAAC;aACnB;SACD;aAAM;YACN,IAAI,WAAW,CAAC,QAAQ,CAAE,QAAQ,CAAE,EAAG;gBACtC,IAAI,CAAC,aAAa,EAAE,CAAC;aACrB;SACD;IACF,CAAC;IAES,qCAAO,GAAjB;QACC,OAAO,qBAAqB,CAAC;IAC9B,CAAC;IAEM,gCAAY,GAAnB,UAA4B,OAAqC;QAChE,OAAO,QAAQ,IAAI,OAAO,CAAC;IAC5B,CAAC;IACF,0BAAC;AAAD,CAAC,AA1HD,CAIU,eAAe,GAsHxB","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Container, DisplayObject } from \"pixi.js\";\r\nimport { DBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DBaseStates } from \"./d-base-states\";\r\nimport { DLayoutVertical, DLayoutVerticalOptions, DThemeLayoutVertical } from \"./d-layout-vertical\";\r\nimport { DMenuItemExpandableBody, DMenuItemExpandableBodyOptions } from \"./d-menu-item-expandable-body\";\r\nimport { DMenuItemExpandableHeader, DMenuItemExpandableHeaderOptions } from \"./d-menu-item-expandable-header\";\r\nimport { DMenuItemExpandables } from \"./d-menu-item-expandables\";\r\nimport { DMenuItemOptionsUnion } from \"./d-menu-item-options-union\";\r\n\r\nexport interface DMenuItemExpandableOptions<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeMenuItemExpandable = DThemeMenuItemExpandable,\r\n> extends DLayoutVerticalOptions<THEME> {\r\n\theader: DisplayObject | DMenuItemExpandableHeaderOptions<VALUE>;\r\n\tbody?: Container | DMenuItemExpandableBodyOptions;\r\n\titems?: Array<DMenuItemOptionsUnion<VALUE> | DisplayObject>;\r\n\tsticky?: boolean;\r\n}\r\n\r\nexport interface DThemeMenuItemExpandable extends DThemeLayoutVertical {\r\n\r\n}\r\n\r\nexport class DMenuItemExpandable<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeMenuItemExpandable = DThemeMenuItemExpandable,\r\n\tOPTIONS extends DMenuItemExpandableOptions<VALUE, THEME> = DMenuItemExpandableOptions<VALUE, THEME>\r\n> extends DLayoutVertical<THEME, OPTIONS> {\r\n\tprotected _header!: DisplayObject;\r\n\tprotected _body!: DisplayObject;\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\t// Header\r\n\t\tconst theme = this.theme;\r\n\t\tconst header = this.toHeader( theme, options );\r\n\t\tthis._header = header;\r\n\t\theader.on( \"select\", (): void => {\r\n\t\t\tthis.toggle();\r\n\t\t});\r\n\t\tthis.addChild( header );\r\n\r\n\t\t// Body\r\n\t\tconst body = this.toBody( theme, options );\r\n\t\tthis._body = body;\r\n\t\tconst sticky = ( options && options.sticky != null ? options.sticky : false );\r\n\t\tthis.newItems( body, sticky, theme, options );\r\n\t\tthis.addChild( body );\r\n\r\n\t\t//\r\n\t\tif( this.isActive() ) {\r\n\t\t\tthis.onActivated();\r\n\t\t} else {\r\n\t\t\tthis.onDeactivated();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected newItems( body: Container, sticky: boolean, theme: THEME, options: OPTIONS | undefined ): void {\r\n\t\tif( options != null && options.items != null ) {\r\n\t\t\tDMenuItemExpandables.newItems( body, options.items, sticky );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toHeader( theme: THEME, options?: OPTIONS ): DisplayObject {\r\n\t\tif( options ) {\r\n\t\t\tif( options.header instanceof DisplayObject ) {\r\n\t\t\t\treturn options.header;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.newHeader( theme, options.header );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.newHeader( theme );\r\n\t}\r\n\r\n\tprotected newHeader( theme: THEME, options?: DMenuItemExpandableHeaderOptions<VALUE> ): DisplayObject {\r\n\t\treturn new DMenuItemExpandableHeader<VALUE>( options );\r\n\t}\r\n\r\n\tprotected toBody( theme: THEME,  options?: OPTIONS ): Container {\r\n\t\tif( options && options.body ) {\r\n\t\t\tif( options.body instanceof DisplayObject ) {\r\n\t\t\t\treturn options.body;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.newBody( theme, options.body );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.newBody( theme );\r\n\t}\r\n\r\n\tprotected newBody( theme: THEME, options?: DMenuItemExpandableBodyOptions ): Container {\r\n\t\treturn new DMenuItemExpandableBody( options );\r\n\t}\r\n\r\n\topen(): void {\r\n\t\tthis.setActive( true );\r\n\t}\r\n\r\n\tclose(): void {\r\n\t\tthis.setActive( false );\r\n\t}\r\n\r\n\ttoggle(): void {\r\n\t\tthis.setActive( ! this.isActive() );\r\n\t}\r\n\r\n\tprotected onActivated(): void {\r\n\t\tconst body = this._body;\r\n\t\tif( body instanceof DBase ) {\r\n\t\t\tbody.show();\r\n\t\t} else {\r\n\t\t\tbody.visible = true;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onDeactivated(): void {\r\n\t\tconst body = this._body;\r\n\t\tif( body instanceof DBase ) {\r\n\t\t\tbody.hide();\r\n\t\t} else {\r\n\t\t\tbody.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onStateChange( newState: DBaseState, oldState: DBaseState ): void {\r\n\t\tsuper.onStateChange( newState, oldState );\r\n\r\n\t\tif( DBaseStates.isActive( newState ) ) {\r\n\t\t\tif( ! DBaseStates.isActive( oldState ) ) {\r\n\t\t\t\tthis.onActivated();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( DBaseStates.isActive( oldState ) ) {\r\n\t\t\t\tthis.onDeactivated();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DMenuItemExpandable\";\r\n\t}\r\n\r\n\tstatic isCompatible<VALUE>( options: DMenuItemOptionsUnion<VALUE> ): options is DMenuItemExpandableOptions<VALUE> {\r\n\t\treturn \"header\" in options;\r\n\t}\r\n}\r\n"]}