{"version":3,"file":"d-table-body.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-body.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAe,KAAK,EAAa,MAAM,SAAS,CAAC;AAExD,OAAO,EAAE,KAAK,EAA4B,MAAM,UAAU,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,aAAa,EAAwB,MAAM,oBAAoB,CAAC;AAGzE,OAAO,EAAE,cAAc,EAAyB,MAAM,qBAAqB,CAAC;AAC5E,OAAO,EAAuB,uBAAuB,EAAE,MAAM,0BAA0B,CAAC;AACxF,OAAO,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAkB7D,IAAM,YAAY,GAAG,UACpB,KAAsB,EACtB,OAAqC,EACrC,aAAsC;IAEtC,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;IACtC,IAAI,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC;IACzB,IAAI,MAAM,IAAI,IAAI,EAAG;QACpB,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,EAAG;YAC3B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;SACrC;QACD,IAAI,MAAM,CAAC,OAAO,KAAK,SAAS,EAAG;YAClC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;SACzB;QACD,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,IAAI,aAAa,KAAK,uBAAuB,CAAC,IAAI,EAAG;YAClF,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC;SAC5B;QACD,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,EAAG;YAC3B,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;SAC/B;KACD;SAAM;QACN,MAAM,GAAG;YACR,OAAO,SAAA;YACP,MAAM,EAAE,KAAK,CAAC,YAAY,EAAE;YAC5B,WAAW,EAAE,CAAE,aAAa,KAAK,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAE;YACpF,MAAM,EAAE,OAAO,CAAC,MAAM;SACtB,CAAC;KACF;IACD,OAAO,MAAmC,CAAC;AAC5C,CAAC,CAAC;AAEF,IAAM,YAAY,GAAG,UAAO,MAAyD;IACpF,OAAO,CAAE,MAAM,IAAI,IAAI,IAAI,QAAQ,IAAI,MAAM,CAAE,CAAC;AACjD,CAAC,CAAC;AAOF;IAKU,8BAAqB;IAe9B,oBAAa,OAAgB;QAA7B,YACC,kBAAO,OAAO,CAAE,SAGhB;QAFA,KAAI,CAAC,QAAQ,CAAE,UAAU,CAAC,WAAW,EAAE,IAAI,CAAE,CAAC;QAC9C,KAAI,CAAC,KAAK,CAAC,IAAI,CAAE,MAAM,EAAE,KAAI,CAAC,KAAK,CAAE,CAAC;;IACvC,CAAC;IAES,yBAAI,GAAd,UAAgB,OAAgB;QAC/B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,UAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,WAAW;YACxE,IAAI,CAAC,IAAI,CAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAE,CAAC;QAC7E,CAAC,CAAC;QACF,iBAAM,IAAI,YAAE,OAAO,CAAE,CAAC;QAEtB,IAAM,IAAI,GAAG,CAAE,YAAY,CAAE,OAAO,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC3D,IAAI,cAAc,CAAO,OAAO,CAAC,IAAI,CAAqB,CAC1D,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QAClB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAM,UAAU,GAAG,YAAY,CAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,CAAC;QACvE,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,CAAE,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAE,CAAC;QAC3F,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,OAAO,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,6BAAQ,GAAR,UAAU,QAAgB,EAAE,SAAiB,EAAE,QAAgB,EAAE,SAAiB;QACjF,iBAAM,QAAQ,YAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAE,CAAC;QAC3D,IAAI,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAED,sBAAI,iCAAS;aAAb;YACC,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAC7B,CAAC;;;OAAA;IAED,yBAAI,GAAJ;QACC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC;QAC3B,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAG;YACjC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;SACzC;IACF,CAAC;IAED,2BAAM,GAAN,UAAQ,YAAqB;QAC5B,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC;QAC3B,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAG;YACjC,IAAI,YAAY,IAAI,IAAI,CAAC,mBAAmB,EAAG;gBAC9C,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,2BAA2B,CAAE,CAAC;aAChD;YACD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;SACzC;IACF,CAAC;IAED;;;;;OAKG;IACH,2BAAM,GAAN,UAAQ,QAAkB;QACzB,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAG;YAC/B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,QAAQ,EAAG;gBACd,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;aACxC;YACD,OAAO;SACP;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,QAAqC,CAAC;QACxD,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QACrC,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAElC,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAE1C,IAAM,sBAAsB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACzD,IAAI,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACnD,IAAI,WAAW,GAAG,oBAAoB,GAAG,sBAAsB,CAAC;QAEhE,IAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpC,IAAM,SAAS,GAAG,CAAC,GAAG,cAAc,GAAG,SAAS,CAAC;QACjD,IAAM,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAE,MAAM,EAAE,SAAS,CAAE,CAAC;QACvD,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAE,MAAM,GAAG,gBAAgB,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE,CAAC;QAE9E,IAAM,2BAA2B,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAC;QACtF,IAAM,2BAA2B,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,MAAM,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAE,CAAC;QAC3F,IAAM,sBAAsB,GAAG,2BAA2B,GAAG,CAAE,2BAA2B,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;QAC/G,IAAI,oBAAoB,GAAG,2BAA2B;YACrD,CAAC,CAAC,2BAA2B,GAAG,sBAAsB,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChF,IAAI,WAAW,GAAG,oBAAoB,GAAG,sBAAsB,CAAC;QAChE,IAAI,WAAW,GAAG,WAAW,IAAI,WAAW,GAAG,CAAC,IAAI,WAAW,EAAG;YACjE,WAAW,GAAG,WAAW,CAAC;YAC1B,oBAAoB,GAAG,sBAAsB,GAAG,WAAW,CAAC;SAC5D;QAED,IAAI,WAAW,GAAG,WAAW,EAAG;YAC/B,KAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,EAAG;gBAChD,IAAM,iBAAiB,GAAG,sBAAsB,GAAG,CAAC,CAAC;gBACrD,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,iBAAiB,GAAG,CAAC,CAAC,KAAK,CAAC,CAAE,CAAC;gBAC5D,IAAI,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;aACxB;YACD,WAAW,GAAG,WAAW,CAAC;YAC1B,oBAAoB,GAAG,sBAAsB,GAAG,WAAW,CAAC;SAC5D;aAAM,IAAI,WAAW,GAAG,WAAW,EAAG;YACtC,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,WAAW,IAAI,CAAC,EAAE,EAAE,CAAC,EAAG;gBACrD,IAAI,CAAC,WAAW,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,CAAC;aAC9B;YACD,WAAW,GAAG,WAAW,CAAC;YAC1B,oBAAoB,GAAG,sBAAsB,GAAG,WAAW,CAAC;SAC5D;QAED,IAAI,CAAC,oBAAoB,GAAG,sBAAsB,CAAC;QACnD,IAAI,CAAC,kBAAkB,GAAG,oBAAoB,CAAC;QAE/C,IAAM,wBAAwB,GAAG,sBAAsB,GAAG,sBAAsB,CAAC;QACjF,IAAM,2BAA2B,GAAG,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACvE,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,GAAG,2BAA2B,IAAI,2BAA2B,GAAG,UAAU,EAAG;YACjF,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YAC5B,IAAI,CAAC,GAAG,wBAAwB,EAAG;gBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,2BAA2B,EAAE,EAAE,CAAC,EAAG;oBACtD,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,CAAE,CAAC;iBACxC;gBACD,KAAK,IAAI,CAAC,GAAG,2BAA2B,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAG;oBAC/D,IAAI,CAAE,CAAC,GAAG,2BAA2B,CAAE,GAAG,IAAI,CAAE,CAAC,CAAE,CAAC;iBACpD;gBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,2BAA2B,EAAE,EAAE,CAAC,EAAG;oBACtD,IAAI,CAAE,UAAU,GAAG,2BAA2B,GAAG,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC,CAAE,CAAC;iBACjE;aACD;iBAAM;gBACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,2BAA2B,EAAE,EAAE,CAAC,EAAG;oBACtD,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAE,UAAU,GAAG,2BAA2B,GAAG,CAAC,CAAE,CAAE,CAAE,CAAC;iBACnF;gBACD,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,2BAA2B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAG;oBACxE,IAAI,CAAE,CAAC,GAAG,2BAA2B,CAAE,GAAG,IAAI,CAAE,CAAC,CAAE,CAAC;iBACpD;gBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,2BAA2B,EAAE,EAAE,CAAC,EAAG;oBACtD,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC,CAAE,CAAC;iBACtB;aACD;YACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SAChB;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAE,KAAU,EAAE,YAAqB,EAAE,KAAa,EAAE,aAAqB;YACzF,IAAM,GAAG,GAAG,IAAI,CAAE,KAAK,GAAG,sBAAsB,CAAE,CAAC;YACnD,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;YACnC,IAAI,SAAS,CAAC,QAAQ,CAAE,aAAa,CAAE,EAAG;gBACzC,GAAG,CAAC,SAAS,CAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,QAAQ,CAAE,CAAC;aACxD;iBAAM;gBACN,GAAG,CAAC,SAAS,CAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAE,CAAC;aAC1E;YACD,GAAG,CAAC,GAAG,CAAE,KAAK,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,CAAE,CAAC;QACzD,CAAC,EAAE,sBAAsB,EAAE,sBAAsB,GAAG,UAAU,CAAE,CAAC;QAEjE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,sBAAsB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAG;YACvE,IAAM,GAAG,GAAG,IAAI,CAAE,CAAC,CAAE,CAAC;YACtB,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAE,sBAAsB,GAAG,CAAC,CAAE,GAAG,SAAS,CAAC;YAC5D,GAAG,CAAC,SAAS,CAAE,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAE,CAAC;YACxD,GAAG,CAAC,KAAK,EAAE,CAAC;SACZ;QAED,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,EAAE,cAAc,IAAI,sBAAsB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAG;YAC1F,IAAM,GAAG,GAAG,IAAI,CAAE,CAAC,CAAE,CAAC;YACtB,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAE,sBAAsB,GAAG,CAAC,CAAE,GAAG,SAAS,CAAC;YAC5D,GAAG,CAAC,SAAS,CAAE,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,MAAM,CAAE,CAAC;YACxD,GAAG,CAAC,KAAK,EAAE,CAAC;SACZ;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,WAAW,CAAC;QACjC,OAAO,CAAC,MAAM,GAAG,gBAAgB,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,IAAI,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC;IACtB,CAAC;IAES,6BAAQ,GAAlB,UAAoB,GAAuB;QAC1C,GAAG,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QACjB,IAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAG;YACpD,IAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;YACxB,IAAI,IAAI,YAAY,KAAK,EAAG;gBAC3B,IAAI,CAAC,UAAU,CAAE,KAAK,CAAE,CAAC;aACzB;SACD;QACD,OAAO,GAAG,CAAC;IACZ,CAAC;IAES,2BAAM,GAAhB,UAAkB,MAAe;QAChC,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QACjC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;QACtB,IAAM,MAAM,GAAG,IAAI,aAAa,CAAO,OAAO,CAAE,CAAC;QACjD,MAAM,CAAC,EAAE,CAAE,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAE,CAAC;QACjD,OAAO,MAAM,CAAC;IACf,CAAC;IAED,iCAAY,GAAZ,UAAc,CAAS,EAAE,CAAS;QACjC,iBAAM,YAAY,YAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAC3B,IAAI,CAAC,wBAAwB,CAAE,CAAC,CAAE,CAAC;IACpC,CAAC;IAES,6CAAwB,GAAlC,UAAoC,CAAS;QAC5C,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC,GAAG,MAAM,EAAG;YAClC,IAAM,IAAI,GAAG,IAAI,CAAC,QAAqC,CAAC;YACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAG;gBACnD,IAAI,CAAE,CAAC,CAAE,CAAC,wBAAwB,CAAE,CAAC,CAAE,CAAC;aACxC;SACD;IACF,CAAC;IAED,oCAAe,GAAf,UAAiB,MAAa,EAAE,MAAiB;QAChD,iBAAM,eAAe,YAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QAExC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,MAAM,EAAG;YACZ,IAAM,MAAM,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC;YACnB,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC;SACxB;IACF,CAAC;IAED,iCAAY,GAAZ,UAAc,CAAmB;QAChC,IAAI,IAAI,CAAC,YAAY,EAAE,EAAG;YACzB,IAAM,KAAK,GAAG,UAAU,CAAC,aAAa,CAAC;YACvC,KAAK,CAAC,QAAQ,CAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAE,CAAC;YAChC,IAAI,CAAC,OAAO,CAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;YAC/C,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAG;gBAC3C,IAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAE,CAAC;gBAC/D,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;gBACjC,IAAI,CAAC,IAAI,cAAc,IAAI,cAAc,GAAG,MAAM,CAAC,IAAI,EAAE,EAAG;oBAC3D,IAAM,QAAQ,GAAG,CAAE,SAAS,CAAC,IAAI,KAAK,uBAAuB,CAAC,MAAM,CAAE,CAAC;oBACvE,IAAM,WAAW,GAAG,CAAE,QAAQ,CAAC;oBAC/B,IAAM,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;oBAC3C,IAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;oBACtC,IAAM,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;oBACxC,IAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAE,cAAc,CAAE,CAAC;oBAChD,IAAI,QAAQ,IAAI,SAAS,CAAC,OAAO,EAAE,IAAI,CAAE,CAAE,WAAW,IAAI,CAAE,OAAO,IAAI,QAAQ,CAAE,CAAE,EAAG;wBACrF,SAAS,CAAC,WAAW,CAAE,QAAQ,CAAE,CAAC;qBAClC;yBAAM,IAAI,OAAO,EAAG;wBACpB,SAAS,CAAC,MAAM,CAAE,QAAQ,CAAE,CAAC;qBAC7B;yBAAM,IAAI,QAAQ,EAAG;wBACrB,IAAM,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC;wBACpC,IAAI,YAAY,IAAI,IAAI,EAAG;4BAC1B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;4BAC3B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;4BAC3B,IAAM,cAAc,GAAG,MAAM,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;4BAC9C,IAAM,kBAAkB,GAAG,MAAM,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;4BACtD,IAAI,cAAc,IAAI,IAAI,IAAI,kBAAkB,IAAI,IAAI,EAAG;gCAC1D,IAAI,MAAM,GAAG,kBAAkB,GAAG,CAAC,CAAC;gCACpC,IAAI,IAAI,GAAG,cAAc,GAAG,CAAC,CAAC;gCAC9B,IAAI,cAAc,GAAG,kBAAkB,EAAG;oCACzC,MAAM,GAAG,cAAc,CAAC;oCACxB,IAAI,GAAG,kBAAkB,CAAC;iCAC1B;gCACD,IAAI,MAAM,GAAG,IAAI,EAAG;oCACnB,IAAM,UAAU,GAAa,EAAE,CAAC;oCAChC,IAAM,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC;oCACvC,IAAM,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC;oCACrC,IAAI,eAAe,EAAG;wCACrB,IAAI,aAAa,EAAG;4CACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAG;gDAC9D,IAAM,aAAa,GAAG,eAAe,CAAE,CAAC,CAAE,CAAC;gDAC3C,IAAI,MAAM,IAAI,aAAa,IAAI,aAAa,GAAG,IAAI,EAAG;oDACrD,UAAU,CAAC,IAAI,CAAE,aAAa,CAAE,aAAa,CAAE,CAAE,CAAC;iDAClD;6CACD;yCACD;6CAAM;4CACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAG;gDAC9D,IAAM,aAAa,GAAG,eAAe,CAAE,CAAC,CAAE,CAAC;gDAC3C,IAAI,MAAM,IAAI,aAAa,IAAI,aAAa,GAAG,IAAI,EAAG;oDACrD,UAAU,CAAC,IAAI,CAAE,aAAa,CAAE,CAAC;iDACjC;6CACD;yCACD;qCACD;yCAAM;wCACN,IAAI,aAAa,EAAG;4CACnB,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAG;gDACpC,UAAU,CAAC,IAAI,CAAE,aAAa,CAAE,CAAC,CAAE,CAAE,CAAC;6CACtC;yCACD;6CAAM;4CACN,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAG;gDACpC,UAAU,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;6CACrB;yCACD;qCACD;oCACD,SAAS,CAAC,MAAM,CAAE,UAAU,CAAE,CAAC;iCAC/B;6BACD;yBACD;qBACD;iBACD;aACD;SACD;IACF,CAAC;IAED,+BAAU,GAAV,UAAY,CAA0B,EAAE,kBAAkD;QACzF,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,IAAI,CAAC,YAAY,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,uBAAuB,CAAC,IAAI,EAAG;YACjF,IAAM,KAAK,GAAG,gBAAgB,CAAC,QAAQ,CAAE,CAAC,EAAE,kBAAkB,EAAE,UAAU,CAAC,aAAa,CAAE,CAAC;YAC3F,IAAI,CAAC,OAAO,CAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;YAC/C,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAClB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAG;gBACrC,IAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAE,CAAC;gBACzD,IAAI,CAAC,IAAI,cAAc,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAG;oBAChE,IAAM,KAAK,GAAG,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC;oBACzD,IAAM,IAAI,GAAG,IAAI,CAAC,QAAqC,CAAC;oBACxD,IAAI,CAAC,IAAI,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,EAAG;wBACvC,IAAM,GAAG,GAAG,IAAI,CAAE,KAAK,CAAE,CAAC;wBAC1B,IAAM,KAAK,GAAG,GAAG,CAAC,QAAmB,CAAC;wBACtC,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;wBACjC,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;wBAC9B,IAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;wBACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAE,WAAW,EAAE,aAAa,CAAE,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAG;4BAC9E,IAAM,IAAI,GAAG,KAAK,CAAE,WAAW,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;4BAC1C,IAAI,IAAI,CAAC,YAAY,EAAE,EAAG;gCACzB,IAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAC/B,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,EAAG;oCACjC,IAAI,CAAC,KAAK,EAAE,CAAC;oCACb,IAAI,IAAI,YAAY,WAAW,EAAG;wCACjC,IAAI,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;qCAClB;oCACD,MAAM,GAAG,IAAI,CAAC;iCACd;6BACD;yBACD;qBACD;iBACD;aACD;SACD;QACD,MAAM,GAAG,iBAAM,UAAU,YAAE,CAAC,EAAE,kBAAkB,CAAE,IAAI,MAAM,CAAC;QAC7D,OAAO,MAAM,CAAC;IACf,CAAC;IAES,4BAAO,GAAjB;QACC,OAAO,YAAY,CAAC;IACrB,CAAC;IAED,sBAAI,4BAAI;aAAR;YACC,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;;;OAAA;IA7WgB,wBAAa,GAAG,IAAI,KAAK,EAAE,CAAC;IA8W9C,iBAAC;CAAA,AApXD,CAKU,KAAK,GA+Wd;SApXY,UAAU","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { interaction, Point, Rectangle } from \"pixi.js\";\r\nimport InteractionEvent = interaction.InteractionEvent;\r\nimport { DBase, DBaseOptions, DThemeBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DButtonBase } from \"./d-button-base\";\r\nimport { DTableBodyRow, DTableBodyRowOptions } from \"./d-table-body-row\";\r\nimport { DTableColumn } from \"./d-table-column\";\r\nimport { DTableData, DTableDataOptions } from \"./d-table-data\";\r\nimport { DTableDataList, DTableDataListOptions } from \"./d-table-data-list\";\r\nimport { DTableDataSelection, DTableDataSelectionType } from \"./d-table-data-selection\";\r\nimport { UtilPointerEvent } from \"./util/util-pointer-event\";\r\n\r\nexport interface DTableBodyOptions<\r\n\tROW,\r\n\tDATA extends DTableData<ROW> = DTableDataList<ROW>,\r\n\tTHEME extends DThemeTableBody = DThemeTableBody\r\n> extends DBaseOptions<THEME> {\r\n\tcolumns?: Array<DTableColumn<ROW>>;\r\n\trow?: DTableBodyRowOptions<ROW>;\r\n\tdata?: DTableDataListOptions<ROW> | DATA;\r\n\toffset?: number;\r\n\tfrozen?: number;\r\n}\r\n\r\nexport interface DThemeTableBody extends DThemeBase {\r\n\tgetRowHeight(): number;\r\n}\r\n\r\nconst toRowOptions = <ROW, DATA extends DTableData<ROW>>(\r\n\ttheme: DThemeTableBody,\r\n\toptions: DTableBodyOptions<ROW, DATA>,\r\n\tselectionType: DTableDataSelectionType\r\n): DTableBodyRowOptions<ROW> => {\r\n\tconst columns = options.columns || [];\r\n\tlet result = options.row;\r\n\tif( result != null ) {\r\n\t\tif( result.height == null ) {\r\n\t\t\tresult.height = theme.getRowHeight();\r\n\t\t}\r\n\t\tif( result.columns === undefined ) {\r\n\t\t\tresult.columns = columns;\r\n\t\t}\r\n\t\tif( result.interactive == null && selectionType !== DTableDataSelectionType.NONE ) {\r\n\t\t\tresult.interactive = \"SELF\";\r\n\t\t}\r\n\t\tif( result.frozen == null ) {\r\n\t\t\tresult.frozen = options.frozen;\r\n\t\t}\r\n\t} else {\r\n\t\tresult = {\r\n\t\t\tcolumns,\r\n\t\t\theight: theme.getRowHeight(),\r\n\t\t\tinteractive: ( selectionType !== DTableDataSelectionType.NONE ? \"SELF\" : undefined ),\r\n\t\t\tfrozen: options.frozen\r\n\t\t};\r\n\t}\r\n\treturn result as DTableBodyRowOptions<ROW>;\r\n};\r\n\r\nconst isDTableData = <ROW>( target?: ROW[] | DTableDataOptions<ROW> | DTableData<ROW> ): target is DTableData<ROW> => {\r\n\treturn ( target != null && \"mapped\" in target );\r\n};\r\n\r\ntype OnRowChange<ROW> = (\r\n\tnewValue: unknown, oldValue: unknown,\r\n\trow: ROW, rowIndex: number, columnIndex: number\r\n) => void;\r\n\r\nexport class DTableBody<\r\n\tROW,\r\n\tDATA extends DTableData<ROW> = DTableDataList<ROW>,\r\n\tTHEME extends DThemeTableBody = DThemeTableBody,\r\n\tOPTIONS extends DTableBodyOptions<ROW, DATA, THEME> = DTableBodyOptions<ROW, DATA, THEME>\r\n> extends DBase<THEME, OPTIONS> {\r\n\tprotected static WORK_ON_CLICK = new Point();\r\n\tprotected _columns!: Array<DTableColumn<ROW>>;\r\n\tprotected _rowHeight!: number;\r\n\tprotected _rowIndexMappedStart!: number;\r\n\tprotected _rowIndexMappedEnd!: number;\r\n\tprotected _rowOptions!: DTableBodyRowOptions<ROW>;\r\n\tprotected _updateRowsCount!: number;\r\n\tprotected _isUpdateRowsCalled!: boolean;\r\n\tprotected _isUpdateRowsCalledForcibly!: boolean;\r\n\tprotected _workRows!: Array<DTableBodyRow<ROW>>;\r\n\tprotected _onRowChangeBound!: OnRowChange<ROW>;\r\n\r\n\tprotected _data!: DATA;\r\n\r\n\tconstructor( options: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t\tthis.setState( DBaseState.UNFOCUSABLE, true );\r\n\t\tthis._data.emit( \"init\", this._data );\r\n\t}\r\n\r\n\tprotected init( options: OPTIONS ) {\r\n\t\tthis.transform.position.y = options.offset || 0;\r\n\t\tthis._onRowChangeBound = ( newValue, oldValue, row, rowIndex, columnIndex ): void => {\r\n\t\t\tdata.emit( \"change\", newValue, oldValue, row, rowIndex, columnIndex, data );\r\n\t\t};\r\n\t\tsuper.init( options );\r\n\r\n\t\tconst data = ( isDTableData( options.data ) ? options.data :\r\n\t\t\tnew DTableDataList<ROW>( options.data ) as unknown as DATA\r\n\t\t);\r\n\t\tthis._data = data;\r\n\t\tdata.bind( this );\r\n\t\tconst theme = this.theme;\r\n\t\tconst rowOptions = toRowOptions( theme, options, data.selection.type );\r\n\t\tthis._rowOptions = rowOptions;\r\n\t\tthis._rowHeight = ( rowOptions.height != null ? rowOptions.height : theme.getRowHeight() );\r\n\t\tthis._columns = rowOptions.columns || [];\r\n\t\tthis._rowIndexMappedStart = 0;\r\n\t\tthis._rowIndexMappedEnd = 0;\r\n\t\tthis._updateRowsCount = 0;\r\n\t\tthis._isUpdateRowsCalled = false;\r\n\t\tthis._isUpdateRowsCalledForcibly = false;\r\n\t\tthis._workRows = [];\r\n\t}\r\n\r\n\tonResize( newWidth: number, newHeight: number, oldWidth: number, oldHeight: number ): void {\r\n\t\tsuper.onResize( newWidth, newHeight, oldWidth, oldHeight );\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tget selection(): DTableDataSelection<ROW> {\r\n\t\treturn this._data.selection;\r\n\t}\r\n\r\n\tlock(): void {\r\n\t\tthis._updateRowsCount += 1;\r\n\t\tif( this._updateRowsCount === 1 ) {\r\n\t\t\tthis._isUpdateRowsCalled = false;\r\n\t\t\tthis._isUpdateRowsCalledForcibly = false;\r\n\t\t}\r\n\t}\r\n\r\n\tunlock( callIfNeeded: boolean ): void {\r\n\t\tthis._updateRowsCount -= 1;\r\n\t\tif( this._updateRowsCount === 0 ) {\r\n\t\t\tif( callIfNeeded && this._isUpdateRowsCalled ) {\r\n\t\t\t\tthis.update( this._isUpdateRowsCalledForcibly );\r\n\t\t\t}\r\n\t\t\tthis._isUpdateRowsCalled = false;\r\n\t\t\tthis._isUpdateRowsCalledForcibly = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates rows. If the `forcibly` is true, some dirty checkings for\r\n\t * avoiding unnecessary state changes are skipped.\r\n\t *\r\n\t * @param forcibly true to update forcibly\r\n\t */\r\n\tupdate( forcibly?: boolean ): void {\r\n\t\tif( 0 < this._updateRowsCount ) {\r\n\t\t\tthis._isUpdateRowsCalled = true;\r\n\t\t\tif( forcibly ) {\r\n\t\t\t\tthis._isUpdateRowsCalledForcibly = true;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst content = this.parent;\r\n\t\tconst rows = this.children as Array<DTableBodyRow<ROW>>;\r\n\t\tconst height = content.parent.height;\r\n\t\tconst rowHeight = this._rowHeight;\r\n\r\n\t\tconst data = this._data;\r\n\t\tconst dataMappedSize = data.mapped.size();\r\n\r\n\t\tconst oldRowIndexMappedStart = this._rowIndexMappedStart;\r\n\t\tlet oldRowIndexMappedEnd = this._rowIndexMappedEnd;\r\n\t\tlet oldRowCount = oldRowIndexMappedEnd - oldRowIndexMappedStart;\r\n\r\n\t\tconst y = this.transform.position.y;\r\n\t\tconst newHeight = y + dataMappedSize * rowHeight;\r\n\t\tconst newContentHeight = Math.max( height, newHeight );\r\n\t\tconst newContentY = Math.max( height - newContentHeight, content.position.y );\r\n\r\n\t\tconst newRowIndexMappedLowerBound = Math.floor( (0 - (newContentY + y)) / rowHeight );\r\n\t\tconst newRowIndexMappedUpperBound = Math.floor( (height - (newContentY + y)) / rowHeight );\r\n\t\tconst newRowIndexMappedStart = newRowIndexMappedLowerBound - ( newRowIndexMappedLowerBound % 2 === 0 ? 2 : 1 );\r\n\t\tlet newRowIndexMappedEnd = newRowIndexMappedUpperBound +\r\n\t\t\t((newRowIndexMappedUpperBound - newRowIndexMappedStart + 1) % 2 === 0 ? 3 : 2);\r\n\t\tlet newRowCount = newRowIndexMappedEnd - newRowIndexMappedStart;\r\n\t\tif( newRowCount < oldRowCount && oldRowCount - 2 <= newRowCount ) {\r\n\t\t\tnewRowCount = oldRowCount;\r\n\t\t\tnewRowIndexMappedEnd = newRowIndexMappedStart + newRowCount;\r\n\t\t}\r\n\r\n\t\tif( oldRowCount < newRowCount ) {\r\n\t\t\tfor( let i = oldRowCount; i < newRowCount; ++i ) {\r\n\t\t\t\tconst oldRowIndexMapped = oldRowIndexMappedStart + i;\r\n\t\t\t\tconst newRow = this.newRow( (oldRowIndexMapped % 2) === 0 );\r\n\t\t\t\tthis.addChild( newRow );\r\n\t\t\t}\r\n\t\t\toldRowCount = newRowCount;\r\n\t\t\toldRowIndexMappedEnd = oldRowIndexMappedStart + oldRowCount;\r\n\t\t} else if( newRowCount < oldRowCount ) {\r\n\t\t\tfor( let i = oldRowCount - 1; newRowCount <= i; --i ) {\r\n\t\t\t\tthis.removeChild( rows[ i ] );\r\n\t\t\t}\r\n\t\t\toldRowCount = newRowCount;\r\n\t\t\toldRowIndexMappedEnd = oldRowIndexMappedStart + oldRowCount;\r\n\t\t}\r\n\r\n\t\tthis._rowIndexMappedStart = newRowIndexMappedStart;\r\n\t\tthis._rowIndexMappedEnd = newRowIndexMappedEnd;\r\n\r\n\t\tconst rowIndexMappedStartDelta = newRowIndexMappedStart - oldRowIndexMappedStart;\r\n\t\tconst rowIndexMappedStartDeltaAbs = Math.abs(rowIndexMappedStartDelta);\r\n\t\tconst rowsLength = rows.length;\r\n\t\tif( 0 < rowIndexMappedStartDeltaAbs && rowIndexMappedStartDeltaAbs < rowsLength ) {\r\n\t\t\tconst work = this._workRows;\r\n\t\t\tif( 0 < rowIndexMappedStartDelta ) {\r\n\t\t\t\tfor( let i = 0; i < rowIndexMappedStartDeltaAbs; ++i ) {\r\n\t\t\t\t\twork.push( this.resetRow( rows[ i ] ) );\r\n\t\t\t\t}\r\n\t\t\t\tfor( let i = rowIndexMappedStartDeltaAbs; i < rowsLength; ++i ) {\r\n\t\t\t\t\trows[ i - rowIndexMappedStartDeltaAbs ] = rows[ i ];\r\n\t\t\t\t}\r\n\t\t\t\tfor( let i = 0; i < rowIndexMappedStartDeltaAbs; ++i ) {\r\n\t\t\t\t\trows[ rowsLength - rowIndexMappedStartDeltaAbs + i ] = work[ i ];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor( let i = 0; i < rowIndexMappedStartDeltaAbs; ++i ) {\r\n\t\t\t\t\twork.push( this.resetRow( rows[ rowsLength - rowIndexMappedStartDeltaAbs + i ] ) );\r\n\t\t\t\t}\r\n\t\t\t\tfor( let i = rowsLength - rowIndexMappedStartDeltaAbs - 1; 0 <= i; --i ) {\r\n\t\t\t\t\trows[ i + rowIndexMappedStartDeltaAbs ] = rows[ i ];\r\n\t\t\t\t}\r\n\t\t\t\tfor( let i = 0; i < rowIndexMappedStartDeltaAbs; ++i ) {\r\n\t\t\t\t\trows[ i ] = work[ i ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twork.length = 0;\r\n\t\t}\r\n\r\n\t\tconst selection = data.selection;\r\n\t\tdata.mapped.each(( datum: ROW, supplimental: unknown, index: number, unmappedIndex: number ): void | boolean => {\r\n\t\t\tconst row = rows[ index - newRowIndexMappedStart ];\r\n\t\t\trow.position.y = index * rowHeight;\r\n\t\t\tif( selection.contains( unmappedIndex ) ) {\r\n\t\t\t\trow.setStates( DBaseState.ACTIVE, DBaseState.DISABLED );\r\n\t\t\t} else {\r\n\t\t\t\trow.setStates( DBaseState.NONE, DBaseState.ACTIVE | DBaseState.DISABLED );\r\n\t\t\t}\r\n\t\t\trow.set( datum, supplimental, unmappedIndex, forcibly );\r\n\t\t}, newRowIndexMappedStart, newRowIndexMappedStart + rowsLength );\r\n\r\n\t\tfor( let i = 0; newRowIndexMappedStart + i < 0 && i < rowsLength; ++i ) {\r\n\t\t\tconst row = rows[ i ];\r\n\t\t\trow.position.y = ( newRowIndexMappedStart + i ) * rowHeight;\r\n\t\t\trow.setStates( DBaseState.DISABLED, DBaseState.ACTIVE );\r\n\t\t\trow.unset();\r\n\t\t}\r\n\r\n\t\tfor( let i = rowsLength - 1; dataMappedSize <= newRowIndexMappedStart + i && 0 <= i; --i ) {\r\n\t\t\tconst row = rows[ i ];\r\n\t\t\trow.position.y = ( newRowIndexMappedStart + i ) * rowHeight;\r\n\t\t\trow.setStates( DBaseState.DISABLED, DBaseState.ACTIVE );\r\n\t\t\trow.unset();\r\n\t\t}\r\n\r\n\t\tthis.lock();\r\n\t\tcontent.position.y = newContentY;\r\n\t\tcontent.height = newContentHeight;\r\n\t\tthis.height = newHeight;\r\n\t\tthis.unlock( false );\r\n\t}\r\n\r\n\tprotected resetRow( row: DTableBodyRow<ROW> ): DTableBodyRow<ROW> {\r\n\t\trow.blur( true );\r\n\t\tconst cells = row.children;\r\n\t\tfor( let i = 0, imax = cells.length; i < imax; ++i ) {\r\n\t\t\tconst cell = cells[ i ];\r\n\t\t\tif( cell instanceof DBase ) {\r\n\t\t\t\tcell.setPressed( false );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn row;\r\n\t}\r\n\r\n\tprotected newRow( isEven: boolean ): DTableBodyRow<ROW> {\r\n\t\tconst options = this._rowOptions;\r\n\t\toptions.even = isEven;\r\n\t\tconst result = new DTableBodyRow<ROW>( options );\r\n\t\tresult.on( \"rowchange\", this._onRowChangeBound );\r\n\t\treturn result;\r\n\t}\r\n\r\n\tonParentMove( x: number, y: number ): void {\r\n\t\tsuper.onParentMove( x, y );\r\n\t\tthis.updateFrozenCellPosition( x );\r\n\t}\r\n\r\n\tprotected updateFrozenCellPosition( x: number ): void {\r\n\t\tconst frozen = this._rowOptions.frozen;\r\n\t\tif( frozen != null && 0 < frozen ) {\r\n\t\t\tconst rows = this.children as Array<DTableBodyRow<ROW>>;\r\n\t\t\tfor( let i = 0, imax = rows.length; i < imax; ++i ) {\r\n\t\t\t\trows[ i ].updateFrozenCellPosition( x );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetClippingRect( target: DBase, result: Rectangle ): void {\r\n\t\tsuper.getClippingRect( target, result );\r\n\r\n\t\tconst parent = this.parent;\r\n\t\tif( parent ) {\r\n\t\t\tconst shiftY = -parent.transform.position.y;\r\n\t\t\tresult.y += shiftY;\r\n\t\t\tresult.height -= shiftY;\r\n\t\t}\r\n\t}\r\n\r\n\tonRowClicked( e: InteractionEvent ): void {\r\n\t\tif( this.isActionable() ) {\r\n\t\t\tconst local = DTableBody.WORK_ON_CLICK;\r\n\t\t\tlocal.copyFrom( e.data.global );\r\n\t\t\tthis.toLocal( local, undefined, local, false );\r\n\t\t\tif( 0 <= this.parent.position.y + local.y ) {\r\n\t\t\t\tconst rowIndexMapped = Math.floor( local.y / this._rowHeight );\r\n\t\t\t\tconst data = this._data;\r\n\t\t\t\tconst mapped = data.mapped;\r\n\t\t\t\tconst selection = data.selection;\r\n\t\t\t\tif( 0 <= rowIndexMapped && rowIndexMapped < mapped.size() ) {\r\n\t\t\t\t\tconst isSingle = ( selection.type === DTableDataSelectionType.SINGLE );\r\n\t\t\t\t\tconst isNotSingle = ! isSingle;\r\n\t\t\t\t\tconst originalEvent = e.data.originalEvent;\r\n\t\t\t\t\tconst ctrlKey = originalEvent.ctrlKey;\r\n\t\t\t\t\tconst shiftKey = originalEvent.shiftKey;\r\n\t\t\t\t\tconst rowIndex = mapped.unmap( rowIndexMapped );\r\n\t\t\t\t\tif( isSingle || selection.isEmpty() || ! ( isNotSingle && ( ctrlKey || shiftKey ) ) ) {\r\n\t\t\t\t\t\tselection.clearAndAdd( rowIndex );\r\n\t\t\t\t\t} else if( ctrlKey ) {\r\n\t\t\t\t\t\tselection.toggle( rowIndex );\r\n\t\t\t\t\t} else if( shiftKey ) {\r\n\t\t\t\t\t\tconst lastRowIndex = selection.last;\r\n\t\t\t\t\t\tif( lastRowIndex != null ) {\r\n\t\t\t\t\t\t\tconst sorter = data.sorter;\r\n\t\t\t\t\t\t\tconst filter = data.filter;\r\n\t\t\t\t\t\t\tconst rowIndexSorted = sorter.map( rowIndex );\r\n\t\t\t\t\t\t\tconst lastRowIndexSorted = sorter.map( lastRowIndex );\r\n\t\t\t\t\t\t\tif( rowIndexSorted != null && lastRowIndexSorted != null ) {\r\n\t\t\t\t\t\t\t\tlet istart = lastRowIndexSorted + 1;\r\n\t\t\t\t\t\t\t\tlet iend = rowIndexSorted + 1;\r\n\t\t\t\t\t\t\t\tif( rowIndexSorted < lastRowIndexSorted ) {\r\n\t\t\t\t\t\t\t\t\tistart = rowIndexSorted;\r\n\t\t\t\t\t\t\t\t\tiend = lastRowIndexSorted;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif( istart < iend ) {\r\n\t\t\t\t\t\t\t\t\tconst rowIndices: number[] = [];\r\n\t\t\t\t\t\t\t\t\tconst indicesFiltered = filter.indices;\r\n\t\t\t\t\t\t\t\t\tconst indicesSorted = sorter.indices;\r\n\t\t\t\t\t\t\t\t\tif( indicesFiltered ) {\r\n\t\t\t\t\t\t\t\t\t\tif( indicesSorted ) {\r\n\t\t\t\t\t\t\t\t\t\t\tfor( let i = 0, imax = indicesFiltered.length; i < imax; ++i ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst indexFiltered = indicesFiltered[ i ];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif( istart <= indexFiltered && indexFiltered < iend ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trowIndices.push( indicesSorted[ indexFiltered ] );\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tfor( let i = 0, imax = indicesFiltered.length; i < imax; ++i ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst indexFiltered = indicesFiltered[ i ];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif( istart <= indexFiltered && indexFiltered < iend ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trowIndices.push( indexFiltered );\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tif( indicesSorted ) {\r\n\t\t\t\t\t\t\t\t\t\t\tfor( let i = istart; i < iend; ++i ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\trowIndices.push( indicesSorted[ i ] );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tfor( let i = istart; i < iend; ++i ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\trowIndices.push( i );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tselection.addAll( rowIndices );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonDblClick( e: MouseEvent | TouchEvent, interactionManager: interaction.InteractionManager ): boolean {\r\n\t\tlet result = false;\r\n\t\tconst data = this._data;\r\n\t\tif( this.isActionable() && data.selection.type !== DTableDataSelectionType.NONE ) {\r\n\t\t\tconst local = UtilPointerEvent.toGlobal( e, interactionManager, DTableBody.WORK_ON_CLICK );\r\n\t\t\tthis.toLocal( local, undefined, local, false );\r\n\t\t\tconst x = local.x;\r\n\t\t\tconst y = local.y;\r\n\t\t\tif( 0 <= this.parent.position.y + y ) {\r\n\t\t\t\tconst rowIndexMapped = Math.floor( y / this._rowHeight );\r\n\t\t\t\tif( 0 <= rowIndexMapped && rowIndexMapped < data.mapped.size() ) {\r\n\t\t\t\t\tconst index = rowIndexMapped - this._rowIndexMappedStart;\r\n\t\t\t\t\tconst rows = this.children as Array<DTableBodyRow<ROW>>;\r\n\t\t\t\t\tif( 0 <= index && index < rows.length ) {\r\n\t\t\t\t\t\tconst row = rows[ index ];\r\n\t\t\t\t\t\tconst cells = row.children as DBase[];\r\n\t\t\t\t\t\tconst cellsLength = cells.length;\r\n\t\t\t\t\t\tconst columns = this._columns;\r\n\t\t\t\t\t\tconst columnsLength = columns.length;\r\n\t\t\t\t\t\tfor( let i = 0, imax = Math.min( cellsLength, columnsLength ); i < imax; ++i ) {\r\n\t\t\t\t\t\t\tconst cell = cells[ cellsLength - i - 1 ];\r\n\t\t\t\t\t\t\tif( cell.isActionable() ) {\r\n\t\t\t\t\t\t\t\tconst dx = x - cell.position.x;\r\n\t\t\t\t\t\t\t\tif( 0 <= dx && dx <= cell.width ) {\r\n\t\t\t\t\t\t\t\t\tcell.focus();\r\n\t\t\t\t\t\t\t\t\tif( cell instanceof DButtonBase ) {\r\n\t\t\t\t\t\t\t\t\t\tcell.onClick( e );\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tresult = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult = super.onDblClick( e, interactionManager ) || result;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTableBody\";\r\n\t}\r\n\r\n\tget data(): DATA {\r\n\t\treturn this._data;\r\n\t}\r\n}\r\n"]}