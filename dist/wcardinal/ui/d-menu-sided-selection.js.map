{"version":3,"file":"d-menu-sided-selection.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-menu-sided-selection.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Container, utils } from \"pixi.js\";\r\nimport { DBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DListItem, DListItemSelection } from \"./d-list-item\";\r\nimport { DMenu } from \"./d-menu\";\r\nimport { isString } from \"./util/is-string\";\r\n\r\nexport enum DMenuSidedSelectionMode {\r\n\tNONE,\r\n\tSINGLE,\r\n\tSINGLE_ONCE,\r\n\tDEFAULT = SINGLE_ONCE\r\n}\r\n\r\nexport interface DMenuSidedSelectionOnOptions {\r\n\t[ name: string ]: Function;\r\n}\r\n\r\nexport interface DMenuSidedSelectionOptions {\r\n\tmode?: (keyof typeof DMenuSidedSelectionMode) | DMenuSidedSelectionMode;\r\n\ton?: DMenuSidedSelectionOnOptions;\r\n\tfilter?: ( item: DBase | null ) => boolean;\r\n}\r\n\r\nconst defaultFilter = () => true;\r\n\r\nexport class DMenuSidedSelection extends utils.EventEmitter implements DListItemSelection {\r\n\tprotected _content: Container;\r\n\tprotected _item: DBase | null;\r\n\tprotected _isDirty: boolean;\r\n\tprotected _mode: DMenuSidedSelectionMode;\r\n\tprotected _filter: ( item: DBase | null ) => boolean;\r\n\r\n\tconstructor( content: Container, options?: DMenuSidedSelectionOptions ) {\r\n\t\tsuper();\r\n\r\n\t\tthis._content = content;\r\n\t\tthis._item = null;\r\n\t\tthis._isDirty = true;\r\n\t\tthis._mode = ( options && options.mode != null ?\r\n\t\t\t(isString( options.mode ) ? DMenuSidedSelectionMode[ options.mode ] : options.mode) :\r\n\t\t\tDMenuSidedSelectionMode.DEFAULT\r\n\t\t);\r\n\t\tthis._filter = ( options && options.filter ) || this.getFilterDefault();\r\n\r\n\t\t// Events\r\n\t\tconst on = options && options.on;\r\n\t\tif( on ) {\r\n\t\t\tfor( const name in on ) {\r\n\t\t\t\tthis.on( name, on[ name ] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoDirty() {\r\n\t\tthis._isDirty = true;\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tif( this._isDirty ) {\r\n\t\t\tthis._isDirty = false;\r\n\t\t\tthis.update_( this._content );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected hasMenu( child: any ): child is { menu: DMenu<any> } {\r\n\t\treturn child && child.menu instanceof DMenu;\r\n\t}\r\n\r\n\tprotected update_( root: Container ): void {\r\n\t\tconst children = root.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tif( child instanceof DListItem ) {\r\n\t\t\t\tif( child.isActive() ) {\r\n\t\t\t\t\tthis.set_( child, false );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( child instanceof Container ) {\r\n\t\t\t\tthis.update_( child );\r\n\t\t\t}\r\n\r\n\t\t\tif( this.hasMenu( child ) ) {\r\n\t\t\t\tthis.update_( child.menu );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tadd( item: DBase ): void {\r\n\t\tthis.update();\r\n\t\tthis.set_( item, true );\r\n\t}\r\n\r\n\tset( item: DBase ): void {\r\n\t\tthis.update();\r\n\t\tthis.set_( item, true );\r\n\t}\r\n\r\n\tget(): DBase | null {\r\n\t\tthis.update();\r\n\t\treturn this._item;\r\n\t}\r\n\r\n\tsize(): number {\r\n\t\treturn ( this._item ? 1 : 0 );\r\n\t}\r\n\r\n\tisEmpty(): boolean {\r\n\t\treturn this._item == null;\r\n\t}\r\n\r\n\tremove( item: DBase ): void {\r\n\t\tthis.update();\r\n\t\tif( this._item === item ) {\r\n\t\t\tthis.set_( null, true );\r\n\t\t}\r\n\t}\r\n\r\n\tclear(): void {\r\n\t\tthis.update();\r\n\t\tthis.set_( null, true );\r\n\t}\r\n\r\n\tprotected getFilterDefault(): ( item: DBase | null ) => boolean {\r\n\t\treturn defaultFilter;\r\n\t}\r\n\r\n\tprotected set_( item: DBase | null, emit: boolean ): void {\r\n\t\tconst oldItem = this._item;\r\n\t\tconst mode = this._mode;\r\n\t\tif( mode !== DMenuSidedSelectionMode.NONE && this._filter( item ) && oldItem !== item ) {\r\n\t\t\tthis.setState( oldItem, mode, false );\r\n\t\t\tthis._item = item;\r\n\t\t\tthis.setState( item, mode, true );\r\n\t\t\tif( emit ) {\r\n\t\t\t\tthis.emit( \"change\", this );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected setState( item: DBase | null, mode: DMenuSidedSelectionMode, isOn: boolean ): void {\r\n\t\tif( item ) {\r\n\t\t\tif( mode === DMenuSidedSelectionMode.SINGLE ) {\r\n\t\t\t\titem.setState( DBaseState.ACTIVE, isOn );\r\n\t\t\t} else {\r\n\t\t\t\titem.setState( DBaseState.ACTIVE | DBaseState.READ_ONLY, isOn );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}