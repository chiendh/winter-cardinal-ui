{"version":3,"file":"d-pane.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-pane.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Point } from \"pixi.js\";\r\nimport { DApplications } from \"./d-applications\";\r\nimport { DBase, DBaseOptions, DThemeBase } from \"./d-base\";\r\nimport { DBaseOverflowMask } from \"./d-base-overflow-mask\";\r\nimport { DContent, DContentOptions } from \"./d-content\";\r\nimport { DDragMode } from \"./d-drag-mode\";\r\nimport { DScrollBar, DScrollBarOptions } from \"./d-scroll-bar\";\r\nimport { DScrollBarHorizontal } from \"./d-scroll-bar-horizontal\";\r\nimport { DScrollBarVertical } from \"./d-scroll-bar-vertical\";\r\nimport { isString } from \"./util/is-string\";\r\nimport { UtilDrag } from \"./util/util-drag\";\r\nimport { UtilWheelEventDeltas } from \"./util/util-wheel-event\";\r\n\r\nexport interface DPaneDragOptions {\r\n\tmode?: (keyof typeof DDragMode) | DDragMode;\r\n}\r\n\r\nexport interface DPaneBarOptions {\r\n\tvertical?: DScrollBarOptions;\r\n\thorizontal?: DScrollBarOptions;\r\n}\r\n\r\nexport interface DPaneOptions<\r\n\tTHEME extends DThemePane = DThemePane,\r\n\tCONTENT_OPTIONS extends DBaseOptions = DContentOptions\r\n> extends DBaseOptions<THEME> {\r\n\tmask?: boolean;\r\n\tcontent?: CONTENT_OPTIONS | DBase;\r\n\tbar?: DPaneBarOptions;\r\n\tdrag?: DPaneDragOptions;\r\n}\r\n\r\nexport interface DThemePane extends DThemeBase {\r\n\tisOverflowMaskEnabled(): boolean;\r\n\tgetWheelSpeed(): number;\r\n\tgetDragMode(): DDragMode;\r\n}\r\n\r\n// Option parsers\r\nconst isOverflowMaskEnabled = <\r\n\tTHEME extends DThemePane,\r\n\tCONTENT_OPTIONS extends DBaseOptions\r\n>( theme: THEME, options?: DPaneOptions<THEME, CONTENT_OPTIONS> ): boolean => {\r\n\tif( options && options.mask != null ) {\r\n\t\treturn options.mask;\r\n\t}\r\n\treturn theme.isOverflowMaskEnabled();\r\n};\r\n\r\nconst toBarOptionsVertical = ( options?: DPaneOptions ): DScrollBarOptions | undefined => {\r\n\treturn options && options.bar && options.bar.vertical;\r\n};\r\n\r\nconst toBarOptionsHorizontal = ( options?: DPaneOptions ): DScrollBarOptions | undefined => {\r\n\treturn options && options.bar && options.bar.horizontal;\r\n};\r\n\r\n// Class\r\nexport class DPane<\r\n\tTHEME extends DThemePane = DThemePane,\r\n\tCONTENT_OPTIONS extends DBaseOptions = DContentOptions,\r\n\tOPTIONS extends DPaneOptions<THEME, CONTENT_OPTIONS> = DPaneOptions<THEME, CONTENT_OPTIONS>\r\n> extends DBase<THEME, OPTIONS> {\r\n\tprotected static WORK_ON_FOCUSED = new Point();\r\n\tprotected _content!: DBase;\r\n\tprotected _overflowMask!: DBaseOverflowMask | null;\r\n\tprotected _verticalBar?: DScrollBarVertical;\r\n\tprotected _horizontalBar?: DScrollBarHorizontal;\r\n\tprotected _dragUtil?: UtilDrag;\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tthis._overflowMask = null;\r\n\r\n\t\t// Content\r\n\t\tconst theme = this.theme;\r\n\t\tconst content = this._content = this.toContent( options );\r\n\t\tif( isOverflowMaskEnabled( theme, options ) ) {\r\n\t\t\tthis.mask = this.getOrCreateOverflowMask();\r\n\t\t}\r\n\t\tthis.addChild( content );\r\n\r\n\t\t// Scroll bar\r\n\t\tthis.initScrollBar( content, theme, options );\r\n\r\n\t\t// Drag\r\n\t\tthis.initDrag( content, theme, options );\r\n\t}\r\n\r\n\tprotected initDrag( content: DBase, theme: THEME, options?: OPTIONS ): void {\r\n\t\tconst dragMode = ( options && options.drag && options.drag.mode != null ?\r\n\t\t\t( isString( options.drag.mode ) ? DDragMode[ options.drag.mode ] : options.drag.mode ) :\r\n\t\t\ttheme.getDragMode()\r\n\t\t);\r\n\t\t// Edge does not fire the wheel event when scrolling using the 2-fingure scroll gesture on a touchpad.\r\n\t\t// Instead, it fires touch events. This is why the dragging is enabled regardless of the `UtilPointerEvent.touchable`.\r\n\t\t// https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7134034/\r\n\t\tif( dragMode === DDragMode.ON || dragMode === DDragMode.TOUCH ) {\r\n\t\t\tconst position = new Point();\r\n\t\t\tthis._dragUtil = new UtilDrag({\r\n\t\t\t\ttarget: this,\r\n\t\t\t\ttouch: dragMode === DDragMode.TOUCH,\r\n\t\t\t\ton: {\r\n\t\t\t\t\tstart: (): void => {\r\n\t\t\t\t\t\tposition.copyFrom( content.position );\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmove: ( dx: number, dy: number ): void => {\r\n\t\t\t\t\t\tposition.set( position.x + dx, position.y + dy );\r\n\t\t\t\t\t\tcontent.position.set(\r\n\t\t\t\t\t\t\tthis.toContentX( content, position.x ),\r\n\t\t\t\t\t\t\tthis.toContentY( content, position.y )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onRegionMoveX( content: DBase, start: number ) {\r\n\t\tconst dragUtil = this._dragUtil;\r\n\t\tif( dragUtil != null ) {\r\n\t\t\tdragUtil.stop();\r\n\t\t}\r\n\t\tcontent.x = - content.width * start;\r\n\t}\r\n\r\n\tprotected onRegionMoveY( content: DBase, start: number ) {\r\n\t\tconst dragUtil = this._dragUtil;\r\n\t\tif( dragUtil != null ) {\r\n\t\t\tdragUtil.stop();\r\n\t\t}\r\n\t\tcontent.y = - content.height * start;\r\n\t}\r\n\r\n\tprotected initScrollBar( content: DBase, theme: THEME, options?: OPTIONS ): void {\r\n\t\t// Vertical bar\r\n\t\tconst verticalBar = this._verticalBar = new DScrollBarVertical( toBarOptionsVertical( options ) );\r\n\t\tverticalBar.on( \"regionmove\", ( start: number ): void => {\r\n\t\t\tthis.onRegionMoveY( content, start );\r\n\t\t});\r\n\t\tthis.addChild( verticalBar );\r\n\r\n\t\t// Horizontal bar\r\n\t\tconst horizontalBar = this._horizontalBar = new DScrollBarHorizontal( toBarOptionsHorizontal( options ) );\r\n\t\thorizontalBar.on( \"regionmove\", ( start: number ): void => {\r\n\t\t\tthis.onRegionMoveX( content, start );\r\n\t\t});\r\n\t\tthis.addChild( horizontalBar );\r\n\r\n\t\t//\r\n\t\tcontent.on( \"move\", (): void => {\r\n\t\t\tthis.onContentChanged();\r\n\t\t});\r\n\t\tcontent.on( \"resize\", (): void => {\r\n\t\t\tthis.onContentChanged();\r\n\t\t});\r\n\t\tthis.updateScrollBar();\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DPane\";\r\n\t}\r\n\r\n\tget content(): DBase {\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\tprotected toContent( options?: OPTIONS ): DBase {\r\n\t\tif( options && options.content ) {\r\n\t\t\tconst content = options.content;\r\n\t\t\tif( content instanceof DBase ) {\r\n\t\t\t\treturn content;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.newContent( content );\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.newContent();\r\n\t}\r\n\r\n\tprotected newContent( options?: CONTENT_OPTIONS ): DBase {\r\n\t\treturn new DContent( options );\r\n\t}\r\n\r\n\tprotected getOrCreateOverflowMask(): DBaseOverflowMask {\r\n\t\tif( this._overflowMask == null ) {\r\n\t\t\tthis._overflowMask = new DBaseOverflowMask( this );\r\n\t\t\tthis.addReflowable( this._overflowMask );\r\n\t\t\tthis.toDirty();\r\n\t\t}\r\n\t\treturn this._overflowMask;\r\n\t}\r\n\r\n\tonWheel( e: WheelEvent, deltas: UtilWheelEventDeltas, global: Point ): boolean {\r\n\t\tconst content = this._content;\r\n\t\tconst x = this.getWheelContentX( content, deltas.deltaX * deltas.lowest );\r\n\t\tconst y = this.getWheelContentY( content, deltas.deltaY * deltas.lowest );\r\n\t\tif( content.x !== x || content.y !== y ) {\r\n\t\t\tconst dragUtil = this._dragUtil;\r\n\t\t\tif( dragUtil != null ) {\r\n\t\t\t\tdragUtil.stop();\r\n\t\t\t}\r\n\t\t\tcontent.position.set( x, y );\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected getWheelContentX( content: DBase, delta: number ): number {\r\n\t\tif( 0 < delta || delta < 0 ) {\r\n\t\t\tconst speed = this.theme.getWheelSpeed();\r\n\t\t\treturn this.toContentX( content, content.x - delta * speed );\r\n\t\t}\r\n\t\treturn content.x;\r\n\t}\r\n\r\n\tprotected getWheelContentY( content: DBase, delta: number ): number {\r\n\t\tif( 0 < delta || delta < 0 ) {\r\n\t\t\tconst speed = this.theme.getWheelSpeed();\r\n\t\t\treturn this.toContentY( content, content.y + delta * speed );\r\n\t\t}\r\n\t\treturn content.y;\r\n\t}\r\n\r\n\tprotected toContentX( content: DBase, x: number ): number {\r\n\t\treturn Math.min( 0, Math.max( this.width - content.width, x ) );\r\n\t}\r\n\r\n\tprotected toContentY( content: DBase, y: number ): number {\r\n\t\treturn Math.min( 0, Math.max( this.height - content.height, y ) );\r\n\t}\r\n\r\n\tprotected isRefitable( target: any ): target is DBase<any, any> {\r\n\t\treturn super.isRefitable( target ) && ! ( target instanceof DScrollBar );\r\n\t}\r\n\r\n\tonResize( newWidth: number, newHeight: number, oldWidth: number, oldHeight: number ): void {\r\n\t\tsuper.onResize( newWidth, newHeight, oldWidth, oldHeight );\r\n\t\tthis.updateScrollBar();\r\n\t}\r\n\r\n\tprotected onContentChanged(): void {\r\n\t\tthis.updateScrollBar();\r\n\t}\r\n\r\n\tprotected updateScrollBar(): void {\r\n\t\tconst verticalBar = this._verticalBar;\r\n\t\tconst horizontalBar = this._horizontalBar;\r\n\t\tif( verticalBar != null && horizontalBar != null ) {\r\n\t\t\tthis.updateScrollBarRegions( verticalBar, horizontalBar );\r\n\t\t\tthis.updateScrollBarVisibilities( verticalBar, horizontalBar );\r\n\t\t\tthis.updateScrollBarPositions( verticalBar, horizontalBar );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getScrollBarOffsetHorizontalStart( size: number ): number {\r\n\t\treturn size * 0.5;\r\n\t}\r\n\r\n\tprotected getScrollBarOffsetHorizontalEnd( size: number ): number {\r\n\t\treturn size * 0.5;\r\n\t}\r\n\r\n\tprotected getScrollBarOffsetVerticalStart( size: number ): number {\r\n\t\treturn size * 0.5;\r\n\t}\r\n\r\n\tprotected getScrollBarOffsetVerticalEnd( size: number ): number {\r\n\t\treturn size * 0.5;\r\n\t}\r\n\r\n\tprotected updateScrollBarPositions( verticalBar: DScrollBarVertical, horizontalBar: DScrollBarHorizontal ): void {\r\n\t\tconst width = this.width;\r\n\t\tconst height = this.height;\r\n\r\n\t\tconst verticalBarWidth = verticalBar.width;\r\n\t\tconst verticalBarOffsetStart = this.getScrollBarOffsetVerticalStart( verticalBarWidth );\r\n\t\tconst verticalBarOffsetEnd = this.getScrollBarOffsetVerticalEnd( verticalBarWidth );\r\n\t\tverticalBar.position.set( width - verticalBarWidth, verticalBarOffsetStart );\r\n\t\tverticalBar.height = height - verticalBarOffsetStart - verticalBarOffsetEnd;\r\n\r\n\t\tconst horizontalBarHeight = horizontalBar.height;\r\n\t\tconst horizontalBarOffsetStart = this.getScrollBarOffsetHorizontalStart( horizontalBarHeight );\r\n\t\tconst horizontalBarOffsetEnd = this.getScrollBarOffsetHorizontalEnd( horizontalBarHeight );\r\n\t\thorizontalBar.position.set( horizontalBarOffsetStart, height - horizontalBarHeight );\r\n\t\thorizontalBar.width = width - horizontalBarOffsetStart - horizontalBarOffsetEnd;\r\n\t}\r\n\r\n\tprotected updateScrollBarRegions( verticalBar: DScrollBarVertical, horizontalBar: DScrollBarHorizontal ): void {\r\n\t\tconst content = this._content;\r\n\t\tconst x = -content.x;\r\n\t\tconst y = -content.y;\r\n\t\thorizontalBar.setRegion( x, x + this.width, content.width );\r\n\t\tverticalBar.setRegion( y, y + this.height, content.height );\r\n\t}\r\n\r\n\tprotected updateScrollBarVisibilities( verticalBar: DScrollBarVertical, horizontalBar: DScrollBarHorizontal ): void {\r\n\t\tconst isChangedHorizontal = this.updateScrollBarVisibility( horizontalBar );\r\n\t\tconst isChangedVertical = this.updateScrollBarVisibility( verticalBar );\r\n\t\tif( isChangedHorizontal || isChangedVertical ) {\r\n\t\t\t// Update the overflow mask\r\n\t\t\tconst overflowMask = this._overflowMask;\r\n\t\t\tif( overflowMask != null ) {\r\n\t\t\t\tif( horizontalBar.visible || verticalBar.visible ) {\r\n\t\t\t\t\tconst content = this._content;\r\n\t\t\t\t\tif( content.mask !== overflowMask ) {\r\n\t\t\t\t\t\tcontent.mask = overflowMask;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst content = this._content;\r\n\t\t\t\t\tif( content.mask ) {\r\n\t\t\t\t\t\t(content as any).mask = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Rerender\r\n\t\t\tDApplications.update( this );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateScrollBarVisibility( bar: DScrollBar ): boolean {\r\n\t\tconst isRegionVisible = bar.isRegionVisible();\r\n\t\tif( bar.visible !== isRegionVisible ) {\r\n\t\t\tbar.visible = isRegionVisible;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected onChildFocused( focused: DBase ): void {\r\n\t\tconst work = DPane.WORK_ON_FOCUSED;\r\n\t\tconst content = this.content;\r\n\t\tconst contentX = content.x;\r\n\t\tconst contentY = content.y;\r\n\t\tconst contentWidth = content.width;\r\n\t\tconst contentHeight = content.height;\r\n\r\n\t\twork.set( 0, 0 );\r\n\t\tfocused.toGlobal( work, work, false );\r\n\t\tcontent.toLocal( work, undefined, work, false );\r\n\t\tconst x0 = contentX + Math.min( contentWidth, Math.max( 0, work.x ) );\r\n\t\tconst y0 = contentY + Math.min( contentHeight, Math.max( 0, work.y ) );\r\n\r\n\t\twork.set( focused.width, focused.height );\r\n\t\tfocused.toGlobal( work, work, true );\r\n\t\tcontent.toLocal( work, undefined, work, true );\r\n\t\tconst x1 = contentX + Math.min( contentWidth, Math.max( 0, work.x ) );\r\n\t\tconst y1 = contentY + Math.min( contentHeight, Math.max( 0, work.y ) );\r\n\r\n\t\tconst width = this.width;\r\n\t\tlet newX: number | null = null;\r\n\t\tif( x0 < 0 ) {\r\n\t\t\tif( x1 <= width ) {\r\n\t\t\t\tnewX = contentX - Math.max( x0, x1 - width );\r\n\t\t\t\tnewX = Math.max( width - contentWidth, Math.min( 0, newX ) );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( width < x1 ) {\r\n\t\t\t\tnewX = contentX - Math.min( x0, x1 - width );\r\n\t\t\t\tnewX = Math.max( width - contentWidth, Math.min( 0, newX ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst height = this.height;\r\n\t\tlet newY: number | null = null;\r\n\t\tif( y0 < 0 ) {\r\n\t\t\tif( y1 <= height ) {\r\n\t\t\t\tnewY = contentY - Math.max( y0, y1 - height );\r\n\t\t\t\tnewY = Math.max( height - contentHeight, Math.min( 0, newY ) );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( height < y1 ) {\r\n\t\t\t\tnewY = contentY - Math.min( y0, y1 - height );\r\n\t\t\t\tnewY = Math.max( height - contentHeight, Math.min( 0, newY ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( newX != null ) {\r\n\t\t\tif( newY != null ) {\r\n\t\t\t\tcontent.position.set( newX, newY );\r\n\t\t\t} else {\r\n\t\t\t\tcontent.position.x = newX;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( newY != null ) {\r\n\t\t\t\tcontent.position.y = newY;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.onChildFocused( focused );\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\t// Overflow mask\r\n\t\tconst overflowMask = this._overflowMask;\r\n\t\tif( overflowMask != null ) {\r\n\t\t\tthis._overflowMask = null;\r\n\t\t\toverflowMask.destroy();\r\n\t\t}\r\n\t\t(this as any).mask = null;\r\n\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n"]}