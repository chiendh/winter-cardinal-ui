{"version":3,"file":"d-base-background-mesh.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-base-background-mesh.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,IAAI,EAAE,YAAY,EAAqB,MAAM,SAAS,CAAC;AAChE,OAAO,EAAE,2BAA2B,EAAE,MAAM,mCAAmC,CAAC;AAGhF;IAAyC,uCAAI;IAI5C,6BAAa,OAAgB,EAAE,UAAkB,EAAE,UAAuB;eACzE,kBACC,IAAI,2BAA2B,CAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,UAAU,CAAE,EAC5E,IAAI,YAAY,CAAE,OAAO,CAAE,CAC3B;IACF,CAAC;IAED,sBAAI,wCAAO;aAAX;YACC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QAC5B,CAAC;aAED,UAAa,OAAgB;YAC5B,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,OAAO,EAAG;gBACrC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;gBAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;aAChC;QACF,CAAC;;;OAPA;IASD,sBAAI,sCAAK;aAAT;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC5B,CAAC;aAED,UAAW,KAAa;YACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMD,sBAAI,uCAAM;aAAV;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC7B,CAAC;aAED,UAAY,MAAc;YACzB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;QAC/B,CAAC;;;OAJA;IAMD,sBAAI,2CAAU;aAAd;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACjC,CAAC;aAED,UAAgB,UAAkB;YACjC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;QACvC,CAAC;;;OAJA;IAMD,sBAAI,2CAAU;aAAd;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACjC,CAAC;aAED,UAAgB,UAAuB;YACtC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;QACvC,CAAC;;;OAJA;IAMS,qCAAO,GAAjB,UAAmB,QAAkB;QACpC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACvB,iBAAM,OAAO,YAAE,QAAQ,CAAE,CAAC;IAC3B,CAAC;IAED,oCAAM,GAAN;QACC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IACF,0BAAC;AAAD,CAAC,AA9DD,CAAyC,IAAI,GA8D5C","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Mesh, MeshMaterial, Renderer, Texture } from \"pixi.js\";\r\nimport { DBaseBackgroundMeshGeometry } from \"./d-base-background-mesh-geometry\";\r\nimport { DCornerMask } from \"./d-corner-mask\";\r\n\r\nexport class DBaseBackgroundMesh extends Mesh {\r\n\tgeometry!: DBaseBackgroundMeshGeometry;\r\n\tshader!: MeshMaterial;\r\n\r\n\tconstructor( texture: Texture, borderSize: number, cornerMask: DCornerMask ) {\r\n\t\tsuper(\r\n\t\t\tnew DBaseBackgroundMeshGeometry( texture, 100, 100, borderSize, cornerMask ),\r\n\t\t\tnew MeshMaterial( texture )\r\n\t\t);\r\n\t}\r\n\r\n\tget texture() {\r\n\t\treturn this.shader.texture;\r\n\t}\r\n\r\n\tset texture( texture: Texture ) {\r\n\t\tif( this.shader.texture !== texture ) {\r\n\t\t\tthis.shader.texture = texture;\r\n\t\t\tthis.geometry.texture = texture;\r\n\t\t}\r\n\t}\r\n\r\n\tget width(): number {\r\n\t\treturn this.geometry.width;\r\n\t}\r\n\r\n\tset width( width: number ) {\r\n\t\tthis.geometry.width = width;\r\n\t}\r\n\r\n\tget height(): number {\r\n\t\treturn this.geometry.height;\r\n\t}\r\n\r\n\tset height( height: number ) {\r\n\t\tthis.geometry.height = height;\r\n\t}\r\n\r\n\tget borderSize(): number {\r\n\t\treturn this.geometry.cornerMask;\r\n\t}\r\n\r\n\tset borderSize( borderSize: number ) {\r\n\t\tthis.geometry.borderSize = borderSize;\r\n\t}\r\n\r\n\tget cornerMask(): DCornerMask {\r\n\t\treturn this.geometry.cornerMask;\r\n\t}\r\n\r\n\tset cornerMask( cornerMask: DCornerMask ) {\r\n\t\tthis.geometry.cornerMask = cornerMask;\r\n\t}\r\n\r\n\tprotected _render( renderer: Renderer ): void {\r\n\t\tthis.geometry.update();\r\n\t\tsuper._render( renderer );\r\n\t}\r\n\r\n\tupdate(): void {\r\n\t\tthis.geometry.update();\r\n\t}\r\n}\r\n"]}