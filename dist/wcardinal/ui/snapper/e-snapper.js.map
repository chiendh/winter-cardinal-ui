{"version":3,"file":"e-snapper.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/snapper/e-snapper.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DisplayObject, IPoint, Matrix, Point, Rectangle, utils } from \"pixi.js\";\r\nimport { DDiagramSerializedSnap } from \"../d-diagram-serialized\";\r\nimport { isNaN } from \"../util/is-nan\";\r\nimport { ESnapperGrid } from \"./e-snapper-grid\";\r\nimport { ESnapperResult } from \"./e-snapper-result\";\r\nimport { ESnapperResultScale } from \"./e-snapper-result-scale\";\r\nimport { ESnapperTarget } from \"./e-snapper-target\";\r\n\r\nconst EPSILON = 0.00001;\r\n\r\nexport interface ESnapperModifier extends DisplayObject {\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport enum ESnapperModifierAnchor {\r\n\tNONE,\r\n\tTOP_LEFT,\r\n\tTOP_CENTER,\r\n\tTOP_RIGHT,\r\n\tMIDDLE_LEFT,\r\n\tMIDDLE_RIGHT,\r\n\tBOTTOM_LEFT,\r\n\tBOTTOM_CENTER,\r\n\tBOTTOM_RIGHT,\r\n\tROTATION\r\n}\r\n\r\nexport interface ESnapperParentCanvas {\r\n\tscale: {\r\n\t\tx: number,\r\n\t\ty: number\r\n\t};\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport interface ESnapperParent {\r\n\tcanvas: ESnapperParentCanvas | null;\r\n}\r\n\r\nexport class ESnapper extends utils.EventEmitter {\r\n\tprotected _points: Point[];\r\n\tprotected _normals: Point[];\r\n\tprotected _lengths: number[];\r\n\r\n\tprotected _workScale: Point;\r\n\tprotected _workScaleResult: ESnapperResultScale;\r\n\r\n\tprotected _workTranslate: Point;\r\n\r\n\tprotected _workSnap: Point;\r\n\tprotected _workSnapRectangle: Rectangle;\r\n\tprotected _workSnapResultX: ESnapperResult;\r\n\tprotected _workSnapResultY: ESnapperResult;\r\n\r\n\tprotected _parent: ESnapperParent;\r\n\r\n\tprotected _isEnabled: boolean;\r\n\r\n\tgrid: ESnapperGrid;\r\n\r\n\ttarget: ESnapperTarget;\r\n\r\n\tconstructor( parent: ESnapperParent ) {\r\n\t\tsuper();\r\n\r\n\t\tthis._points = [\r\n\t\t\tnew Point(), // Top left\r\n\t\t\tnew Point(), // Top right\r\n\t\t\tnew Point(), // Bottom left\r\n\t\t\tnew Point(), // Bottom right\r\n\t\t\tnew Point()  // Center\r\n\t\t];\r\n\r\n\t\tthis._normals = [\r\n\t\t\tnew Point(),\r\n\t\t\tnew Point()\r\n\t\t];\r\n\r\n\t\tthis._lengths = [\r\n\t\t\t1,\r\n\t\t\t1\r\n\t\t];\r\n\r\n\t\tthis._workScale = new Point();\r\n\t\tthis._workSnapResultX = new ESnapperResult();\r\n\t\tthis._workSnapResultY = new ESnapperResult();\r\n\t\tthis._workScaleResult = {\r\n\t\t\tdistance: 0,\r\n\t\t\tscale: new Point()\r\n\t\t};\r\n\r\n\t\tthis._workTranslate = new Point();\r\n\r\n\t\tthis._workSnapRectangle = new Rectangle();\r\n\t\tthis._workSnap = new Point();\r\n\r\n\t\t// Grid\r\n\t\tthis.grid = new ESnapperGrid();\r\n\r\n\t\t// Target\r\n\t\tthis.target = new ESnapperTarget();\r\n\r\n\t\t//\r\n\t\tthis._parent = parent;\r\n\t\tthis._isEnabled = true;\r\n\t}\r\n\r\n\tisEnabled(): boolean {\r\n\t\treturn this._isEnabled;\r\n\t}\r\n\r\n\ttoggle(): boolean {\r\n\t\tthis._isEnabled = ! this._isEnabled;\r\n\t\tthis.emit( \"change\", this );\r\n\t\treturn this._isEnabled;\r\n\t}\r\n\r\n\tenable(): void {\r\n\t\tif( this._isEnabled !== true ) {\r\n\t\t\tthis._isEnabled = true;\r\n\t\t\tthis.emit( \"change\", this );\r\n\t\t}\r\n\t}\r\n\r\n\tdisable(): void {\r\n\t\tif( this._isEnabled !== false ) {\r\n\t\t\tthis._isEnabled = false;\r\n\t\t\tthis.emit( \"change\", this );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected prepare( modifier: ESnapperModifier ): void {\r\n\t\tmodifier.updateTransform();\r\n\t\tconst localTransform = modifier.transform.localTransform;\r\n\t\tconst sx = modifier.width;\r\n\t\tconst sy = modifier.height;\r\n\r\n\t\tconst points = this._points;\r\n\t\tpoints[ 0 ].set( 0, 0 );\r\n\t\tpoints[ 1 ].set( sx, 0 );\r\n\t\tpoints[ 2 ].set( sx, sy );\r\n\t\tpoints[ 3 ].set( 0, sy );\r\n\t\tpoints[ 4 ].set( sx * 0.5, sy * 0.5 );\r\n\r\n\t\tlocalTransform.apply( points[ 0 ], points[ 0 ] );\r\n\t\tlocalTransform.apply( points[ 1 ], points[ 1 ] );\r\n\t\tlocalTransform.apply( points[ 2 ], points[ 2 ] );\r\n\t\tlocalTransform.apply( points[ 3 ], points[ 3 ] );\r\n\t\tlocalTransform.apply( points[ 4 ], points[ 4 ] );\r\n\t}\r\n\r\n\tprepareForTranslate( modifier: ESnapperModifier ): void {\r\n\t\tif( this._isEnabled ) {\r\n\t\t\tthis.prepare( modifier );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected snap( point: IPoint, result: IPoint ): IPoint {\r\n\t\tconst px = point.x;\r\n\t\tconst py = point.y;\r\n\t\tconst canvas = this._parent.canvas;\r\n\t\tconst x = this._workSnapResultX;\r\n\t\tconst y = this._workSnapResultY;\r\n\r\n\t\t// Canvas\r\n\t\tif( canvas != null ) {\r\n\t\t\tconst scale = Math.max( canvas.scale.x, canvas.scale.y );\r\n\t\t\tx.reset( px, scale );\r\n\t\t\ty.reset( py, scale );\r\n\t\t\tx.set( px, 0 );\r\n\t\t\tx.set( px, canvas.width );\r\n\t\t\ty.set( py, 0 );\r\n\t\t\ty.set( py, canvas.height );\r\n\t\t} else {\r\n\t\t\tx.reset( px, 1 );\r\n\t\t\ty.reset( py, 1 );\r\n\t\t}\r\n\r\n\t\t// Target\r\n\t\tthis.target.snap( px, py, x, y );\r\n\r\n\t\t// Grid\r\n\t\tthis.grid.snap( px, x );\r\n\t\tthis.grid.snap( py, y );\r\n\r\n\t\t//\r\n\t\tresult.x = ( isNaN( x.distance ) ? NaN : x.result );\r\n\t\tresult.y = ( isNaN( y.distance ) ? NaN : y.result );\r\n\t\treturn result;\r\n\t}\r\n\r\n\ttoSnapped( point: IPoint, result: IPoint ): IPoint {\r\n\t\tconst px = point.x;\r\n\t\tconst py = point.y;\r\n\t\tif( this._isEnabled ) {\r\n\t\t\tthis.snap( point, result );\r\n\t\t\tconst x = result.x;\r\n\t\t\tconst y = result.y;\r\n\t\t\tresult.set(\r\n\t\t\t\tisNaN( x ) ? px : x,\r\n\t\t\t\tisNaN( y ) ? py : y\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tresult.set( px, py );\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\ttoTranslationSnapped( delta: IPoint, result: IPoint ): IPoint {\r\n\t\tconst dx = delta.x;\r\n\t\tconst dy = delta.y;\r\n\t\tlet x = NaN;\r\n\t\tlet y = NaN;\r\n\t\tif( this._isEnabled ) {\r\n\t\t\tconst workTranslate = this._workTranslate;\r\n\t\t\tconst points = this._points;\r\n\t\t\tfor( let i = 0, imax = points.length; i < imax; ++i ) {\r\n\t\t\t\tconst point = points[ i ];\r\n\t\t\t\tworkTranslate.set( point.x + dx, point.y + dy );\r\n\t\t\t\tthis.snap( workTranslate, workTranslate );\r\n\r\n\t\t\t\t// X\r\n\t\t\t\tif( ! isNaN( workTranslate.x ) ) {\r\n\t\t\t\t\tconst newDx = workTranslate.x - point.x;\r\n\t\t\t\t\tif( isNaN( x ) || Math.abs( newDx - dx ) < Math.abs( x - dx ) ) {\r\n\t\t\t\t\t\tx = newDx;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Y\r\n\t\t\t\tif( ! isNaN( workTranslate.y ) ) {\r\n\t\t\t\t\tconst newDy = workTranslate.y - point.y;\r\n\t\t\t\t\tif( isNaN( y ) || Math.abs( newDy - dy ) < Math.abs( y - dy ) ) {\r\n\t\t\t\t\t\ty = newDy;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.x = ( isNaN( x ) ? dx : x );\r\n\t\tresult.y = ( isNaN( y ) ? dy : y );\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprepareForRotate( modifier: ESnapperModifier ): void {\r\n\t\t//\r\n\t}\r\n\r\n\tprotected getGridSizeRotation(): number {\r\n\t\treturn 5;\r\n\t}\r\n\r\n\tprotected toRadian( value: number ): number {\r\n\t\treturn value / 180 * Math.PI;\r\n\t}\r\n\r\n\tprotected toDegree( value: number ): number {\r\n\t\treturn value / Math.PI * 180;\r\n\t}\r\n\r\n\ttoRotationSnapped( baseRotation: number, deltaRotation: number ): number {\r\n\t\tif( this._isEnabled ) {\r\n\t\t\tconst gridSize = this.getGridSizeRotation();\r\n\t\t\tconst newRotation = baseRotation + deltaRotation;\r\n\t\t\tconst newRotationDegree = Math.round( this.toDegree( newRotation ) );\r\n\t\t\tconst newRotationDegreeResidual = newRotationDegree % 90;\r\n\t\t\tif( Math.abs( newRotationDegreeResidual ) <= gridSize ) {\r\n\t\t\t\treturn this.toRadian( newRotationDegree - newRotationDegreeResidual ) - baseRotation;\r\n\t\t\t} else {\r\n\t\t\t\tif( 90 - gridSize <= newRotationDegreeResidual ) {\r\n\t\t\t\t\treturn this.toRadian( newRotationDegree + (90 - newRotationDegreeResidual) ) - baseRotation;\r\n\t\t\t\t} else if( newRotationDegreeResidual <= -90 + gridSize ) {\r\n\t\t\t\t\treturn this.toRadian( newRotationDegree - (90 + newRotationDegreeResidual) ) - baseRotation;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn deltaRotation;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn deltaRotation;\r\n\t}\r\n\r\n\tprotected calcNormalizedVector( p0: IPoint, p1: IPoint, result: Point ): number {\r\n\t\tconst dx = p1.x - p0.x;\r\n\t\tconst dy = p1.y - p0.y;\r\n\t\tconst l = Math.sqrt( dx * dx + dy * dy );\r\n\t\tif( EPSILON < l ) {\r\n\t\t\tconst d = 1 / l;\r\n\t\t\tresult.x = dx * d;\r\n\t\t\tresult.y = dy * d;\r\n\t\t} else {\r\n\t\t\tresult.x = 1;\r\n\t\t\tresult.y = 0;\r\n\t\t}\r\n\t\treturn l;\r\n\t}\r\n\r\n\tprepareForScale( modifier: ESnapperModifier, anchor: ESnapperModifierAnchor ): void {\r\n\t\tif( this._isEnabled ) {\r\n\t\t\tthis.prepare( modifier );\r\n\r\n\t\t\tconst points = this._points;\r\n\t\t\tconst normals = this._normals;\r\n\t\t\tconst lengths = this._lengths;\r\n\t\t\tswitch( anchor ) {\r\n\t\t\tcase ESnapperModifierAnchor.TOP_LEFT:\r\n\t\t\t\tlengths[ 0 ] = this.calcNormalizedVector( points[ 1 ], points[ 0 ], normals[ 0 ] );\r\n\t\t\t\tlengths[ 1 ] = this.calcNormalizedVector( points[ 3 ], points[ 0 ], normals[ 1 ] );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.TOP_CENTER:\r\n\t\t\t\tlengths[ 0 ] = this.calcNormalizedVector( points[ 3 ], points[ 0 ], normals[ 0 ] );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.TOP_RIGHT:\r\n\t\t\t\tlengths[ 0 ] = this.calcNormalizedVector( points[ 0 ], points[ 1 ], normals[ 0 ] );\r\n\t\t\t\tlengths[ 1 ] = this.calcNormalizedVector( points[ 2 ], points[ 1 ], normals[ 1 ] );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.MIDDLE_LEFT:\r\n\t\t\t\tlengths[ 0 ] = this.calcNormalizedVector( points[ 1 ], points[ 0 ], normals[ 0 ] );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.NONE:\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.MIDDLE_RIGHT:\r\n\t\t\t\tlengths[ 0 ] = this.calcNormalizedVector( points[ 0 ], points[ 1 ], normals[ 0 ] );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.BOTTOM_LEFT:\r\n\t\t\t\tlengths[ 0 ] = this.calcNormalizedVector( points[ 2 ], points[ 3 ], normals[ 0 ] );\r\n\t\t\t\tlengths[ 1 ] = this.calcNormalizedVector( points[ 0 ], points[ 3 ], normals[ 1 ] );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.BOTTOM_CENTER:\r\n\t\t\t\tlengths[ 0 ] = this.calcNormalizedVector( points[ 0 ], points[ 3 ], normals[ 0 ] );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.BOTTOM_RIGHT:\r\n\t\t\t\tlengths[ 0 ] = this.calcNormalizedVector( points[ 3 ], points[ 2 ], normals[ 0 ] );\r\n\t\t\t\tlengths[ 1 ] = this.calcNormalizedVector( points[ 1 ], points[ 2 ], normals[ 1 ] );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected setScaleSnappedResult(\r\n\t\tdistance: number,\r\n\t\tlength: number,\r\n\t\tmove: number,\r\n\t\taxis: boolean, // true => x axis, false y axis\r\n\t\tresult: ESnapperResultScale\r\n\t): void {\r\n\t\tif( EPSILON < length ) {\r\n\t\t\tif( isNaN( result.distance ) || distance < result.distance ) {\r\n\t\t\t\tresult.distance = distance;\r\n\t\t\t\tconst newScale = 1 + move / length;\r\n\t\t\t\tif( axis ) {\r\n\t\t\t\t\tresult.scale.x = newScale;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.scale.y = newScale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected calcScaleSnapped1D(\r\n\t\ttransform: Matrix,\r\n\t\tpoint: Point,\r\n\t\tnormal: IPoint,\r\n\t\tlength: number,\r\n\t\taxis: boolean,\r\n\t\tresult: ESnapperResultScale\r\n\t): void {\r\n\t\tconst work = this._workScale;\r\n\t\ttransform.apply( point, work );\r\n\t\tconst tx = work.x;\r\n\t\tconst ty = work.y;\r\n\t\tthis.snap( work, work );\r\n\t\tconst x = work.x;\r\n\t\tconst y = work.y;\r\n\r\n\t\t// X coordinate\r\n\t\tif( ! isNaN( x ) ) {\r\n\t\t\tconst nx = Math.abs( normal.x );\r\n\t\t\tif( EPSILON < nx ) {\r\n\t\t\t\tconst dx = (x - tx) / normal.x;\r\n\t\t\t\tconst distance = Math.abs( dx );\r\n\t\t\t\tconst mx = (x - point.x) / normal.x;\r\n\t\t\t\tthis.setScaleSnappedResult( distance, length, mx, axis, result );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Y coordinate\r\n\t\tif( ! isNaN( y ) ) {\r\n\t\t\tconst ny = Math.abs( normal.y );\r\n\t\t\tif( EPSILON < ny ) {\r\n\t\t\t\tconst dy = (y - ty) / normal.y;\r\n\t\t\t\tconst distance = Math.abs( dy );\r\n\t\t\t\tconst my = (y - point.y) / normal.y;\r\n\t\t\t\tthis.setScaleSnappedResult( distance, length, my, axis, result );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected calcScaleSnappedX(\r\n\t\ttransform: Matrix,\r\n\t\tpoint: Point,\r\n\t\tnormal: IPoint,\r\n\t\tlength: number,\r\n\t\tresult: ESnapperResultScale\r\n\t): void {\r\n\t\tthis.calcScaleSnapped1D( transform, point, normal, length, true, result );\r\n\t}\r\n\r\n\tprotected calcScaleSnappedY(\r\n\t\ttransform: Matrix,\r\n\t\tpoint: Point,\r\n\t\tnormal: IPoint,\r\n\t\tlength: number,\r\n\t\tresult: ESnapperResultScale\r\n\t): void {\r\n\t\tthis.calcScaleSnapped1D( transform, point, normal, length, false, result );\r\n\t}\r\n\r\n\tcalcScaleSnapped2D(\r\n\t\ttransform: Matrix, point: Point, normals: IPoint[],\r\n\t\tlengths: number[], result: ESnapperResultScale\r\n\t): void {\r\n\t\tconst work = this._workScale;\r\n\t\ttransform.apply( point, work );\r\n\t\tconst tx = work.x;\r\n\t\tconst ty = work.y;\r\n\r\n\t\tthis.snap( work, work );\r\n\t\tlet x = work.x;\r\n\t\tlet y = work.y;\r\n\t\tif( isNaN( x ) ) {\r\n\t\t\tif( isNaN( y ) ) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tx = tx;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif( isNaN( y ) ) {\r\n\t\t\t\ty = ty;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// (x, y) = (tx, ty) + normalA * a + normalB * b\r\n\t\t// dx = x - tx\r\n\t\t// dy = y - ty\r\n\t\t// V = ( a, b )^T\r\n\t\t// D = ( dx, dy )^T\r\n\t\t// A = | normalA.x normalB.x |\r\n\t\t//     | normalA.y normalB.y |\r\n\t\t// A V = D\r\n\t\t// det A = normalA.x * normalB.y - normalB.x * normalA.y\r\n\t\t// A^-1 = |  normalB.y -normalB.x | / det A\r\n\t\t//        | -normalA.y  normalA.x |\r\n\t\tconst detA = normals[ 0 ].x * normals[ 1 ].y - normals[ 1 ].x * normals[ 0 ].y;\r\n\t\tif( EPSILON < Math.abs( detA ) ) {\r\n\t\t\tconst dx = x - tx;\r\n\t\t\tconst dy = y - ty;\r\n\t\t\tconst distance = Math.abs( dx * dx + dy * dy );\r\n\t\t\tif( isNaN( result.distance ) || distance < result.distance ) {\r\n\t\t\t\tresult.distance = distance;\r\n\t\t\t\tconst mdx = x - point.x;\r\n\t\t\t\tconst mdy = y - point.y;\r\n\t\t\t\tconst mx = ( +normals[ 1 ].y * mdx - normals[ 1 ].x * mdy ) / detA;\r\n\t\t\t\tconst my = ( -normals[ 0 ].y * mdx + normals[ 0 ].x * mdy ) / detA;\r\n\t\t\t\tresult.scale.set(\r\n\t\t\t\t\t1 + mx / lengths[ 0 ],\r\n\t\t\t\t\t1 + my / lengths[ 1 ]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected calcScaleSnappedXY(\r\n\t\ttransform: Matrix,\r\n\t\tpointO: Point,\r\n\t\tpointX: Point,\r\n\t\tpointY: Point,\r\n\t\tnormals: IPoint[],\r\n\t\tlengths: number[],\r\n\t\tresult: ESnapperResultScale\r\n\t): void {\r\n\t\tthis.calcScaleSnapped2D( transform, pointO, normals, lengths, result );\r\n\t\tthis.calcScaleSnappedX( transform, pointY, normals[ 0 ], lengths[ 0 ], result );\r\n\t\tthis.calcScaleSnappedY( transform, pointX, normals[ 1 ], lengths[ 1 ], result );\r\n\t}\r\n\r\n\ttoScaleSnapped(\r\n\t\ttransform: Matrix, anchor: ESnapperModifierAnchor, keepRatio: boolean, scale: IPoint\r\n\t): boolean {\r\n\t\tif( this._isEnabled ) {\r\n\t\t\tconst points = this._points;\r\n\t\t\tconst normals = this._normals;\r\n\t\t\tconst lengths = this._lengths;\r\n\t\t\tconst work = this._workScaleResult;\r\n\t\t\twork.distance = NaN;\r\n\t\t\twork.scale.set( scale.x, scale.y );\r\n\r\n\t\t\tswitch( anchor ) {\r\n\t\t\tcase ESnapperModifierAnchor.TOP_LEFT:\r\n\t\t\t\tthis.calcScaleSnappedXY( transform, points[ 0 ], points[ 1 ], points[ 3 ], normals, lengths, work );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.TOP_CENTER:\r\n\t\t\t\tthis.calcScaleSnappedY( transform, points[ 0 ], normals[ 0 ], lengths[ 0 ], work );\r\n\t\t\t\tthis.calcScaleSnappedY( transform, points[ 1 ], normals[ 0 ], lengths[ 0 ], work );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.TOP_RIGHT:\r\n\t\t\t\tthis.calcScaleSnappedXY( transform, points[ 1 ], points[ 0 ], points[ 2 ], normals, lengths, work );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.MIDDLE_LEFT:\r\n\t\t\t\tthis.calcScaleSnappedX( transform, points[ 0 ], normals[ 0 ], lengths[ 0 ], work );\r\n\t\t\t\tthis.calcScaleSnappedX( transform, points[ 3 ], normals[ 0 ], lengths[ 0 ], work );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.NONE:\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.MIDDLE_RIGHT:\r\n\t\t\t\tthis.calcScaleSnappedX( transform, points[ 1 ], normals[ 0 ], lengths[ 0 ], work );\r\n\t\t\t\tthis.calcScaleSnappedX( transform, points[ 2 ], normals[ 0 ], lengths[ 0 ], work );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.BOTTOM_LEFT:\r\n\t\t\t\tthis.calcScaleSnappedXY( transform, points[ 3 ], points[ 2 ], points[ 0 ], normals, lengths, work );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.BOTTOM_CENTER:\r\n\t\t\t\tthis.calcScaleSnappedY( transform, points[ 2 ], normals[ 0 ], lengths[ 0 ], work );\r\n\t\t\t\tthis.calcScaleSnappedY( transform, points[ 3 ], normals[ 0 ], lengths[ 0 ], work );\r\n\t\t\t\tbreak;\r\n\t\t\tcase ESnapperModifierAnchor.BOTTOM_RIGHT:\r\n\t\t\t\tthis.calcScaleSnappedXY( transform, points[ 2 ], points[ 3 ], points[ 1 ], normals, lengths, work );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif( ! isNaN( work.distance ) ) {\r\n\t\t\t\tscale.copyFrom( work.scale );\r\n\t\t\t\tif( keepRatio ) {\r\n\t\t\t\t\tswitch( anchor ) {\r\n\t\t\t\t\tcase ESnapperModifierAnchor.TOP_LEFT:\r\n\t\t\t\t\tcase ESnapperModifierAnchor.TOP_RIGHT:\r\n\t\t\t\t\tcase ESnapperModifierAnchor.BOTTOM_LEFT:\r\n\t\t\t\t\tcase ESnapperModifierAnchor.BOTTOM_RIGHT:\r\n\t\t\t\t\t\tscale.x = scale.y = Math.max( scale.x, scale.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ESnapperModifierAnchor.TOP_CENTER:\r\n\t\t\t\t\tcase ESnapperModifierAnchor.BOTTOM_CENTER:\r\n\t\t\t\t\t\tscale.x = scale.y;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ESnapperModifierAnchor.MIDDLE_LEFT:\r\n\t\t\t\t\tcase ESnapperModifierAnchor.MIDDLE_RIGHT:\r\n\t\t\t\t\t\tscale.y = scale.x;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ESnapperModifierAnchor.NONE:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treset(): void {\r\n\t\tthis.enable();\r\n\t\tthis.target.reset();\r\n\t\tthis.grid.reset();\r\n\t}\r\n\r\n\tserialize(): DDiagramSerializedSnap {\r\n\t\treturn [\r\n\t\t\t(this._isEnabled ? 1 : 0),\r\n\t\t\tthis.target.serialize(),\r\n\t\t\tthis.grid.serialize()\r\n\t\t];\r\n\t}\r\n\r\n\tdeserialize( serialized: DDiagramSerializedSnap ): void {\r\n\t\tif( serialized[ 0 ] !== 0 ) {\r\n\t\t\tthis.enable();\r\n\t\t} else {\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t\tthis.target.deserialize( serialized[ 1 ] );\r\n\t\tthis.grid.deserialize( serialized[ 2 ] );\r\n\t}\r\n}\r\n"]}