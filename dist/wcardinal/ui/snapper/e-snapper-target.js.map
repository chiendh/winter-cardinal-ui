{"version":3,"file":"e-snapper-target.js","sourceRoot":"","sources":["../../../../src/main/typescript/wcardinal/ui/snapper/e-snapper-target.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { utils } from \"pixi.js\";\r\nimport { DDiagramSerializedSnapTarget, DDiagramSerializedSnapTargetValue } from \"../d-diagram-serialized\";\r\nimport { ESnapperResult } from \"./e-snapper-result\";\r\nimport { ESnapperTargetValue, ESnapperTargetValueType } from \"./e-snapper-target-value\";\r\n\r\nexport class ESnapperTarget extends utils.EventEmitter {\r\n\tvalues: ESnapperTargetValue[];\r\n\tprotected _isVisible: boolean;\r\n\tprotected _isEnabled: boolean;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.values = [];\r\n\t\tthis._isVisible = true;\r\n\t\tthis._isEnabled = true;\r\n\t}\r\n\r\n\tisEnabled(): boolean {\r\n\t\treturn this._isEnabled;\r\n\t}\r\n\r\n\ttoggle(): boolean {\r\n\t\tthis._isEnabled = ! this._isEnabled;\r\n\t\tthis.emit( \"change\", this );\r\n\t\treturn this._isEnabled;\r\n\t}\r\n\r\n\tenable(): void {\r\n\t\tif( this._isEnabled !== true ) {\r\n\t\t\tthis._isEnabled = true;\r\n\t\t\tthis.emit( \"change\", this );\r\n\t\t}\r\n\t}\r\n\r\n\tdisable(): void {\r\n\t\tif( this._isEnabled !== false ) {\r\n\t\t\tthis._isEnabled = false;\r\n\t\t\tthis.emit( \"change\", this );\r\n\t\t}\r\n\t}\r\n\r\n\tadd( target: ESnapperTargetValue, index?: number ): void {\r\n\t\tif( index != null ) {\r\n\t\t\tthis.values.splice( index, 0, target );\r\n\t\t} else {\r\n\t\t\tthis.values.push( target );\r\n\t\t}\r\n\t\tthis.emit( \"change\", this );\r\n\t}\r\n\r\n\tremove( index: number ): void {\r\n\t\tconst values = this.values;\r\n\t\tif( 0 <= index && index < values.length ) {\r\n\t\t\tvalues.splice( index, 1 );\r\n\t\t\tthis.emit( \"change\", this );\r\n\t\t}\r\n\t}\r\n\r\n\tsize(): number {\r\n\t\treturn this.values.length;\r\n\t}\r\n\r\n\treplace( index: number, value: ESnapperTargetValue ): ESnapperTargetValue | null {\r\n\t\tconst values = this.values;\r\n\t\tif( 0 <= index && index < values.length ) {\r\n\t\t\tconst result = values[ index ];\r\n\t\t\tvalues[ index ] = value;\r\n\t\t\tthis.emit( \"change\", this );\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tswap( indexA: number, indexB: number ): void {\r\n\t\tif( indexA !== indexB ) {\r\n\t\t\tconst values = this.values;\r\n\t\t\tconst valueA = values[ indexA ];\r\n\t\t\tvalues[ indexA ] = values[ indexB ];\r\n\t\t\tvalues[ indexB ] = valueA;\r\n\t\t}\r\n\t}\r\n\r\n\tget visible(): boolean {\r\n\t\treturn this._isVisible;\r\n\t}\r\n\r\n\tset visible( visible: boolean ) {\r\n\t\tif( this._isVisible !== visible ) {\r\n\t\t\tthis._isVisible = visible;\r\n\t\t\tthis.emit( \"change\", this );\r\n\t\t}\r\n\t}\r\n\r\n\tsnap( px: number, py: number, x: ESnapperResult, y: ESnapperResult ): void {\r\n\t\tif( this._isEnabled ) {\r\n\t\t\tconst values = this.values;\r\n\t\t\tfor( let i = 0, imax = values.length; i < imax; ++i ) {\r\n\t\t\t\tconst value = values[ i ];\r\n\t\t\t\tif( value.type === ESnapperTargetValueType.VERTICAL ) {\r\n\t\t\t\t\tx.set( px, value.position );\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty.set( py, value.position );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treset(): void {\r\n\t\tthis._isEnabled = true;\r\n\t\tthis._isVisible = true;\r\n\t\tthis.values.length = 0;\r\n\t\tthis.emit( \"change\", this );\r\n\t}\r\n\r\n\tserialize(): DDiagramSerializedSnapTarget {\r\n\t\tconst targets: DDiagramSerializedSnapTargetValue[] = [];\r\n\t\tconst values = this.values;\r\n\t\tfor( let i = 0, imax = values.length; i < imax; ++i ) {\r\n\t\t\ttargets.push( values[ i ].serialize() );\r\n\t\t}\r\n\t\treturn [\r\n\t\t\t(this._isEnabled ? 1 : 0),\r\n\t\t\t(this._isVisible ? 1 : 0),\r\n\t\t\ttargets\r\n\t\t];\r\n\t}\r\n\r\n\tdeserialize( serialized: DDiagramSerializedSnapTarget ): void {\r\n\t\t// Availability\r\n\t\tthis._isEnabled = ( serialized[ 0 ] !== 0 );\r\n\r\n\t\t// Visibility\r\n\t\tthis._isVisible = ( serialized[ 1 ] !== 0 );\r\n\r\n\t\t// Values\r\n\t\tconst sources = serialized[ 2 ];\r\n\t\tconst values = this.values;\r\n\t\tvalues.length = 0;\r\n\t\tfor( let i = 0, imax = sources.length; i < imax; ++i ) {\r\n\t\t\tconst source = sources[ i ];\r\n\t\t\tvalues.push( new ESnapperTargetValue( source[ 0 ], source[ 1 ] ) );\r\n\t\t}\r\n\t\tthis.emit( \"change\", this );\r\n\t}\r\n}\r\n"]}