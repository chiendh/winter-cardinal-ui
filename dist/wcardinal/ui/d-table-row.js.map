{"version":3,"file":"d-table-row.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-row.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { Rectangle, Renderer } from \"pixi.js\";\r\nimport { DBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DLayoutHorizontal, DLayoutHorizontalOptions, DThemeLayoutHorizontal } from \"./d-layout-horizontal\";\r\nimport { DTableCellState } from \"./d-table-cell-state\";\r\nimport { DTableRowState } from \"./d-table-row-state\";\r\n\r\nexport interface DTableRowOptions<\r\n\tROW,\r\n\tCOLUMN,\r\n\tTHEME extends DThemeTableRow = DThemeTableRow\r\n> extends DLayoutHorizontalOptions<THEME> {\r\n\tcolumns?: COLUMN[];\r\n\tfrozen?: number;\r\n\teven?: boolean;\r\n}\r\n\r\nexport interface DThemeTableRow extends DThemeLayoutHorizontal {\r\n\r\n}\r\n\r\nexport interface DTableRowColumn {\r\n\tweight?: number;\r\n\tfrozen?: boolean;\r\n\toffset: number;\r\n}\r\n\r\nexport abstract class DTableRow<\r\n\tROW,\r\n\tCOLUMN extends DTableRowColumn,\r\n\tTHEME extends DThemeTableRow = DThemeTableRow,\r\n\tOPTIONS extends DTableRowOptions<ROW, COLUMN, THEME> = DTableRowOptions<ROW, COLUMN, THEME>\r\n> extends DLayoutHorizontal<THEME, OPTIONS> {\r\n\tprotected _columns!: COLUMN[];\r\n\tprotected _frozen!: number;\r\n\r\n\tconstructor( options: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t}\r\n\r\n\tprotected init( options: OPTIONS ): void {\r\n\t\tsuper.init( options );\r\n\r\n\t\t// State\r\n\t\tconst even = !! options.even;\r\n\t\tif( even ) {\r\n\t\t\tthis.setState( DTableRowState.EVEN, true );\r\n\t\t}\r\n\r\n\t\t// Frozen\r\n\t\tconst frozen = this._frozen = options.frozen ?? 0;\r\n\r\n\t\t// Cells\r\n\t\tconst columns = this._columns = options.columns || [];\r\n\t\tconst iend = this.toIndexEnd( columns );\r\n\t\tfor( let i = 0, imax = columns.length; i < imax; ++i ) {\r\n\t\t\tconst cell = this.newCell( columns[ i ], i, columns, options );\r\n\t\t\tconst cellState = this.toCellState( even, i, iend, frozen );\r\n\t\t\tif( cellState ) {\r\n\t\t\t\tcell.setState( cellState, true );\r\n\t\t\t}\r\n\t\t\tthis.addChild( cell );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toCellState( even: boolean, index: number, iend: number, frozen: number ): DBaseState {\r\n\t\treturn ( even ? DTableCellState.EVEN : DBaseState.NONE ) |\r\n\t\t\t( index === 0 ? DTableCellState.START : DBaseState.NONE ) |\r\n\t\t\t( index === iend ? DTableCellState.END : DBaseState.NONE ) |\r\n\t\t\t( index < frozen ? DTableCellState.FROZEN : DBaseState.NONE ) |\r\n\t\t\t( index === frozen - 1 ? DTableCellState.FROZEN_END : DBaseState.NONE );\r\n\t}\r\n\r\n\tprotected toIndexEnd( columns: COLUMN[] ): number {\r\n\t\tconst imax = columns.length;\r\n\t\tfor( let i = 0; i < imax; ++i ) {\r\n\t\t\tconst column = columns[ i ];\r\n\t\t\tif( column.weight !== undefined ) {\r\n\t\t\t\treturn imax - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn imax;\r\n\t}\r\n\r\n\tprotected onRefit(): void {\r\n\t\tsuper.onRefit();\r\n\t\tthis.resetFrozenCellPosition();\r\n\t}\r\n\r\n\tupdateFrozenCellPosition( x: number ): void {\r\n\t\tconst columns = this._columns;\r\n\t\tconst cells = this.children;\r\n\t\tconst frozen = this._frozen;\r\n\t\tfor( let i = 0; i < frozen; ++i ) {\r\n\t\t\tconst column = columns[ i ];\r\n\t\t\tconst cell = cells[ i ];\r\n\t\t\tcell.position.x = -x + column.offset;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected resetFrozenCellPosition(): void {\r\n\t\tconst columns = this._columns;\r\n\t\tconst cells = this.children;\r\n\t\tconst frozen = this._frozen;\r\n\t\tconst x = this.getContentPositionX();\r\n\t\tfor( let i = 0; i < frozen; ++i ) {\r\n\t\t\tconst column = columns[ i ];\r\n\t\t\tconst cell = cells[ i ];\r\n\t\t\tcolumn.offset = cell.position.x;\r\n\t\t\tcell.position.x = -x + column.offset;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected abstract getContentPositionX(): number;\r\n\r\n\tgetClippingRect( target: DBase, result: Rectangle ): void {\r\n\t\tsuper.getClippingRect( target, result );\r\n\r\n\t\tconst frozen = this._frozen;\r\n\t\tif( 0 < frozen && target.parent === this ) {\r\n\t\t\tconst cells = this.children as DBase[];\r\n\t\t\tconst cellIndex = cells.indexOf( target );\r\n\t\t\tif( 0 <= cellIndex ) {\r\n\t\t\t\tif( frozen <= cellIndex ) {\r\n\t\t\t\t\tconst previous = cells[ cellIndex - 1 ];\r\n\t\t\t\t\tconst shiftX = previous.position.x + previous.width;\r\n\t\t\t\t\tresult.x += shiftX;\r\n\t\t\t\t\tresult.width -= shiftX;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender( renderer: Renderer ) {\r\n\t\tif( this.visible && 0 < this.worldAlpha && this.renderable ) {\r\n\t\t\tthis.renderBefore( renderer );\r\n\t\t\tthis._render( renderer );\r\n\t\t\tconst children = this.children;\r\n\t\t\tfor( let i = children.length - 1; 0 <= i; --i ) {\r\n\t\t\t\tchildren[ i ].render( renderer );\r\n\t\t\t}\r\n\t\t\tthis.renderAfter( renderer );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected abstract newCell(\r\n\t\tcolumn: COLUMN,\r\n\t\tcolumnIndex: number,\r\n\t\tcolumns: COLUMN[],\r\n\t\toptions: OPTIONS\r\n\t): DBase;\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTableRow\";\r\n\t}\r\n}\r\n"]}