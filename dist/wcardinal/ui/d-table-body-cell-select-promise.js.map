{"version":3,"file":"d-table-body-cell-select-promise.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-body-cell-select-promise.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DButton, DButtonOptions, DThemeButton } from \"./d-button\";\r\nimport { DTableBodyCell, DTableBodyCellOptions } from \"./d-table-body-cell\";\r\nimport { DTableBodyCells } from \"./d-table-body-cells\";\r\nimport { DTableColumn } from \"./d-table-column\";\r\n\r\nexport interface DTableBodyCellSelectPromiseOptions<\r\n\tROW = unknown,\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeTableBodyCellSelectPromise = DThemeTableBodyCellSelectPromise\r\n> extends DButtonOptions<VALUE, THEME>, DTableBodyCellOptions<ROW> {\r\n\t/**\r\n\t * False to stop synchronizing the resolved value and the text.\r\n\t */\r\n\tsync?: boolean;\r\n}\r\n\r\nexport interface DThemeTableBodyCellSelectPromise extends DThemeButton {\r\n\tisSyncEnabled(): boolean;\r\n}\r\n\r\nexport class DTableBodyCellSelectPromise<\r\n\tROW = unknown,\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeTableBodyCellSelectPromise = DThemeTableBodyCellSelectPromise,\r\n\tOPTIONS extends DTableBodyCellSelectPromiseOptions<ROW, VALUE, THEME> =\r\n\t\tDTableBodyCellSelectPromiseOptions<ROW, VALUE, THEME>\r\n> extends DButton<VALUE, THEME, OPTIONS> implements DTableBodyCell<ROW> {\r\n\tprotected _row?: ROW;\r\n\tprotected _rowIndex!: number;\r\n\tprotected _columnIndex!: number;\r\n\tprotected _columnData!: DTableColumn<ROW>;\r\n\tprotected _isSyncEnabled!: boolean;\r\n\r\n\tconstructor( options: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t}\r\n\r\n\tprotected init( options: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\t\tconst column = options.column;\r\n\t\tthis._rowIndex = 0;\r\n\t\tthis._columnIndex = column.index;\r\n\t\tthis._columnData = column.data;\r\n\t\tthis._isSyncEnabled = this.toSync( this.theme, options );\r\n\t\tconst selecting = column.data.selecting;\r\n\t\tconst promise = selecting.promise;\r\n\t\tif( promise != null ) {\r\n\t\t\tthis.on( \"active\", (): void => {\r\n\t\t\t\tpromise().then(( newValue: unknown ): void => {\r\n\t\t\t\t\tif( this._isSyncEnabled ) {\r\n\t\t\t\t\t\tconst oldValue = this.text;\r\n\t\t\t\t\t\tif( newValue !== oldValue ) {\r\n\t\t\t\t\t\t\tthis.text = newValue as VALUE;\r\n\t\t\t\t\t\t\tthis.onCellChange( newValue, oldValue );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.onCellChange( newValue, null );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onCellChange( newValue: unknown, oldValue: unknown ): void {\r\n\t\tconst row = this._row;\r\n\t\tif( row !== undefined ) {\r\n\t\t\tconst rowIndex = this._rowIndex;\r\n\t\t\tconst columnIndex = this._columnIndex;\r\n\t\t\tthis._columnData.setter( row, columnIndex, newValue );\r\n\t\t\tthis.emit( \"cellchange\", newValue, oldValue, row, rowIndex, columnIndex, this );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toSync( theme: THEME, options: OPTIONS ): boolean {\r\n\t\treturn ( options && options.sync != null ? options.sync : theme.isSyncEnabled() );\r\n\t}\r\n\r\n\tprotected mergeState( stateLocal: DBaseState, stateParent: DBaseState ): DBaseState {\r\n\t\treturn super.mergeState( stateLocal, stateParent ) |\r\n\t\t\t( stateParent & DBaseState.HOVERED ? DBaseState.HOVERED : DBaseState.NONE );\r\n\t}\r\n\r\n\tget value(): VALUE {\r\n\t\treturn this._textValueComputed;\r\n\t}\r\n\r\n\tset value( value: VALUE ) {\r\n\t\tthis.text = value;\r\n\t}\r\n\r\n\tset(\r\n\t\tvalue: unknown, row: ROW, supplimental: unknown,\r\n\t\trowIndex: number, columnIndex: number,\r\n\t\tforcibly?: boolean\r\n\t): void {\r\n\t\tthis._row = row;\r\n\t\tthis._rowIndex = rowIndex;\r\n\t\tif( forcibly ) {\r\n\t\t\tthis._textValue = value as VALUE;\r\n\t\t\tthis._textValueComputed = value as VALUE;\r\n\t\t\tthis.onTextChange();\r\n\t\t\tthis.createOrUpdateText();\r\n\t\t} else {\r\n\t\t\tthis.text = value as VALUE;\r\n\t\t}\r\n\r\n\t\tconst columnData = this._columnData;\r\n\t\tDTableBodyCells.setReadOnly( this, row, columnIndex, columnData );\r\n\t\tDTableBodyCells.setRenderable( this, row, columnIndex, columnData );\r\n\t}\r\n\r\n\tunset(): void {\r\n\t\tthis._row = undefined;\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTableBodyCellSelectPromise\";\r\n\t}\r\n}\r\n"]}