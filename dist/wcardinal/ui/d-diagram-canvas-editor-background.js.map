{"version":3,"file":"d-diagram-canvas-editor-background.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-diagram-canvas-editor-background.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAMH,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAE1C;IAIC,wCAAa,MAA6B,EAAE,IAAmB;QAC9D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,iDAAQ,GAAR;QACC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;IAED,iDAAQ,GAAR,UAAU,KAAiB;QAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IAChC,CAAC;IAED,qDAAY,GAAZ;QACC,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAED,qDAAY,GAAZ,UAAc,SAAwB;QACrC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACxB,CAAC;IAED,iDAAQ,GAAR,UAAU,KAAiB;QAC1B,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;QACvC,IAAI,IAAI,IAAI,IAAI,EAAG;YAClB,IAAI,KAAK,IAAI,IAAI,EAAG;gBACnB,OAAO,OAAO,CAAC,KAAK,CAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAE,CAAC;aAC9D;YACD,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED,sBAAI,iDAAK;aAAT;YACC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC3B,CAAC;aAED,UAAW,KAA+C;YACzD,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,iDAAQ,GAAR,UAAU,KAAiB;QAC1B,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,IAAI,IAAI,IAAI,EAAG;YAClB,OAAO,CAAC,CAAC;SACT;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;IACvC,CAAC;IAED,sBAAI,iDAAK;aAAT;YACC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC3B,CAAC;aAED,UAAW,KAAwC;YAClD,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAKF,qCAAC;AAAD,CAAC,AA7DD,IA6DC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBackgroundStateAware } from \"./d-background\";\r\nimport { DThemeBase } from \"./d-base\";\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DStateAwareOrValueMightBe } from \"./d-state-aware\";\r\nimport { UtilRgb } from \"./util/util-rgb\";\r\n\r\nexport class DDiagramCanvasEditorBackground implements DBackgroundStateAware {\r\n\tprotected _target: DBackgroundStateAware;\r\n\tprotected _base: number | null;\r\n\r\n\tconstructor( target: DBackgroundStateAware, base: number | null ) {\r\n\t\tthis._target = target;\r\n\t\tthis._base = base;\r\n\t}\r\n\r\n\tgetTheme(): DThemeBase {\r\n\t\treturn this._target.getTheme();\r\n\t}\r\n\r\n\tsetTheme( theme: DThemeBase ): void {\r\n\t\tthis._target.setTheme( theme );\r\n\t}\r\n\r\n\tgetBaseColor(): number | null {\r\n\t\treturn this._base;\r\n\t}\r\n\r\n\tsetBaseColor( baseColor: number | null ): void {\r\n\t\tthis._base = baseColor;\r\n\t}\r\n\r\n\tgetColor( state: DBaseState ): number | null {\r\n\t\tconst target = this._target;\r\n\t\tconst base = this._base;\r\n\t\tconst color = target.getColor( state );\r\n\t\tif( base != null ) {\r\n\t\t\tif( color != null ) {\r\n\t\t\t\treturn UtilRgb.blend( base, color, target.getAlpha( state ) );\r\n\t\t\t}\r\n\t\t\treturn base;\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\r\n\tget color(): DStateAwareOrValueMightBe<number | null> {\r\n\t\treturn this._target.color;\r\n\t}\r\n\r\n\tset color( color: DStateAwareOrValueMightBe<number | null> ) {\r\n\t\tthis._target.color = color;\r\n\t}\r\n\r\n\tgetAlpha( state: DBaseState ): number {\r\n\t\tconst base = this._base;\r\n\t\tif( base != null ) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn this._target.getAlpha( state );\r\n\t}\r\n\r\n\tget alpha(): DStateAwareOrValueMightBe<number> {\r\n\t\treturn this._target.alpha;\r\n\t}\r\n\r\n\tset alpha( alpha: DStateAwareOrValueMightBe<number> ) {\r\n\t\tthis._target.alpha = alpha;\r\n\t}\r\n}\r\n"]}