{"version":3,"file":"d-picker-times.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-picker-times.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAE/D,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAC3C,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAE5C;IAAA;IAyBA,CAAC;IAxBO,mBAAM,GAAb,UAAe,IAAU,EAAE,IAAyB;QACnD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,GAAG,mBAAmB,CAAC,KAAK,EAAG;YACtC,MAAM,IAAI,QAAQ,CAAE,MAAM,CAAE,IAAI,CAAC,QAAQ,EAAE,CAAE,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;SACxD;QACD,IAAI,IAAI,GAAG,mBAAmB,CAAC,OAAO,EAAG;YACxC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAG;gBACvB,MAAM,IAAI,GAAG,CAAC;aACd;YACD,MAAM,IAAI,QAAQ,CAAE,MAAM,CAAE,IAAI,CAAC,UAAU,EAAE,CAAE,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;SAC1D;QACD,IAAI,IAAI,GAAG,mBAAmB,CAAC,OAAO,EAAG;YACxC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAG;gBACvB,MAAM,IAAI,GAAG,CAAC;aACd;YACD,MAAM,IAAI,QAAQ,CAAE,MAAM,CAAE,IAAI,CAAC,UAAU,EAAE,CAAE,EAAE,CAAC,EAAE,GAAG,CAAE,CAAC;SAC1D;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAEM,mBAAM,GAAb,UAAe,OAAwC;QACtD,OAAO,CAAE,OAAO,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACvD,OAAO,CAAC,WAAW,EAAE,CAAC,GAAG,CAAE,aAAa,CAAuB,CAAC,OAAO,EAAE,CAAE,CAAC;IAC/E,CAAC;IACF,mBAAC;AAAD,CAAC,AAzBD,IAyBC","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DPickerDatetimeMask } from \"./d-picker-datetime-mask\";\r\nimport { DThemePickerTime } from \"./d-picker-time\";\r\nimport { DThemes } from \"./theme/d-themes\";\r\nimport { toPadded } from \"./util/to-padded\";\r\n\r\nexport class DPickerTimes {\r\n\tstatic format( date: Date, mask: DPickerDatetimeMask ): string {\r\n\t\tlet result = \"\";\r\n\t\tif( mask & DPickerDatetimeMask.HOURS ) {\r\n\t\t\tresult += toPadded( String( date.getHours() ), 2, \"0\" );\r\n\t\t}\r\n\t\tif( mask & DPickerDatetimeMask.MINUTES ) {\r\n\t\t\tif( 0 < result.length ) {\r\n\t\t\t\tresult += \":\";\r\n\t\t\t}\r\n\t\t\tresult += toPadded( String( date.getMinutes() ), 2, \"0\" );\r\n\t\t}\r\n\t\tif( mask & DPickerDatetimeMask.SECONDS ) {\r\n\t\t\tif( 0 < result.length ) {\r\n\t\t\t\tresult += \":\";\r\n\t\t\t}\r\n\t\t\tresult += toPadded( String( date.getSeconds() ), 2, \"0\" );\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic toMask( options?: { mask?: DPickerDatetimeMask } ): DPickerDatetimeMask {\r\n\t\treturn ( options && options.mask != null ? options.mask :\r\n\t\t\t(DThemes.getInstance().get( \"DPickerTime\" ) as DThemePickerTime).getMask() );\r\n\t}\r\n}\r\n"]}