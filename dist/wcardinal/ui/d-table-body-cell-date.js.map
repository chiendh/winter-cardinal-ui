{"version":3,"file":"d-table-body-cell-date.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-table-body-cell-date.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DButton, DButtonOptions, DThemeButton } from \"./d-button\";\r\nimport { DDialogDate, DDialogDateOptions } from \"./d-dialog-date\";\r\nimport { DDialogDates } from \"./d-dialog-dates\";\r\nimport { DTableBodyCell, DTableBodyCellOptions } from \"./d-table-body-cell\";\r\nimport { DTableBodyCells } from \"./d-table-body-cells\";\r\nimport { DTableColumn } from \"./d-table-column\";\r\nimport { isNumber } from \"./util/is-number\";\r\n\r\nexport interface DTableBodyCellDateOptions<\r\n\tROW = unknown,\r\n\tTHEME extends DThemeTableBodyCellDate = DThemeTableBodyCellDate\r\n> extends DButtonOptions<Date, THEME>, DTableBodyCellOptions<ROW> {\r\n\tdialog?: DDialogDateOptions;\r\n}\r\n\r\nexport interface DThemeTableBodyCellDate extends DThemeButton {\r\n\tgetTextFormatter(): ( value: Date, caller: DTableBodyCellDate ) => string;\r\n\tgetTextValue( state: DBaseState ): Date;\r\n\tnewTextValue(): Date;\r\n}\r\n\r\nexport class DTableBodyCellDate<\r\n\tROW = unknown,\r\n\tTHEME extends DThemeTableBodyCellDate = DThemeTableBodyCellDate,\r\n\tOPTIONS extends DTableBodyCellDateOptions<ROW, THEME> = DTableBodyCellDateOptions<ROW, THEME>\r\n> extends DButton<Date, THEME, OPTIONS> implements DTableBodyCell<ROW> {\r\n\tprotected _dialog?: DDialogDate;\r\n\tprotected _dialogOptions?: DDialogDateOptions;\r\n\tprotected _row?: ROW;\r\n\tprotected _rowIndex!: number;\r\n\tprotected _columnIndex!: number;\r\n\tprotected _columnData!: DTableColumn<ROW>;\r\n\r\n\tconstructor( options: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t}\r\n\r\n\tprotected init( options: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tthis._dialogOptions = options.dialog;\r\n\t\tthis._rowIndex = 0;\r\n\t\tthis._columnIndex = options.column.index;\r\n\t\tthis._columnData = options.column.data;\r\n\r\n\t\tthis.on( \"active\", (): void => {\r\n\t\t\tconst currentTime = this._textValueComputed.getTime();\r\n\t\t\tconst dialog = this.dialog;\r\n\t\t\tdialog.current = new Date( currentTime );\r\n\t\t\tdialog.new = new Date( currentTime );\r\n\t\t\tdialog.page = new Date( currentTime );\r\n\t\t\tdialog.open().then((): void => {\r\n\t\t\t\tconst newValue = dialog.new;\r\n\t\t\t\tconst oldValue = dialog.current;\r\n\t\t\t\tthis.text = new Date( newValue.getTime() );\r\n\t\t\t\tconst row = this._row;\r\n\t\t\t\tif( row !== undefined ) {\r\n\t\t\t\t\tconst rowIndex = this._rowIndex;\r\n\t\t\t\t\tconst columnIndex = this._columnIndex;\r\n\t\t\t\t\tthis._columnData.setter( row, columnIndex, newValue );\r\n\t\t\t\t\tthis.emit( \"cellchange\", newValue, oldValue, row, rowIndex, columnIndex, this );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprotected mergeState( stateLocal: DBaseState, stateParent: DBaseState ): DBaseState {\r\n\t\treturn super.mergeState( stateLocal, stateParent ) |\r\n\t\t\t( stateParent & DBaseState.HOVERED ? DBaseState.HOVERED : DBaseState.NONE );\r\n\t}\r\n\r\n\tget dialog(): DDialogDate {\r\n\t\tlet dialog = this._dialog;\r\n\t\tif( dialog == null ) {\r\n\t\t\tconst dialogOptions = this._dialogOptions;\r\n\t\t\tif( dialogOptions != null ) {\r\n\t\t\t\tdialog = new DDialogDate( this._dialogOptions );\r\n\t\t\t} else {\r\n\t\t\t\tdialog = DDialogDates.getInstance();\r\n\t\t\t}\r\n\t\t\tthis._dialog = dialog;\r\n\t\t}\r\n\t\treturn dialog;\r\n\t}\r\n\r\n\tset(\r\n\t\tvalue: unknown, row: ROW, supplimental: unknown,\r\n\t\trowIndex: number, columnIndex: number,\r\n\t\tforcibly?: boolean\r\n\t): void {\r\n\t\tthis._row = row;\r\n\t\tthis._rowIndex = rowIndex;\r\n\t\tif( value instanceof Date ) {\r\n\t\t\tif( forcibly ) {\r\n\t\t\t\tthis._textValue = value;\r\n\t\t\t\tthis._textValueComputed = value;\r\n\t\t\t\tthis.onTextChange();\r\n\t\t\t\tthis.createOrUpdateText();\r\n\t\t\t} else {\r\n\t\t\t\tthis.text = value;\r\n\t\t\t}\r\n\t\t} else if( isNumber( value ) ) {\r\n\t\t\tconst textValueComputed = this._textValueComputed;\r\n\t\t\tif( textValueComputed.getTime() !== value ) {\r\n\t\t\t\ttextValueComputed.setTime( value );\r\n\t\t\t\tthis.onTextChange();\r\n\t\t\t\tthis.createOrUpdateText();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst columnData = this._columnData;\r\n\t\tDTableBodyCells.setReadOnly( this, row, columnIndex, columnData );\r\n\t\tDTableBodyCells.setRenderable( this, row, columnIndex, columnData );\r\n\t}\r\n\r\n\tunset(): void {\r\n\t\tthis._row = undefined;\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DTableBodyCellDate\";\r\n\t}\r\n}\r\n"]}