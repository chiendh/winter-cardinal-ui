{"version":3,"file":"d-dialog-input-text.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-dialog-input-text.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAEH,OAAO,EAAE,cAAc,EAA8C,MAAM,oBAAoB,CAAC;AAChG,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAc9D;IAGU,oCAA8B;IAHxC;;IAkDA,CAAC;IA5CU,iCAAM,GAAhB,UAAkB,MAAuB,EAAE,OAAiB;QAA5D,iBA2BC;QA1BA,iBAAM,MAAM,YAAE,MAAM,EAAE,OAAO,CAAE,CAAC;QAEhC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,kBAAkB,CAAC;YAC5C,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM;YAChC,KAAK,EAAE;gBACN,MAAM,EAAE,CAAC;gBACT,EAAE,EAAE;oBACH,KAAK,EAAE;wBACN,KAAI,CAAC,IAAI,EAAE,CAAC;oBACb,CAAC;iBACD;aACD;YACD,KAAK,EAAE;gBACN,KAAK,EAAE,KAAK,CAAC,aAAa,EAAE;gBAC5B,IAAI,EAAE;oBACL,KAAK,EAAE,CAAE,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC;wBAClD,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAChC;iBACD;aACD;YACD,KAAK,EAAE;gBACN,KAAK,EAAE,KAAK,CAAC,aAAa,EAAE;aAC5B;SACD,CAAC,CAAC;IACJ,CAAC;IAED,sBAAI,mCAAK;aAAT;YACC,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAI,mCAAK;aAAT;YACC,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;QACxC,CAAC;aAED,UAAW,KAAa;YACvB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACzC,CAAC;;;OAJA;IAMS,kCAAO,GAAjB;QACC,OAAO,kBAAkB,CAAC;IAC3B,CAAC;IACF,uBAAC;AAAD,CAAC,AAlDD,CAGU,cAAc,GA+CvB","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DDialogCommand, DDialogCommandOptions, DThemeDialogCommand } from \"./d-dialog-command\";\r\nimport { DInputTextAndLabel } from \"./d-input-text-and-label\";\r\nimport { DLayoutVertical } from \"./d-layout-vertical\";\r\n\r\nexport interface DDialogInputTextOptions<\r\n\tTHEME extends DThemeDialogInputText\r\n> extends DDialogCommandOptions<THEME> {\r\n\tlabel?: string;\r\n}\r\n\r\nexport interface DThemeDialogInputText extends DThemeDialogCommand {\r\n\tgetLabel(): string;\r\n\tgetLabelWidth(): number;\r\n}\r\n\r\nexport class DDialogInputText<\r\n\tTHEME extends DThemeDialogInputText = DThemeDialogInputText,\r\n\tOPTIONS extends DDialogInputTextOptions<THEME> = DDialogInputTextOptions<THEME>\r\n> extends DDialogCommand<THEME, OPTIONS> {\r\n\tprotected _inputAndLabel!: DInputTextAndLabel;\r\n\r\n\tprotected onInit( layout: DLayoutVertical, options?: OPTIONS ) {\r\n\t\tsuper.onInit( layout, options );\r\n\r\n\t\tconst theme = this.theme;\r\n\t\tthis._inputAndLabel = new DInputTextAndLabel({\r\n\t\t\tparent: layout,\r\n\t\t\twidth: \"padding\", height: \"auto\",\r\n\t\t\tinput: {\r\n\t\t\t\tweight: 1,\r\n\t\t\t\ton: {\r\n\t\t\t\t\tenter: () => {\r\n\t\t\t\t\t\tthis.onOk();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlabel: {\r\n\t\t\t\twidth: theme.getLabelWidth(),\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tvalue: ( options != null && options.label != null ?\r\n\t\t\t\t\t\toptions.label : theme.getLabel()\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspace: {\r\n\t\t\t\twidth: theme.getLabelWidth()\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tget input() {\r\n\t\treturn this._inputAndLabel.input;\r\n\t}\r\n\r\n\tget value(): string {\r\n\t\treturn this._inputAndLabel.input.value;\r\n\t}\r\n\r\n\tset value( value: string ) {\r\n\t\tthis._inputAndLabel.input.value = value;\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DDialogInputText\";\r\n\t}\r\n}\r\n"]}