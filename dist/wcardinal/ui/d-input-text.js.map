{"version":3,"file":"d-input-text.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-input-text.ts"],"names":[],"mappings":"AAAA;;;GAGG;;AAGH,OAAO,EAAE,MAAM,EAA8B,MAAM,WAAW,CAAC;AAkB/D;IAGU,8BAA8B;IAHxC;;IAeA,CAAC;IAXU,4BAAO,GAAjB,UAAmB,aAAqB;QACvC,OAAO,IAAI,CAAC,mBAAmB,CAAE,aAAa,EAAE,IAAI,CAAE,CAAC;IACxD,CAAC;IAES,iCAAY,GAAtB;QACC,OAAO,MAAM,CAAC;IACf,CAAC;IAES,4BAAO,GAAjB;QACC,OAAO,YAAY,CAAC;IACrB,CAAC;IACF,iBAAC;AAAD,CAAC,AAfD,CAGU,MAAM,GAYf","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DBaseState } from \"./d-base-state\";\r\nimport { DInput, DInputOptions, DThemeInput } from \"./d-input\";\r\nimport { DStateAwareOrValueMightBe } from \"./d-state-aware\";\r\n\r\nexport interface DInputTextOptions<\r\n\tTHEME extends DThemeInputText = DThemeInputText\r\n> extends DInputOptions<string, THEME> {\r\n\r\n}\r\n\r\nexport interface DThemeInputText extends DThemeInput {\r\n\tgetEditingFormatter(): ( value: string, caller: any ) => string;\r\n\tgetEditingUnformatter(): ( text: string, caller: any ) => string;\r\n\tgetEditingValidator(): ( value: string, caller: any ) => unknown;\r\n\tgetTextFormatter(): ( value: string, caller: any ) => string;\r\n\tgetTextValue( state: DBaseState ): string;\r\n\tnewTextValue(): DStateAwareOrValueMightBe<string>;\r\n}\r\n\r\nexport class DInputText<\r\n\tTHEME extends DThemeInputText = DThemeInputText,\r\n\tOPTIONS extends DInputTextOptions<THEME> = DInputTextOptions<THEME>\r\n> extends DInput<string, THEME, OPTIONS> {\r\n\tprotected toValue( valueAsString: string ): string {\r\n\t\treturn this._editingUnformatter( valueAsString, this );\r\n\t}\r\n\r\n\tprotected getInputType(): string {\r\n\t\treturn \"text\";\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DInputText\";\r\n\t}\r\n}\r\n"]}