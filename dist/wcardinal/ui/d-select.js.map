{"version":3,"file":"d-select.js","sourceRoot":"","sources":["../../../src/main/typescript/wcardinal/ui/d-select.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2019 Toshiba Corporation\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport { DDropdownBase, DDropdownBaseOnOptions, DDropdownBaseOptions, DThemeDropdownBase } from \"./d-dropdown-base\";\r\nimport { DMenu } from \"./d-menu\";\r\nimport { DMenuItem } from \"./d-menu-item\";\r\nimport { DMenuItemMenu } from \"./d-menu-item-menu\";\r\n\r\nexport interface DSelectOnOptions<VALUE> extends DDropdownBaseOnOptions<VALUE, DMenuItem<VALUE> | null> {\r\n\t/**\r\n\t * Called when a selection is changed.\r\n\t */\r\n\tchange?: ( newValue: VALUE | null, oldValue: VALUE | null, item: DMenuItem<VALUE> | null, self: any ) => void;\r\n}\r\n\r\n/**\r\n * DSelect options.\r\n */\r\nexport interface DSelectOptions<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeSelect = DThemeSelect\r\n> extends DDropdownBaseOptions<VALUE, DMenuItem<VALUE> | null, THEME> {\r\n\t/**\r\n\t * A default value.\r\n\t */\r\n\tvalue?: VALUE;\r\n\r\n\ton?: DSelectOnOptions<VALUE>;\r\n}\r\n\r\nexport interface DThemeSelect extends DThemeDropdownBase<DMenuItem<any> | null> {\r\n\r\n}\r\n\r\nexport class DSelect<\r\n\tVALUE = unknown,\r\n\tTHEME extends DThemeSelect = DThemeSelect,\r\n\tOPTIONS extends DSelectOptions<VALUE, THEME> = DSelectOptions<VALUE, THEME>\r\n> extends DDropdownBase<VALUE, DMenuItem<VALUE> | null, THEME, OPTIONS> {\r\n\tprotected _value!: VALUE | null;\r\n\tprotected _onSelectedBound!: ( value: VALUE, child: DMenuItem<VALUE> ) => void;\r\n\tprotected _onClosedBound!: () => void;\r\n\r\n\tconstructor( options?: OPTIONS ) {\r\n\t\tsuper( options );\r\n\t}\r\n\r\n\tprotected init( options?: OPTIONS ) {\r\n\t\tsuper.init( options );\r\n\r\n\t\tthis._onSelectedBound = ( value: VALUE, child: DMenuItem<VALUE> ): void => {\r\n\t\t\tthis.onSelected( value, child, true );\r\n\t\t};\r\n\t\tthis._onClosedBound = (): void => {\r\n\t\t\tthis.onClosed();\r\n\t\t};\r\n\r\n\t\t// Default value\r\n\t\tthis._value = null;\r\n\t\tif( options && options.value !== undefined ) {\r\n\t\t\tthis.value = options.value;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onSelected( newValue: VALUE | null, item: DMenuItem<VALUE> | null, emit: boolean ): void {\r\n\t\tif( this._value !== newValue ) {\r\n\t\t\t// Value\r\n\t\t\tconst oldValue = this._value;\r\n\t\t\tthis._value = newValue;\r\n\r\n\t\t\t// Text\r\n\t\t\tthis.text = item;\r\n\r\n\t\t\t// Event\r\n\t\t\tif( emit ) {\r\n\t\t\t\tthis.emit( \"change\", newValue, oldValue, item,  this );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onClosed(): void {\r\n\t\tconst menu = this.menu;\r\n\t\tmenu.off( \"select\", this._onSelectedBound );\r\n\t\tmenu.off( \"close\", this._onClosedBound );\r\n\t}\r\n\r\n\tstart(): void {\r\n\t\tconst menu = this.menu;\r\n\t\tmenu.on( \"select\", this._onSelectedBound );\r\n\t\tmenu.on( \"close\", this._onClosedBound );\r\n\t\tsuper.start();\r\n\t}\r\n\r\n\tprotected findMenuItem( menu: DMenu<VALUE>, value: VALUE | null ): DMenuItem<VALUE> | null {\r\n\t\tconst children = menu.children;\r\n\t\tfor( let i = 0, imax = children.length; i < imax; ++i ) {\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tif( child instanceof DMenuItemMenu ) {\r\n\t\t\t\tconst result = this.findMenuItem( child.menu, value );\r\n\t\t\t\tif( result != null ) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t} else if( child instanceof DMenuItem ) {\r\n\t\t\t\tif( child.value === value ) {\r\n\t\t\t\t\treturn child;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a selected value or null.\r\n\t */\r\n\tget value(): VALUE | null {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets to the specified value.\r\n\t */\r\n\tset value( value: VALUE | null ) {\r\n\t\tconst item = this.findMenuItem( this.menu, value );\r\n\t\tif( item != null ) {\r\n\t\t\tthis.onSelected( value, item, false );\r\n\t\t} else {\r\n\t\t\tthis.onSelected( null, null, false );\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getType(): string {\r\n\t\treturn \"DSelect\";\r\n\t}\r\n}\r\n"]}